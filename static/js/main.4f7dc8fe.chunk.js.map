{"version":3,"sources":["state.ts","card/cardGroup.ts","styles/renderedCard.ts","util/string.ts","util/wordWrap.ts","card/RenderedCard.tsx","styles/editor/index.ts","util/file.ts","editor/AutoResizeTextArea.tsx","styles/editor/group.ts","editor/GroupSettings.tsx","editor/CardSettings.tsx","editor/Editor.tsx","styles/contextMenu.ts","explorer/ContextMenu.tsx","styles/explorer/index.ts","styles/explorer/cardGroup.ts","styles/explorer/card.ts","explorer/CardComponent.tsx","explorer/CardGroupComponent.tsx","explorer/Explorer.tsx","util/useIsTop.ts","styles/modal.ts","explorer/Modal.tsx","registerServiceWorker.ts","styles/app.ts","styles/global.ts","UpdateModal.tsx","App.tsx","index.tsx"],"names":["SelectionType","CardGroup","persist","name","defaults","cards","this","_cards","card","undefined","push","oldpos","newpos","splice","i","key","value","Object","entries","filter","reduce","pre","k","v","map","data","observable","action","GlobalState","group","_selection","type","None","Group","Card","_groups","x","GlobalStateContext","createContext","RenderedCard","styled","svg","attrs","fontFamily","height","viewBox","width","CardText","text","props","fontSize","textAnchor","ExpandedText","bulletLists","replace","hashCode","s","hash","length","charCodeAt","wordWrapSVG","outputElement","split","initialOffset","words","elems","tspanElement","document","createElementNS","textNode","createTextNode","setAttribute","baseVal","valueAsString","attributes","getNamedItem","appendChild","some","textContent","parseFloat","firstChild","console","error","len","getComputedTextLength","slice","wordWrapOneLineSVG","a","b","CardFront","state","useContext","physComponentsRef","createRef","physComponentsBakgroundRef","descriptionRef","extDescriptionRef","extDescriptionTitleRef","useObserver","selection","groups","useEffect","currHeight","physComp","current","physCompBkg","desc","extDesc","extDescTitle","physicalComponents","toString","removeAttribute","description","extDescription","innerHTML","durationConc","duration","toLowerCase","match","durationCap","charAt","toUpperCase","cardlevel","parseInt","level","cardType","isNaN","j","ordinalSuffixOf","color","fill","y","rx","ry","x1","y1","x2","y2","stroke","strokeWidth","castingTime","range","components","display","points","dominantBaseline","ref","fontWeight","letterSpacing","clazz","CardBackDyn","useMemo","image","href","CardBack","outImages","g","c","hashed","h","id","EditorContainer","div","EditorValues","EditorEmpty","EditorCenter","EditorTitle","EditorLabel","label","EditorInput","input","EditorTextArea","textarea","EditorImage","img","textFileReaderAsync","file","Promise","resolve","reject","reader","FileReader","readAsText","onload","_","result","Error","onerror","dataFileReaderAsync","readAsDataURL","download","filename","link","createElement","url","URL","createObjectURL","Blob","JSON","stringify","body","click","setTimeout","removeChild","revokeObjectURL","load","addGroup","fromData","select","addCard","alert","AutoResizeTextArea","memo","resize","useCallback","style","scrollHeight","window","addEventListener","removeEventListener","onKeyUp","GroupSettingsContainer","GroupSettings","onChange","event","editName","currentTarget","CardSettings","imageRef","cardSettings","rawCards","placeholders","cardValueUpdater","editCard","editDefaults","fileInput","files","placeholder","min","max","onClick","src","alt","accept","Editor","ContextMenuStyles","createGlobalStyle","DangerItem","Item","BetterMenuProvider","children","onContextMenu","preventDefault","stopPropagation","contextMenu","hideAll","show","ExplorerContextMenus","setDeleteSelection","downloadClick","toJS","groupsData","addClick","deleteClick","duplicateClick","upClick","moveGroup","moveCard","downClick","upDisable","downDisable","disabled","ExplorerContainer","ExplorerHeader","isTop","ExplorerSearch","ExporerSearchInput","short","ExplorerSearchX","hidden","ExplorerAddButton","ExplorerGroups","dragOver","ExplorerHighlight","span","CardGroupTitle","selected","CardGroupCaret","CardGroupName","CardTitle","cardFilter","includes","CardComponent","groupid","search","highlightMatches","CardGroupComponent","useState","collapsed","setCollapsed","toggleCollapse","icon","faCaretRight","faCaretDown","RegExp","part","Explorer","setSearch","isDragOver","setDragOver","setTop","scrollTop","useIsTop","onScroll","onDrop","dataTransfer","items","endsWith","contents","parse","clear","onDragEnter","onDragExit","onDragOver","e","target","faTimes","idx","faPlus","ModalStyles","content","background","border","left","maxHeight","maxWidth","minHeight","minWidth","position","top","transform","overlay","ModalContainer","ModalDialog","ModalEmph","ModalDesc","ModalDangerEmph","ModalButtons","ModalButton","button","ModalDangerButton","ModalSuggestedButton","DeleteModal","deleteSelection","confirmationMessage","isOpen","removeGroup","removeCard","warn","isLocalhost","Boolean","location","hostname","register","setUpdateAvaliable","navigator","process","origin","swUrl","fetch","then","response","status","headers","get","indexOf","serviceWorker","ready","registration","unregister","reload","catch","registerValidSW","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","AppContainer","CardContainer","GlobalStyles","UpdateModal","doUpdate","callDoUpdate","update","App","updateAvaliable","create","jsonify","storage","localStorage","hydrate","oncontextmenu","ReactModal","setAppElement","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4f7dc8fe.chunk.js","sourcesContent":["/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { action, observable } from \"mobx\";\nimport { persist } from \"mobx-persist\";\nimport { createContext } from \"react\";\nimport CardGroup, { ICardGroupData } from \"./card/cardGroup\";\n\n/** The tag for the selection enum */\nexport enum SelectionType {\n    None = \"none\",\n    Group = \"group\",\n    Card = \"card\",\n}\n\n/** The user's selection */\nexport type Selection = {\n    /** The type of selection */\n    type: SelectionType.None;\n} | {\n    /** The type of selection */\n    type: SelectionType.Group;\n    /** The current selected group */\n    group: number;\n} | {\n    /** The type of selection */\n    type: SelectionType.Card;\n    /** The current selected group */\n    group: number;\n    /** The current selected card */\n    card: number;\n};\n\n/** The global state of the application */\nexport class GlobalState {\n    /** The current selection */\n    @observable @persist(\"object\")\n    private _selection: Selection = { type: SelectionType.None };\n    /** The groups of cards */\n    @observable @persist(\"list\", CardGroup)\n    private readonly _groups: CardGroup[] = [];\n\n    /** The current selection */\n    public get selection(): Selection {\n        return this._selection;\n    }\n\n    /** Select a group and or a card */\n    @action\n    public select(group?: number, card?: number) {\n        if (group === undefined) {\n            this._selection = { type: SelectionType.None };\n        } else if (card === undefined) {\n            this._selection = {\n                group,\n                type: SelectionType.Group\n            };\n        } else {\n            this._selection = {\n                card,\n                group,\n                type: SelectionType.Card\n            };\n        }\n    }\n\n    /** Add a group */\n    @action\n    public addGroup(group: CardGroup) {\n        return this._groups.push(group) - 1;\n    }\n\n    /** Remove a group */\n    @action\n    public removeGroup(group: number) {\n        return this._groups.splice(group, 1)[0];\n    }\n\n    /** Get a group */\n    public get groups() {\n        return this._groups;\n    }\n\n    /** Get a group */\n    public get groupsData(): ICardGroupData[] {\n        return this._groups.map(x => x.data);\n    }\n\n    /** Move a group */\n    @action\n    public moveGroup(oldpos: number, newpos: number) {\n        const [group] = this._groups.splice(oldpos, 1);\n        this._groups.splice(newpos, 0, group);\n    }\n}\n\n/** The global state context */\nexport const GlobalStateContext = createContext(new GlobalState());","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { action, observable } from \"mobx\";\nimport { persist } from \"mobx-persist\";\nimport ICard from \"./card\";\n\n/** The persistant data of a card group */\nexport interface ICardGroupData {\n    /** The name of the group */\n    readonly name: string;\n    /** The defaults for the cards */\n    readonly defaults: ICard;\n    /** The child cards of the group */\n    readonly cards: ICard[];\n}\n\n/** A group of cards */\nexport default class CardGroup {\n    /** The name of the group */\n    @observable @persist\n    public name: string;\n    /** The defaults for the cards */\n    @observable @persist(\"object\")\n    public defaults: ICard;\n    /** The child cards of the group */\n    @observable @persist(\"list\")\n    private readonly _cards: ICard[];\n\n    constructor(name = \"\", defaults: ICard = {}, cards: ICard[] = []) {\n        this.name = name;\n        this._cards = cards;\n        this.defaults = defaults;\n    }\n\n    /** Create a card group from a data object */\n    public static fromData(data: ICardGroupData) {\n        return new CardGroup(data.name, data.defaults, data.cards);\n    }\n\n    /** Method to get the jsonifyable data for the group */\n    public get data(): ICardGroupData {\n        return {\n            cards: this._cards,\n            defaults: this.defaults,\n            name: this.name\n        };\n    }\n\n    /** Add a card to the group */\n    @action\n    public addCard(card: ICard = {}) {\n        if (card.name === undefined) {\n            card.name = \"Unnamed\";\n        }\n\n        return this._cards.push(card) - 1;\n    }\n\n    /** Move a cards position */\n    @action\n    public moveCard(oldpos: number, newpos: number): this {\n        const [card] = this._cards.splice(oldpos, 1);\n        this._cards.splice(newpos, 0, card);\n\n        return this;\n    }\n\n    /** Get the cards stored in the group */\n    public get cards(): ICard[] {\n        return this._cards.map(card => ({ ...this.defaults, ...card }));\n    }\n\n    /** Get the cards stored in the group without their defaults applied */\n    public get rawCards(): ICard[] {\n        return this._cards;\n    }\n\n    /** Remove a card from the group */\n    @action\n    public removeCard(i: number): ICard {\n        return this._cards.splice(i, 1)[0];\n    }\n\n    /** Change the value of a card in the group */\n    @action\n    public editCard<K extends keyof ICard>(card: number, key: K, value: ICard[K]) {\n        this._cards[card] = Object.entries({ ...this._cards[card], [key]: value })\n            // Remove undefined props\n            .filter(([, v]) => v !== undefined)\n            .reduce<ICard>((pre, [k, v]) => ({ ...pre, [k]: v }), {});\n    }\n\n    /** Change the value of the groups defaults */\n    @action\n    public editDefaults<K extends keyof ICard>(key: K, value: ICard[K]) {\n        this.defaults = Object.entries({ ...this.defaults, [key]: value })\n            // Remove undefined props\n            .filter(([, v]) => v !== undefined)\n            .reduce<ICard>((pre, [k, v]) => ({ ...pre, [k]: v }), {});\n    }\n\n    /** Change the value of the groups defaults */\n    @action\n    public editName(name: string) {\n        this.name = name;\n    }\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport styled from \"styled-components\";\n\n/** The view container for the rendered card svg */\nexport const RenderedCard = styled.svg.attrs({\n    fontFamily: \"Modesto\",\n    height: 70,\n    viewBox: \"0 0 50 70\",\n    width: 50\n})`\n    width: 300px;\n    height: calc(300px * 7/5);\n\n    user-select: none;\n`;\n\n/** Text for use on a card */\nexport const CardText = styled.text.attrs(props => ({\n    fontSize: props.fontSize ?? 2,\n    textAnchor: props.textAnchor ?? \"middle\"\n}))``;\n\n/** Text with the expanded font */\nexport const ExpandedText = styled(CardText).attrs({\n    fontFamily: \"Modesto-Expd\"\n})``;\n","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\n/** Add a suffix to a number */\nexport function ordinalSuffixOf(i: number) {\n    const j = i % 10;\n    const k = i % 100;\n    if (j === 1 && k !== 11) {\n        return `${i}st`;\n    }\n    if (j === 2 && k !== 12) {\n        return `${i}nd`;\n    }\n    if (j === 3 && k !== 13) {\n        return `${i}rd`;\n    } else {\n        return `${i}th`;\n    }\n}\n\n/** Replace `- ` and `* ` with a bullet */\nexport function bulletLists(text: string): string {\n    return text.replace(/^(\\*|-)(?= )/img, \"\\u2022\");\n}\n\n/** Hash a string */\nexport function hashCode(s: string) {\n    let hash = 0;\n    let chr;\n    for (let i = 0; i < s.length; i++) {\n        chr = s.charCodeAt(i);\n        hash = ((hash << 5) - hash) + chr; // tslint:disable-line no-bitwise\n        hash |= 0; // tslint:disable-line no-bitwise // Convert to 32bit integer\n    }\n\n    return hash;\n}\n","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\n/** Helper function to achieve word wrapping */\nexport function wordWrapSVG(text: string, width: number, outputElement: SVGTextElement) {\n    return text.replace(\"\\r\", \"\").split(\"\\n\").map((x, i) => wordWrapOneLineSVG(x, width, outputElement, i !== 0)).reduce((a, b) => a + b);\n}\n\n/** Helper Function to wrap one continous line of text in an svg */\nfunction wordWrapOneLineSVG(text: string, width: number, outputElement: SVGTextElement, initialOffset = false) {\n    const words = text.split(\" \");\n    let elems = 0;\n\n    let tspanElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"tspan\");   // Create first tspan element\n    let textNode = document.createTextNode(words[0]);           // Create text in tspan element\n\n    if (initialOffset) {\n        tspanElement.setAttribute(\"x\", outputElement.x.baseVal[0].valueAsString);\n        tspanElement.setAttribute(\"dy\", outputElement.attributes.getNamedItem(\"font-size\")?.value ?? \"\");\n\n        elems++;\n    }\n\n    tspanElement.appendChild(textNode);                     // Add tspan element to DOM\n    outputElement.appendChild(tspanElement);                        // Add text to tspan element\n\n    if (!words.some(x => x.length > 0)) {\n        tspanElement.textContent = \"\\x20\";\n\n        return parseFloat(outputElement.attributes.getNamedItem(\"font-size\")?.value ?? \"0\");\n    }\n\n    for (let i = 1; i < words.length; i++) {\n        if (tspanElement.firstChild === null || tspanElement.firstChild.textContent === null) {\n            console.error(\"TSPAN element has no first child\", tspanElement);\n\n            return elems * parseFloat(outputElement.attributes.getNamedItem(\"font-size\")?.value ?? \"0\");\n        }\n\n        const len = tspanElement.firstChild?.textContent?.length;             // Find number of letters in string\n        tspanElement.firstChild.textContent += ` ${words[i]}`;            // Add next word\n\n        if (tspanElement.getComputedTextLength() > width) {\n            tspanElement.firstChild.textContent = tspanElement.firstChild.textContent.slice(0, len);    // Remove added word\n\n            tspanElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"tspan\");       // Create new tspan element\n            tspanElement.setAttribute(\"x\", outputElement.x.baseVal[0].valueAsString);\n            tspanElement.setAttribute(\"dy\", outputElement.attributes.getNamedItem(\"font-size\")?.value ?? \"\");\n            textNode = document.createTextNode(words[i]);\n\n            tspanElement.appendChild(textNode);\n            outputElement.appendChild(tspanElement);\n\n            elems++;\n        }\n    }\n\n    return elems * parseFloat(outputElement.attributes.getNamedItem(\"font-size\")?.value ?? \"0\");\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { useObserver } from \"mobx-react-lite\";\nimport React, { createRef, useContext, useEffect, useMemo } from \"react\";\nimport { GlobalStateContext, SelectionType } from \"../state\";\nimport { CardText, ExpandedText, RenderedCard } from \"../styles/renderedCard\";\nimport { bulletLists, hashCode, ordinalSuffixOf } from \"../util/string\";\nimport { wordWrapSVG } from \"../util/wordWrap\";\n\n/** The front face of the card */\nexport function CardFront() {\n    const state = useContext(GlobalStateContext);\n\n    // Refs to wrappable words\n    const physComponentsRef = createRef<SVGTextElement>();\n    const physComponentsBakgroundRef = createRef<SVGRectElement>();\n    const descriptionRef = createRef<SVGTextElement>();\n    const extDescriptionRef = createRef<SVGTextElement>();\n    const extDescriptionTitleRef = createRef<SVGGElement>();\n\n    // Card selection\n    const card = useObserver(() => state.selection.type === SelectionType.Card ? state.groups[state.selection.group].cards[state.selection.card] : state.selection.type === SelectionType.Group ? state.groups[state.selection.group].defaults : {});\n\n    // Apply word wrapping to text\n    useEffect(() => {\n        // Collecctive hight of blocks\n        let currHeight = 0;\n\n        // Aliases for refs\n        const physComp = physComponentsRef.current;\n        const physCompBkg = physComponentsBakgroundRef.current;\n        const desc = descriptionRef.current;\n        const extDesc = extDescriptionRef.current;\n        const extDescTitle = extDescriptionTitleRef.current;\n\n        if (physCompBkg !== null) {\n            if (card.physicalComponents !== undefined && physComp !== null) {\n                const height = wordWrapSVG(bulletLists(card.physicalComponents), 44, physComp);\n\n                physCompBkg.setAttribute(\"height\", (height + 4).toString());\n                physCompBkg.removeAttribute(\"display\");\n\n                currHeight += height + 3.5;\n            } else {\n                physCompBkg.setAttribute(\"display\", \"none\");\n            }\n        }\n\n        if (card.description !== undefined && desc !== null) {\n            desc.setAttribute(\"dy\", currHeight.toString());\n            const height = wordWrapSVG(bulletLists(card.description), 44, desc);\n\n            currHeight += height;\n        }\n\n        if (extDescTitle !== null) {\n            if (card.extDescription !== undefined && extDesc !== null) {\n                const height = wordWrapSVG(bulletLists(card.extDescription), 44, extDesc);\n                extDesc.setAttribute(\"y\", (65 - height).toString());\n                extDescTitle.setAttribute(\"transform\", `translate(0, ${(62 - height)})`);\n                extDescTitle.removeAttribute(\"display\");\n            } else {\n                extDescTitle.setAttribute(\"display\", \"none\");\n            }\n        }\n\n        return () => {\n            if (physComp !== null) {\n                physComp.innerHTML = \"\";\n            }\n            if (desc !== null) {\n                desc.innerHTML = \"\";\n            }\n            if (extDesc !== null) {\n                extDesc.innerHTML = \"\";\n            }\n        };\n    }, [\n        card,\n        descriptionRef,\n        extDescriptionRef,\n        extDescriptionTitleRef,\n        physComponentsBakgroundRef,\n        physComponentsRef\n    ]);\n\n    return useObserver(() => {\n        const durationConc = card.duration !== undefined && card.duration.toLowerCase().match(/^concentration(,)? /) !== null;\n        const duration = durationConc ? card.duration?.replace(/^concentration(,)? /i, \"\") : card.duration;\n        const durationCap = `${duration?.charAt(0).toUpperCase() ?? \"\"}${duration?.slice(1) ?? \"\"}`;\n\n        const cardlevel = parseInt(card.level !== undefined ? card.level : \"0\", 10);\n        const cardType = !isNaN(cardlevel) ? cardlevel === 0 ? `${card.type} cantrip` : `${ordinalSuffixOf(cardlevel)} level ${card.type}` : undefined;\n\n        const color = card.color ?? \"#000000\";\n\n        return (\n            <RenderedCard>\n                {/* Frame */}\n                <rect width=\"50\" height=\"70\" fill={color} />\n                {/* Background */}\n                <rect width=\"46\" height=\"64\" x=\"2\" y=\"2\" rx=\"2\" ry=\"2\" fill=\"white\" />\n\n                {/* Sections */}\n                <line x1=\"0\" y1=\"9\" x2=\"50\" y2=\"9\" stroke={color} strokeWidth=\".3\" />\n                <line x1=\"0\" y1=\"16\" x2=\"50\" y2=\"16\" stroke={color} strokeWidth=\".3\" />\n                <line x1=\"0\" y1=\"23\" x2=\"50\" y2=\"23\" stroke={color} strokeWidth=\".3\" />\n                <line x1=\"25\" y1=\"9\" x2=\"25\" y2=\"23\" stroke={color} strokeWidth=\".3\" />\n\n                {/* Title */}\n                <ExpandedText fontSize=\"4\" x=\"25\" y=\"6.75\">{card.name}</ExpandedText>\n\n                {/* Casting Time */}\n                <ExpandedText fill={color} x=\"13.5\" y=\"12\">CASTING TIME</ExpandedText>\n                <CardText x=\"13.5\" y=\"14.6\">{card.castingTime}</CardText>\n\n                {/* Range */}\n                <ExpandedText fill={color} x=\"36.5\" y=\"12\">RANGE</ExpandedText>\n                <CardText x=\"36.5\" y=\"14.6\" >{card.range}</CardText>\n\n                {/* Components */}\n                <ExpandedText fill={color} x=\"13.5\" y=\"19\" >COMPONENTS</ExpandedText>\n                <CardText x=\"13.5\" y=\"21.6\">{card.components}</CardText>\n\n                {/* Duration */}\n                <ExpandedText fill={color} x=\"36.5\" y=\"19\" >DURATION</ExpandedText>\n                <CardText x=\"36.5\" y=\"21.6\" >{durationCap}</CardText>\n                {/* Duration Concentration */}\n                <g display={durationConc ? undefined : \"none\"}>\n                    <polygon points=\"46,17 44,19.5 46,22 48,19.5 46,17\" fill={color} />\n                    <ExpandedText x=\"46\" y=\"19.5\" dominantBaseline=\"middle\" fill=\"#ffffff\">C</ExpandedText>\n                </g>\n\n                {/* Physical Components */}\n                <rect width=\"50\" height=\"3.5\" y=\"23\" fill={color} ref={physComponentsBakgroundRef} />\n                <CardText x=\"3\" y=\"25.6\" ref={physComponentsRef} fill=\"#ffffff\" textAnchor=\"right\" />\n                {/* Description */}\n                <CardText x=\"3\" y=\"25.5\" ref={descriptionRef} textAnchor=\"right\" />\n                {/* Extended Description */}\n                <g ref={extDescriptionTitleRef}>\n                    <rect width=\"50\" height=\"3.5\" y=\"-3\" fill={color} />\n                    <CardText fontWeight=\"bold\" letterSpacing=\".1\" y=\"-.4\" x=\"25\" fill=\"#ffffff\">At Higher Levels</CardText>\n                </g>\n                <CardText x=\"3\" ref={extDescriptionRef} textAnchor=\"right\"/>\n\n                {/* Card class */}\n                <ExpandedText fill=\"white\" x=\"2.5\" y=\"68.5\" textAnchor=\"left\">{card.clazz}</ExpandedText>\n                {/* Card type */}\n                <CardText fill=\"white\" x=\"48\" y=\"68.5\" textAnchor=\"end\">{cardType}</CardText>\n            </RenderedCard>\n        );\n    });\n}\n\n/** The more dynamic part of the card back */\nfunction CardBackDyn() {\n    const state = useContext(GlobalStateContext);\n\n    const card = useObserver(() => state.selection.type === SelectionType.Card ? state.groups[state.selection.group].cards[state.selection.card] : state.selection.type === SelectionType.Group ? state.groups[state.selection.group].defaults : {});\n    const hash = useMemo(() => hashCode(card.image ?? \"\"), [card.image]);\n\n    return useObserver(() => {\n        const color = card.color ?? \"#000000\";\n\n        return (\n            <>\n                {/* Frame */}\n                <rect width=\"50\" height=\"70\" fill={color} />\n\n                {/* Background */}\n                <rect width=\"46\" height=\"66\" x=\"2\" y=\"2\" rx=\"2\" ry=\"2\" fill=\"white\" />\n\n                {/* Rounded line */}\n                <rect width=\"40\" height=\"60\" x=\"5\" y=\"5\" rx=\"2\" ry=\"2\" stroke={color} strokeWidth=\"0.5\" fill=\"transparent\" />\n\n                {/* Rhombus */}\n                <polyline points=\"5.25,35 25,5.25 45,34.75 25,64.75 5.25,35\" fill=\"transparent\" stroke={color} strokeWidth=\".5\" />\n\n                {/* Card level top right */}\n                <text fontSize=\"10\" fontWeight=\"bold\" fill={color} x=\"38\" y=\"15\" textAnchor=\"middle\">{card.level}</text>\n                {/* Card level bottom left */}\n                <text fontSize=\"10\" fontWeight=\"bold\" fill={color} x=\"12\" y=\"62\" textAnchor=\"middle\">{card.level}</text>\n\n                {/* Card image */}\n                <use href={`#${hash}`} />\n            </>\n        );\n    });\n}\n\n/** The back face of the card */\nexport function CardBack() {\n    const state = useContext(GlobalStateContext);\n\n    return useObserver(() => {\n        const outImages: { [x: string]: string | undefined } = {};\n\n        for (const g of state.groups) {\n            for (const c of g.cards) {\n                if (c.image !== undefined) {\n                    const hashed = hashCode(c.image);\n                    if (outImages[hashed] === undefined) {\n                        outImages[hashed] = c.image;\n                    }\n                }\n            }\n        }\n\n        return (\n            <RenderedCard>\n                {/* Cache images on screen for faster switch */}\n                <defs>\n                    {Object.entries(outImages).map(([h, image]) => <image key={h} id={h} href={image} width=\"25\" height=\"25\" x=\"12.5\" y=\"22.5\" />)}\n                </defs>\n\n                <CardBackDyn />\n            </RenderedCard>\n        );\n    });\n}\n","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport styled from \"styled-components\";\n\n/** The container for the editor */\nexport const EditorContainer = styled.div`\n    background: #313131;\n    color: #cccccc;\n\n    padding: 15px 10px;\n\n    min-height: calc(100% - 30px);\n    overflow: auto;\n`;\n\n/** The values section of the editor */\nexport const EditorValues = styled.div`\n    padding-bottom: 20px;\n`;\n\n/** The empty editor view */\nexport const EditorEmpty = styled.div`\n    height: 100%;\n    width: 100%;\n    position: relative;\n\n    color: white;\n    background-color: #696969;\n`;\n\n/** The centered text in the editor */\nexport const EditorCenter = styled.div`\n    position: absolute;\n    top: 50%;\n    width: 100%;\n    text-align: center;\n\n    transform: translateY(-50%);\n`;\n\n/** A title for the editor */\nexport const EditorTitle = styled.div`\n    font-weight: bold;\n    font-size: 25px;\n\n    border-bottom: solid 1px #cccccc;\n    padding-bottom: 3px;\n    margin-bottom: 10px;\n`;\n\n/** A label for an editor value */\nexport const EditorLabel = styled.label`\n    font-weight: bold;\n    display: block;\n    user-select: none;\n\n    &:hover > input,\n    &:hover > textarea {\n        border-bottom: solid 1px #777777;\n    }\n`;\n\n/** The editor input for a value */\nexport const EditorInput = styled.input`\n    user-select: contain;\n\n    font-weight: normal;\n    background: #00000080;\n    color: #cccccc;\n    border: solid 1px transparent;\n\n    padding: 2px 5px;\n\n    display: block;\n\n    width: calc(100% - 20px);\n\n    &:focus {\n        outline: none;\n        border-bottom: solid 1px #cccccc;\n    }\n`;\n\n/** The editor input for a value */\nexport const EditorTextArea = styled.textarea`\n    user-select: contain;\n    resize: none;\n\n    font-weight: normal;\n    background: #00000080;\n    color: #cccccc;\n    border: solid 1px transparent;\n\n    padding: 2px 5px;\n\n    display: block;\n\n    width: calc(100% - 20px);\n\n    &:focus {\n        outline: none;\n        border-bottom: solid 1px #cccccc;\n    }\n`;\n\n/** An image in the editor */\nexport const EditorImage = styled.img`\n    max-height: 50px;\n    display: block;\n`;","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport ICard from \"../card/card\";\nimport CardGroup, { ICardGroupData } from \"../card/cardGroup\";\nimport { GlobalState, SelectionType } from \"../state\";\n\n/** Helper to create a file reader that is async and reads text */\nexport async function textFileReaderAsync(file: Blob) {\n    return new Promise<string>((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsText(file);\n        reader.onload = (_) => {\n            if (reader.result !== null) {\n                resolve(reader.result.toString());\n            } else {\n                reject(new Error(\"No result\"));\n            }\n        };\n        reader.onerror = reject;\n    });\n}\n\n/** Helper that can create a file reaer that is async and reads data */\nexport async function dataFileReaderAsync(file: Blob) {\n    return new Promise<string>((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = (_) => {\n            if (reader.result !== null) {\n                resolve(reader.result.toString());\n            } else {\n                reject(new Error(\"No result\"));\n            }\n        };\n        reader.onerror = reject;\n    });\n}\n\n/** The structure for a downloaded file */\nexport type DownloadFile = {\n    /** The type of selection */\n    type: SelectionType.None;\n    /** All groups */\n    data: ICardGroupData[];\n} | {\n    /** The type of selection */\n    type: SelectionType.Group;\n    /** The group */\n    data: ICardGroupData;\n} | {\n    /** The type of selection */\n    type: SelectionType.Card;\n    /** The card */\n    data: ICard;\n};\n\n/** Helper to download a file */\nexport function download(file: DownloadFile, filename: string) {\n    const link = document.createElement(\"a\");\n    const url = URL.createObjectURL(new Blob([JSON.stringify(file)], { type: \"application/json\" }));\n\n    link.href = url;\n    link.download = filename;\n    document.body.appendChild(link);\n    link.click();\n\n    setTimeout(() => {\n        document.body.removeChild(link);\n        URL.revokeObjectURL(url);\n    }, 0);\n}\n\n/** Helper to laod a file */\nexport function load(file: DownloadFile, state: GlobalState) {\n    if (file.type === SelectionType.None) {\n        for (const group of file.data) {\n            state.addGroup(CardGroup.fromData(group));\n        }\n    } else if (file.type === SelectionType.Group) {\n        const id = state.addGroup(CardGroup.fromData(file.data));\n        state.select(id);\n    } else {\n        if (state.selection.type === SelectionType.Card || state.selection.type === SelectionType.Group) {\n            const id = state.groups[state.selection.group].addCard(file.data);\n            state.select(id);\n        } else {\n            alert(\"Attempted to add a card when no group is selected\");\n        }\n    }\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport React, { createRef, memo, useCallback, useEffect } from \"react\";\nimport { EditorTextArea } from \"../styles/editor\";\n\n/** A text area that resizes when it overflows */\nconst AutoResizeTextArea = memo((props: React.DetailedHTMLProps<React.TextareaHTMLAttributes<HTMLTextAreaElement>, HTMLTextAreaElement>) => {\n    const ref = createRef<HTMLTextAreaElement>();\n\n    const resize = useCallback(() => {\n        if (ref.current === null) {\n            return;\n        }\n\n        ref.current.style.height = \"1px\";\n        ref.current.style.height = `${ref.current.scrollHeight}px`;\n    }, [ref]);\n\n    useEffect(() => {\n        resize();\n\n        window.addEventListener(\"resize\", resize);\n\n        return () => window.removeEventListener(\"resize\", resize);\n    }, [resize, props.value]);\n\n    return <EditorTextArea {...props} ref={ref} onKeyUp={resize} />;\n});\n\nexport default AutoResizeTextArea;","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport styled from \"styled-components\";\n\n/** The container for the group settings */\nexport const GroupSettingsContainer = styled.div`\n    margin-bottom: 20px;\n`;","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { useObserver } from \"mobx-react-lite\";\nimport React, { useContext } from \"react\";\nimport { GlobalStateContext, SelectionType } from \"../state\";\nimport { EditorInput, EditorLabel, EditorTitle } from \"../styles/editor\";\nimport { GroupSettingsContainer } from \"../styles/editor/group\";\n\n/** The group settings part */\nexport default function GroupSettings() {\n    const state = useContext(GlobalStateContext);\n\n    return useObserver(() => {\n        if (state.selection.type !== SelectionType.Group) {\n            return null;\n        }\n\n        const id = state.selection.group;\n        const update = (event: React.FormEvent<HTMLInputElement>) => {\n            state.groups[id].editName(event.currentTarget.value);\n        };\n\n        return (\n            <GroupSettingsContainer>\n                <EditorTitle>Group settings</EditorTitle>\n                <EditorLabel>\n                    Name:\n                    <EditorInput type=\"text\" value={state.groups[state.selection.group].name ?? \"\"} onChange={update} />\n                </EditorLabel>\n            </GroupSettingsContainer>\n        );\n    });\n}\n","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { useObserver } from \"mobx-react-lite\";\nimport React, { createRef, useContext } from \"react\";\nimport ICard from \"../card/card\";\nimport { GlobalStateContext, SelectionType } from \"../state\";\nimport { EditorImage, EditorInput, EditorLabel, EditorTitle, EditorValues } from \"../styles/editor\";\nimport { dataFileReaderAsync } from \"../util/file\";\nimport AutoResizeTextArea from \"./AutoResizeTextArea\";\nimport GroupSettings from \"./GroupSettings\";\n\n/** The CardSettings section */\nexport default function CardSettings() {\n    const state = useContext(GlobalStateContext);\n    const imageRef = createRef<HTMLInputElement>();\n\n    return useObserver(() => {\n        const cardSettings = state.selection.type === SelectionType.Card ? state.groups[state.selection.group].rawCards[state.selection.card] : state.selection.type === SelectionType.Group ? state.groups[state.selection.group].defaults : {};\n        const placeholders = state.selection.type === SelectionType.Card ? state.groups[state.selection.group].defaults : undefined;\n\n        /** Update the internal cache values of a text value */\n        const cardValueUpdater = (name: keyof ICard) => {\n            return (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n                event.persist();\n\n                if (state.selection.type === SelectionType.Card) {\n                    state.groups[state.selection.group].editCard(state.selection.card, name, event.currentTarget.value === \"\" ? undefined : event.currentTarget.value);\n                } else if (state.selection.type === SelectionType.Group) {\n                    state.groups[state.selection.group].editDefaults(name, event.currentTarget.value === \"\" ? undefined : event.currentTarget.value);\n                }\n            };\n        };\n\n        const clearColor = () => {\n            if (state.selection.type === SelectionType.Card) {\n                state.groups[state.selection.group].editCard(state.selection.card, \"color\", undefined);\n            } else if (state.selection.type === SelectionType.Group) {\n                state.groups[state.selection.group].editDefaults(\"color\", undefined);\n            }\n        };\n\n        const fileInput = async (event: React.FormEvent<HTMLInputElement>) => {\n            event.persist();\n\n            if (state.selection.type === SelectionType.Card) {\n                if (imageRef.current !== null) {\n                    let image: string | undefined;\n\n                    if (imageRef.current.files !== null) {\n                        image = await dataFileReaderAsync(imageRef.current.files[0]);\n                    }\n\n                    state.groups[state.selection.group].editCard(state.selection.card, \"image\", image);\n                }\n            } else if (state.selection.type === SelectionType.Group) {\n                if (imageRef.current !== null) {\n                    let image: string | undefined;\n\n                    if (imageRef.current.files !== null) {\n                        image = await dataFileReaderAsync(imageRef.current.files[0]);\n                    }\n\n                    state.groups[state.selection.group].editDefaults(\"image\", image);\n                }\n            }\n        };\n\n        return (\n            <EditorValues>\n                <GroupSettings />\n                <EditorTitle>Card Settings</EditorTitle>\n                <EditorLabel>\n                    Name:\n                    <EditorInput type=\"text\" value={cardSettings.name ?? \"\"} onChange={cardValueUpdater(\"name\")} placeholder={placeholders?.name} />\n                </EditorLabel>\n                <EditorLabel>\n                    Casting Time:\n                    <EditorInput type=\"text\" value={cardSettings.castingTime ?? \"\"} onChange={cardValueUpdater(\"castingTime\")} placeholder={placeholders?.castingTime} />\n                </EditorLabel>\n                <EditorLabel>\n                    Range:\n                    <EditorInput type=\"text\" value={cardSettings.range ?? \"\"} onChange={cardValueUpdater(\"range\")} placeholder={placeholders?.range} />\n                </EditorLabel>\n                <EditorLabel>\n                    Components:\n                    <EditorInput type=\"text\" value={cardSettings.components ?? \"\"} onChange={cardValueUpdater(\"components\")} placeholder={placeholders?.components ?? \"\"} />\n                </EditorLabel>\n                <EditorLabel>\n                    Duration:\n                    <EditorInput type=\"text\" value={cardSettings.duration ?? \"\"} onChange={cardValueUpdater(\"duration\")} placeholder={placeholders?.duration} />\n                </EditorLabel>\n                <EditorLabel>\n                    Physical Components:\n                    <AutoResizeTextArea value={cardSettings.physicalComponents ?? \"\"} onChange={cardValueUpdater(\"physicalComponents\")} placeholder={placeholders?.physicalComponents} />\n                </EditorLabel>\n                <EditorLabel>\n                    Description:\n                    <AutoResizeTextArea value={cardSettings.description ?? \"\"} onChange={cardValueUpdater(\"description\")} placeholder={placeholders?.description} />\n                </EditorLabel>\n                <EditorLabel>\n                    Extended Description:\n                    <AutoResizeTextArea value={cardSettings.extDescription ?? \"\"} onChange={cardValueUpdater(\"extDescription\")} placeholder={placeholders?.extDescription} />\n                </EditorLabel>\n                <EditorLabel>\n                    Class:\n                    <EditorInput type=\"text\" value={cardSettings.clazz ?? \"\"} onChange={cardValueUpdater(\"clazz\")} placeholder={placeholders?.clazz} />\n                </EditorLabel>\n                <EditorLabel>\n                    Type:\n                    <EditorInput type=\"text\" value={cardSettings.type ?? \"\"} onChange={cardValueUpdater(\"type\")} placeholder={placeholders?.type} />\n                </EditorLabel>\n                <EditorLabel>\n                    Level:\n                    <EditorInput type=\"number\" min={0} max={99} value={cardSettings.level ?? \"\"} onChange={cardValueUpdater(\"level\")} placeholder={placeholders?.level === undefined ? undefined : placeholders?.level?.toString()} />\n                </EditorLabel>\n                <EditorLabel>\n                    Color:\n                    <EditorInput type=\"color\" value={cardSettings.color ?? \"\"} onChange={cardValueUpdater(\"color\")} placeholder={placeholders?.color} />\n                    <button onClick={clearColor}>Clear Color</button>\n                </EditorLabel>\n                <EditorLabel>\n                    Image:\n                    <EditorImage src={cardSettings.image} alt=\"Card Back\" />\n                    <EditorInput type=\"file\" accept=\"image/*\" onChange={fileInput} ref={imageRef} />\n                </EditorLabel>\n            </EditorValues>\n        );\n    });\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { useObserver } from \"mobx-react-lite\";\nimport React, { useContext } from \"react\";\nimport { GlobalStateContext, SelectionType } from \"../state\";\nimport { EditorCenter, EditorContainer, EditorEmpty } from \"../styles/editor\";\nimport CardSettings from \"./CardSettings\";\n\n/** The editor component */\nexport default function Editor() {\n    const state = useContext(GlobalStateContext);\n\n    return useObserver(() => {\n        if (state.selection.type !== SelectionType.None) {\n            return (\n                <EditorContainer>\n                    <CardSettings />\n                </EditorContainer>\n            );\n        } else {\n            return (\n                <EditorEmpty>\n                    <EditorCenter>You have nothing selected</EditorCenter>\n                </EditorEmpty>\n            );\n        }\n    });\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { Item } from \"react-contexify\";\nimport styled, { createGlobalStyle } from \"styled-components\";\n\n/** Global styles for the context menu */\nexport const ContextMenuStyles = createGlobalStyle`\n    .react-contexify {\n        position: fixed;\n        opacity: 0;\n        user-select: none;\n        box-sizing: border-box;\n\n        padding: 10px 10px;\n        background-color: #1a1a1a;\n        box-shadow: 5px 5px 15px #00000066;\n\n        border-radius: 3px;\n\n        cursor: pointer;\n\n        & &__submenu {\n            position: absolute;\n            top: 0;\n            pointer-events: none;\n            transition: opacity 0.275s;\n\n            background-color: #282828fa;\n        }\n\n        &__submenu-arrow {\n            font-size: 12px;\n            position: absolute;\n            right: 10px;\n            line-height: 22px;\n        }\n\n        &__separator {\n            float: left;\n            width: 100%;\n            height: 1px;\n            cursor: default;\n            margin: 4px 0;\n\n            background-color: #666666;\n        }\n\n        &__item {\n            font-size: 14px;\n\n            color: #b8b8b8;\n            font-weight: bold;\n\n            cursor: pointer;\n            position: relative;\n\n            &:not(&--disabled):hover > &__data {\n                color: inherit;\n                background-color: #313131;\n            }\n\n            &:not(&--disabled):hover > .react-contexify__submenu {\n                pointer-events: initial;\n                opacity: 1;\n            }\n\n            &--disabled {\n                cursor: default;\n                opacity: .5;\n            }\n\n            &__data {\n                min-width: 100px;\n                padding: 6px 12px;\n                display: flex;\n                text-align: left;\n                white-space: nowrap;\n                color: inherit;\n                position: relative;\n            }\n\n            &__icon {\n                font-size: 20px;\n                margin-right: 8px;\n                width: 12px;\n                text-align: center;\n            }\n        }\n    }\n`;\n\n/** An item that does a dangerous action */\nexport const DangerItem = styled(Item)`\n    color: #f04747 !important;\n`;","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { toJS } from \"mobx\";\nimport { useObserver } from \"mobx-react-lite\";\nimport React, { MouseEvent, PropsWithChildren, useContext } from \"react\";\nimport { contextMenu, Item, Menu, Separator } from \"react-contexify\";\nimport CardGroup from \"../card/cardGroup\";\nimport { GlobalStateContext, Selection, SelectionType } from \"../state\";\nimport { DangerItem } from \"../styles/contextMenu\";\nimport { download } from \"../util/file\";\nimport { IItemArgs, ItemHandler } from \"./Explorer\";\n\n/** Props to the better menu provider component */\ninterface IBMPProps {\n    /** The id of the context menu */\n    id: string;\n    /** The selection that the menu should act upon */\n    selection: Selection;\n}\n\n/** A better menu provider */\nexport function BetterMenuProvider({ id, children, selection }: PropsWithChildren<IBMPProps>) {\n    const rightClick = (event: MouseEvent) => {\n        event.preventDefault();\n        event.stopPropagation();\n        event.persist();\n\n        contextMenu.hideAll();\n        setTimeout(() => contextMenu.show({\n            event,\n            id,\n            props: selection\n        }), 1);\n    };\n\n    const leftClick = (_: MouseEvent) => {\n        contextMenu.hideAll();\n    };\n\n    return (\n        <div onContextMenu={rightClick} onClick={leftClick}>\n            {children}\n        </div>\n    );\n}\n\n/** Props for the Explorer context menus */\ninterface IECMProps {\n    /** State changer for delete selection */\n    setDeleteSelection(val: Selection): void;\n}\n\n/** The context menus for the explorer */\nexport function ExplorerContextMenus({ setDeleteSelection }: IECMProps) {\n    const state = useContext(GlobalStateContext);\n\n    return useObserver(() => {\n        const downloadClick = (({ props }: IItemArgs) => {\n            if (props.type === SelectionType.Group) {\n                const group = state.groups[props.group];\n\n                download({ type: SelectionType.Group, data: group.data }, `${group.name}.group.json`);\n            } else if (props.type === SelectionType.Card) {\n                const card = state.groups[props.group].cards[props.card];\n\n                download({ type: SelectionType.Card, data: card }, `${card.name}.card.json`);\n            } else {\n                download({ type: SelectionType.None, data: toJS(state.groupsData) }, `workspace.json`);\n            }\n        }) as unknown as ItemHandler;\n\n        const addClick = (({ props }: IItemArgs) => {\n            if (props.type === SelectionType.Group) {\n                const id = state.groups[props.group].addCard();\n                state.select(props.group, id);\n            } else if (props.type === SelectionType.None) {\n                const id = state.addGroup(new CardGroup(`New Group ${state.groups.length}`));\n                state.select(id);\n            }\n        }) as unknown as ItemHandler;\n\n        const editClick = (({ props }: IItemArgs) => {\n            if (props.type === SelectionType.Group) {\n                state.select(props.group);\n            }\n        }) as unknown as ItemHandler;\n\n        const editDisable = (({ props }: IItemArgs) => {\n            // Disable the edit button if this card is already selected\n            return props.type === SelectionType.Group && state.selection.type === SelectionType.Group && state.selection.group === props.group;\n        }) as unknown as ItemHandler<boolean>;\n\n        const deleteClick = (({ props }: IItemArgs) => setDeleteSelection(props)) as unknown as ItemHandler;\n\n        const duplicateClick = (({ props }: IItemArgs) => {\n            if (props.type === SelectionType.Group) {\n                const id = state.addGroup(state.groups[props.group]);\n\n                state.select(id);\n            } else if (props.type === SelectionType.Card) {\n                const group = state.groups[props.group];\n                const id = group.addCard(group.rawCards[props.card]);\n\n                state.select(props.group, id);\n            }\n        }) as unknown as ItemHandler;\n\n        const upClick = (({ props }: IItemArgs) => {\n            if (props.type === SelectionType.Group) {\n                state.moveGroup(props.group, props.group - 1);\n                state.select(props.group - 1);\n            } else if (props.type === SelectionType.Card) {\n                state.groups[props.group].moveCard(props.card, props.card - 1);\n                state.select(props.group, props.card - 1);\n            }\n        }) as unknown as ItemHandler;\n\n        const downClick = (({ props }: IItemArgs) => {\n            if (props.type === SelectionType.Group) {\n                state.moveGroup(props.group, props.group + 1);\n                state.select(props.group + 1);\n            } else if (props.type === SelectionType.Card) {\n                state.groups[props.group].moveCard(props.card, props.card + 1);\n                state.select(props.group, props.card + 1);\n            }\n        }) as unknown as ItemHandler;\n\n        const upDisable = (({ props }: IItemArgs): boolean => {\n            if (props.type === SelectionType.Group) {\n                return props.group === 0;\n            } else if (props.type === SelectionType.Card) {\n                return props.card === 0;\n            } else {\n                return true;\n            }\n        }) as unknown as ItemHandler<boolean>;\n\n        const downDisable = (({ props }: IItemArgs): boolean => {\n            if (props.type === SelectionType.Group) {\n                return props.group === state.groups.length - 1;\n            } else if (props.type === SelectionType.Card) {\n                return props.card === state.groups[props.group].cards.length - 1;\n            } else {\n                return true;\n            }\n        }) as unknown as ItemHandler<boolean>;\n\n        const deselect = () => {\n            state.select();\n        };\n\n        return (\n            <>\n                <Menu id=\"none-contextmenu\">\n                    <Item onClick={addClick}>Add Group</Item>\n                    <Separator />\n                    <Item onClick={deselect}>Deselect All</Item>\n                    <Separator />\n                    <Item onClick={downloadClick}>Download All</Item>\n                    <Item disabled={true}>Render All</Item>\n                    <Item disabled={true}>Print All</Item>\n                </Menu>\n                <Menu id=\"group-contextmenu\">\n                    <Item onClick={editClick} disabled={editDisable}>Edit</Item>\n                    <Item onClick={addClick}>Add Card</Item>\n                    <Item onClick={duplicateClick}>Duplicate</Item>\n                    <Separator />\n                    <Item onClick={upClick} disabled={upDisable}>Move Up</Item>\n                    <Item onClick={downClick} disabled={downDisable}>Move Down</Item>\n                    <Separator />\n                    <Item onClick={downloadClick}>Download Group</Item>\n                    <Item disabled={true}>Render Group</Item>\n                    <Item disabled={true}>Print Group</Item>\n                    <Separator />\n                    <DangerItem onClick={deleteClick}>Delete</DangerItem>\n                </Menu>\n                <Menu id=\"card-contextmenu\">\n                    <Item onClick={duplicateClick}>Duplicate</Item>\n                    <Separator />\n                    <Item onClick={upClick} disabled={upDisable}>Move Up</Item>\n                    <Item onClick={downClick} disabled={downDisable}>Move Down</Item>\n                    <Separator />\n                    <Item onClick={downloadClick}>Download Card</Item>\n                    <Item disabled={true}>Render Card</Item>\n                    <Item disabled={true}>Print Card</Item>\n                    <Separator />\n                    <DangerItem onClick={deleteClick}>Delete</DangerItem>\n                </Menu>\n            </>\n        );\n    });\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport styled from \"styled-components\";\n\n/** The container for the explorer */\nexport const ExplorerContainer = styled.div`\n    display: grid;\n    grid-template-columns: auto;\n    grid-template-rows: 40px calc(100% - 60px);\n\n    grid-column-gap: 10px;\n\n    background: #313131;\n    color: #cccccc;\n\n    height: 100%;\n    overflow: hidden;\n`;\n\n/** Properties for the explorer header */\ninterface IHeaderProps {\n    /** If the view below is scrolled all the way to the top */\n    isTop: boolean;\n}\n\n/** The header component of the explorer */\nexport const ExplorerHeader = styled.div<IHeaderProps>`\n    grid-row: 1;\n    height: 100%;\n\n    padding: 0px 50px;\n\n    margin-left: -50px;\n\n    width: 100%;\n    box-shadow: ${props => props.isTop ? \"none\" : \"0px 10px 10px #000000\"};\n`;\n\n/** The search bar for the explorere */\nexport const ExplorerSearch = styled.div`\n    display: inline-block;\n    width: calc(100% - 60px);\n\n    margin: 8px 5px 8px 10px;\n\n    border: 1px solid transparent;\n\n    padding: 0px 3px;\n\n    background: #555555;\n`;\n\n/** Properties for the explorer header input */\ninterface IHeaderSearchInputProps {\n    /** If the input should be shortened for the x button */\n    short: boolean;\n}\n\n/** The input in the explorer search */\nexport const ExporerSearchInput = styled.input.attrs({\n    type: \"text\"\n}) <IHeaderSearchInputProps>`\n    &::-ms-clear {\n        display: none;\n    }\n    outline: none;\n\n    height: 20px;\n    width: ${props => props.short ? \"calc(100% - 20px)\" : \"calc(100%)\"};\n\n    background: transparent;\n    color: #cccccc;\n    border: none;\n\n    font-size: 15px;\n\n    padding: 0px;\n\n    display: inline-block;\n`;\n\n/** The x button on the explorer */\nexport const ExplorerSearchX = styled.div`\n    height: 20px;\n    font-size: 16px;\n    width: 20px;\n\n    color: #cccccc;\n    text-align: center;\n    display: ${props => props.hidden === true ? \"none\" : \"inline-block\"};\n    position: relative;\n    vertical-align: text-bottom;\n\n    user-select: none;\n\n    &:hover {\n        color: #f04747;\n    }\n\n    svg {\n        position: absolute;\n\n        top: 50%;\n        left: 50%;\n\n        transform: translate(-50%, -50%);\n    }\n`;\n\n/** The add button on the explorer */\nexport const ExplorerAddButton = styled.div`\n    color: #cccccc;\n    text-align: center;\n    display: inline-block;\n    position: relative;\n\n    user-select: none;\n\n    width: 20px;\n    margin: 0 5px;\n\n    &:hover {\n        color: #43b581;\n    }\n`;\n\n/** The exporer groups section props */\ninterface IExplorerGroupsProps {\n    /** If there is smthn dragged over */\n    dragOver: boolean;\n}\n\n/** The groupd section of the explorer */\nexport const ExplorerGroups = styled.div<IExplorerGroupsProps>`\n    grid-row: 2;\n    user-select: none;\n\n    overflow: auto;\n    height: 100%;\n\n    padding: 10px 0px 10px 0px;\n    background: ${props => props.dragOver ? \"#ec52ec80\" : \"none\"};\n`;\n\n/** The highlighted match of the search term */\nexport const ExplorerHighlight = styled.span`\n    background: #ff440041;\n`;","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport styled from \"styled-components\";\n\n/** Props for a component that is selectable */\nexport interface ISelectableProps {\n    /** If the component is selected */\n    selected: boolean;\n}\n\n/** The title to the card group */\nexport const CardGroupTitle = styled.div<ISelectableProps>`\n    padding: 0px 0px 0px 10px;\n    background: ${props => props.selected ? \"#2b5c3b\" : \"none\"};\n\n    &:hover {\n        background: #414141;\n    }\n`;\n\n/** The carat for the card group */\nexport const CardGroupCaret = styled.div`\n    display: inline-block;\n    width: 20px;\n    text-align: center;\n`;\n\n/** The name for the group */\nexport const CardGroupName = styled.div`\n    display: inline-block;\n    font-weight: bold;\n    font-size: 20px;\n`;","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport styled from \"styled-components\";\nimport { ISelectableProps } from \"./cardGroup\";\n\n/** The title to the card group */\nexport const CardTitle = styled.div<ISelectableProps>`\n    min-height: 20px;\n    background: ${props => props.selected ? \"#515151\" : \"none\"};\n\n    &:hover {\n        background: #414141;\n    }\n\n    padding: 3px 0px 3px 30px;\n`;","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { useObserver } from \"mobx-react-lite\";\nimport React, { useContext } from \"react\";\nimport ICard from \"../card/card\";\nimport { GlobalStateContext, SelectionType } from \"../state\";\nimport { CardTitle } from \"../styles/explorer/card\";\nimport { BetterMenuProvider } from \"./ContextMenu\";\nimport { highlightMatches } from \"./Explorer\";\n\n/** The propt */\ninterface IProps {\n    /** The card id */\n    id: number;\n    /** The group id */\n    groupid: number;\n    /** The search term */\n    search: string;\n}\n\n/** Filter for cards */\nexport function cardFilter(filter: string) {\n    return (card: ICard) => (card.name !== undefined && card.name.toLowerCase().includes(filter.toLowerCase()));\n}\n\n/** A card component in the explortr */\nexport default function CardComponent({ groupid, id, search }: IProps) {\n    const state = useContext(GlobalStateContext);\n\n    const select = () => state.select(groupid, id);\n\n    return useObserver(() => {\n        const card = state.groups[groupid].cards[id];\n\n        // Hide the card if there is a search term AND\n        const hidden = search !== \"\" && (\n            // If the group is not selected AND\n            state.selection.type !== SelectionType.Card\n            || state.selection.card !== id\n            || state.selection.group !== groupid\n            // Or if it is a match\n        ) && !cardFilter(search)(card);\n\n        return (\n            <BetterMenuProvider id=\"card-contextmenu\" selection={{ type: SelectionType.Card, card: id, group: groupid }}>\n                <CardTitle\n                    selected={state.selection.type === SelectionType.Card && state.selection.card === id && state.selection.group === groupid}\n                    onClick={select}\n                    hidden={hidden}\n                >\n                    {/* Highlight any text in the card that matches the search query */}\n                    {highlightMatches(card.name, search)}\n                </CardTitle>\n            </BetterMenuProvider>\n        );\n    });\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { faCaretDown, faCaretRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Observer, useObserver } from \"mobx-react-lite\";\nimport React, { useContext, useState } from \"react\";\nimport { GlobalStateContext, SelectionType } from \"../state\";\nimport { CardGroupCaret, CardGroupName, CardGroupTitle } from \"../styles/explorer/cardGroup\";\nimport CardComponent, { cardFilter } from \"./CardComponent\";\nimport { BetterMenuProvider } from \"./ContextMenu\";\nimport { highlightMatches } from \"./Explorer\";\n\n/** The props */\ninterface IProps {\n    /** The card id */\n    id: number;\n    /** The search term */\n    search: string;\n}\n\n/** A component to show a card group in the side panel */\nexport default function CardGroupComponent({ id, search }: IProps) {\n    const [collapsed, setCollapsed] = useState(false);\n    const state = useContext(GlobalStateContext);\n\n    // Hide the group if there is a search term AND\n    const hidden = useObserver(() => search !== \"\" && (\n        // If there are no cards in the group that match the filter\n        state.groups[id].cards.filter(cardFilter(search)).length === 0\n        // AND the name of the group does not match\n        && !state.groups[id].name.toLowerCase().includes(search.toLowerCase())\n        // AND the group is not selected OR any card in the group\n        && !((state.selection.type === SelectionType.Card || state.selection.type === SelectionType.Group) && state.selection.group === id)\n    ));\n\n    const toggleCollapse = () => setCollapsed(!collapsed);\n\n    return useObserver(() => (\n        <BetterMenuProvider id=\"group-contextmenu\" selection={{ type: SelectionType.Group, group: id }}>\n            <div hidden={hidden}>\n                <CardGroupTitle selected={state.selection.type === SelectionType.Group && state.selection.group === id} onClick={toggleCollapse}>\n                    <CardGroupCaret>\n                        <FontAwesomeIcon icon={collapsed ? faCaretRight : faCaretDown} />\n                    </CardGroupCaret>\n                    <CardGroupName>\n                        {/* Highlight any text in the name that matches the search query */}\n                        <Observer>{() => <>{highlightMatches(state.groups[id].name, search)}</>}</Observer>\n                    </CardGroupName>\n                </CardGroupTitle>\n                <div hidden={collapsed}>\n                    <Observer>{() => <>{state.groups[id].cards.map((_, j) => <CardComponent key={j} id={j} groupid={id} search={search} />)}</>}</Observer>\n                </div>\n            </div>\n        </BetterMenuProvider>\n    ));\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Observer } from \"mobx-react-lite\";\nimport React, { ChangeEvent, DragEvent, useContext, useState } from \"react\";\nimport { MenuItemEventHandler, TriggerEvent } from \"react-contexify/lib/types\";\nimport CardGroup from \"../card/cardGroup\";\nimport { GlobalStateContext, Selection, SelectionType } from \"../state\";\nimport { ExplorerAddButton, ExplorerContainer, ExplorerGroups, ExplorerHeader, ExplorerHighlight, ExplorerSearch, ExplorerSearchX, ExporerSearchInput } from \"../styles/explorer\";\nimport { DownloadFile, load, textFileReaderAsync } from \"../util/file\";\nimport useIsTop from \"../util/useIsTop\";\nimport CardGroupComponent from \"./CardGroupComponent\";\nimport { BetterMenuProvider } from \"./ContextMenu\";\n\n/** Highlight the matches to the match string */\nexport function highlightMatches(text?: string, match?: string) {\n    // Only spend time spliting if there is a match to look for\n    if (match !== undefined && match !== \"\") {\n        // Split on higlight term and include term into parts, ignore case\n        return text !== undefined && text !== \"\" ?\n            text.split(new RegExp(`(${match.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\")})`, \"gi\"))\n                .map((part, i) => (\n                    // If the part is the same as the search term, give it the class highlight\n                    part.toLowerCase() === match.toLowerCase() ? (\n                        <ExplorerHighlight>\n                            {part}\n                        </ExplorerHighlight>\n                    ) : (\n                            <span key={i}>\n                                {part}\n                            </span>\n                        )\n                )) : undefined;\n    } else {\n        return text;\n    }\n}\n\n/** The args passed to a context menu item when it is clicked */\nexport interface IItemArgs {\n    /** The event that triggered the click */\n    event: TriggerEvent;\n    /** The props passed to the item */\n    props: Selection;\n}\n\n/** The handler type that react-contextify needs */\nexport type ItemHandler<T = void> = (info: MenuItemEventHandler) => T;\n\n/** The explorer view */\nexport default function Explorer() {\n    const [search, setSearch] = useState(\"\");\n    const [isDragOver, setDragOver] = useState(false);\n    const [isTop, onScroll] = useIsTop();\n    const state = useContext(GlobalStateContext);\n\n    const onDragEnter = () => setDragOver(true);\n    const onDragExit = () => setDragOver(false);\n    const onDragOver = (event: DragEvent<HTMLDivElement>) => {\n        event.preventDefault();\n    };\n\n    const onDrop = async (event: DragEvent<HTMLDivElement>) => {\n        event.preventDefault();\n        event.persist();\n\n        setDragOver(false);\n\n        for (let i = 0; i < event.dataTransfer.items.length; i++) {\n            const file = event.dataTransfer.files[i];\n\n            if (file.type === \"application/json\" || file.name.endsWith(\".json\")) {\n                const contents = await textFileReaderAsync(file);\n\n                load(JSON.parse(contents) as DownloadFile, state);\n            } else {\n                console.error(`Format \"${file.type}\" unrecognised`);\n            }\n        }\n\n        event.dataTransfer.items.clear();\n    };\n\n    const clearSearch = () => setSearch(\"\");\n    const updateSearch = (e: ChangeEvent<HTMLInputElement>) => setSearch(e.target.value);\n\n    const addGroup = () => {\n        const idx = state.addGroup(new CardGroup(`New Group ${state.groups.length}`));\n        state.select(idx);\n    };\n\n    return (\n        <ExplorerContainer>\n            {/* Search results */}\n            <BetterMenuProvider id=\"none-contextmenu\" selection={{ type: SelectionType.None }}>\n                <ExplorerGroups dragOver={isDragOver} onScroll={onScroll} onDrop={onDrop} onDragEnter={onDragEnter} onDragExit={onDragExit} onDragOver={onDragOver}>\n                    <Observer>{() => <>{state.groups.map((_, i) => <CardGroupComponent key={i} id={i} search={search} />)}</>}</Observer>\n                </ExplorerGroups>\n            </BetterMenuProvider>\n\n            {/* Header */}\n            <ExplorerHeader isTop={isTop}>\n                <ExplorerSearch>\n                    <ExporerSearchInput short={search !== \"\"} value={search} onChange={updateSearch} />\n                    <ExplorerSearchX hidden={search === \"\"} onClick={clearSearch}>\n                        <FontAwesomeIcon icon={faTimes} />\n                    </ExplorerSearchX>\n                </ExplorerSearch>\n                <ExplorerAddButton onClick={addGroup}><FontAwesomeIcon icon={faPlus} /></ExplorerAddButton>\n            </ExplorerHeader>\n        </ExplorerContainer>\n    );\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { UIEvent, useState } from \"react\";\n\n/** Hook to determine if a component is at the top */\nexport default function useIsTop(): [boolean, (event: UIEvent<HTMLDivElement>) => void] {\n    const [isTop, setTop] = useState(true);\n\n    /** Listen for scroll */\n    const onScroll = (event: UIEvent<HTMLDivElement>) => {\n        if (isTop !== (event.currentTarget.scrollTop === 0)) {\n            setTop(event.currentTarget.scrollTop === 0);\n        }\n    };\n\n    return [isTop, onScroll];\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport styled from \"styled-components\";\n\n/** The styles for the modal */\nexport const ModalStyles: {\n    /** The content props */\n    content: React.CSSProperties;\n    /** The overlay props */\n    overlay: React.CSSProperties;\n} = {\n    content: {\n        background: \"#1a1a1a\",\n        border: \"solid 1px #666666\",\n        color: \"#b8b8b8\",\n        height: \"150px\",\n        left: \"50%\",\n        maxHeight: \"calc(100% - 40px)\",\n        maxWidth: \"calc(100% - 40px)\",\n        minHeight: \"100px\",\n        minWidth: \"100px\",\n        position: \"absolute\",\n        top: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        width: \"500px\",\n    },\n    overlay: {\n        background: \"#000000AA\"\n    }\n};\n\n/** The container for the modal */\nexport const ModalContainer = styled.div`\n    display: grid;\n    grid-template-columns: auto;\n    grid-template-rows: auto 40px 30px;\n    height: 100%;\n\n    grid-column-gap: 10px;\n\n    color: #cccccc;\n    font-size: 20px;\n`;\n\n/** The dialog for the modal */\nexport const ModalDialog = styled.div`\n    grid-row: 1;\n    margin-left: 10px;\n`;\n\n/** An emphasis on the modal text */\nexport const ModalEmph = styled.span`\n    font-weight: bold;\n    font-style: italic;\n`;\n\n/** The description for the modal */\nexport const ModalDesc = styled.div`\n    grid-row: 2;\n\n    margin-left: 10px;\n    font-weight: bold;\n`;\n\n/** A danger emphasis on modal text */\nexport const ModalDangerEmph = styled.span`\n    color: #f04747;\n`;\n\n/** The buttons on a modal */\nexport const ModalButtons = styled.div`\n    grid-row: 3;\n    text-align: center;\n`;\n\n/** A modal button */\nexport const ModalButton = styled.button`\n    background: #313131;\n    border: none;\n    color: #cccccc;\n\n    padding: 5px 10px;\n    border-radius: 5px;\n\n    margin: 0px 10px;\n\n    &:hover {\n        background: #515151;\n    }\n`;\n\n/** A modal button that represents a dangerous action */\nexport const ModalDangerButton = styled(ModalButton)`\n    color: #f04747;\n    font-weight: bold;\n\n    &:hover {\n        background: #f04747;\n        color: #FFFFFF;\n    }\n`;\n\n/** A modal button that represents a suggested action */\nexport const ModalSuggestedButton = styled(ModalButton)`\n    color: #17831d;\n    font-weight: bold;\n\n    &:hover {\n        background: #17831d;\n        color: #FFFFFF;\n    }\n`;","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { Observer } from \"mobx-react-lite\";\nimport React, { useContext } from \"react\";\nimport ReactModal from \"react-modal\";\nimport { GlobalStateContext, Selection, SelectionType } from \"../state\";\nimport { ModalButton, ModalButtons, ModalContainer, ModalDangerButton, ModalDangerEmph, ModalDesc, ModalDialog, ModalEmph, ModalStyles } from \"../styles/modal\";\n\n/** The props for the delete modal */\ninterface IDeleteModalProps {\n    /** The selection to delete */\n    deleteSelection: Selection;\n    /** A way to change the selection */\n    setDeleteSelection(selection: Selection): void;\n}\n\n/** The delete confirmation modal */\nexport default function DeleteModal({ deleteSelection, setDeleteSelection }: IDeleteModalProps) {\n    const state = useContext(GlobalStateContext);\n\n    const deleteCard = () => {\n        if (deleteSelection.type === SelectionType.Group) {\n            state.select();\n            state.removeGroup(deleteSelection.group);\n        } else if (deleteSelection.type === SelectionType.Card) {\n            state.select(deleteSelection.group);\n            state.groups[deleteSelection.group].removeCard(deleteSelection.card);\n        } else {\n            console.warn(\"Attempted to delete card when no card selected for deletion\");\n        }\n\n        setDeleteSelection({ type: SelectionType.None });\n    };\n    const closeDeleteModal = () => setDeleteSelection({ type: SelectionType.None });\n\n    const confirmationMessage = () => {\n        if (deleteSelection.type === SelectionType.Group) {\n            const group = state.groups[deleteSelection.group];\n\n            return <span>Are you sure you want to delete the group <ModalEmph>{group.name}</ModalEmph> and all of its cards</span>;\n        } else if (deleteSelection.type === SelectionType.Card) {\n            const card = state.groups[deleteSelection.group].cards[deleteSelection.card];\n\n            return <span>Are you sure you want to delete the card <ModalEmph>{card.name}</ModalEmph></span>;\n        } else {\n            return <span>You have reached an invalid state, please press cancel</span>;\n        }\n    };\n\n    return (\n        <ReactModal isOpen={deleteSelection.type !== SelectionType.None} style={ModalStyles}>\n            <ModalContainer>\n                <ModalDialog>\n                    <Observer>{confirmationMessage}</Observer>\n                </ModalDialog>\n                <ModalDesc>\n                    This action is <ModalDangerEmph>irreversible</ModalDangerEmph>\n                </ModalDesc>\n                <ModalButtons>\n                    <ModalButton onClick={closeDeleteModal}>Cancel</ModalButton>\n                    <ModalDangerButton onClick={deleteCard}>Delete</ModalDangerButton>\n                </ModalButtons>\n            </ModalContainer>\n        </ReactModal>\n    );\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\n/** Check for localhost uri */\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    ) !== null\n);\n\n/** Method to register the service worker */\nexport default function register(setUpdateAvaliable: (is: boolean) => void) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.toString()\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, setUpdateAvaliable);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                        \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\n                    );\n                }).catch(e => console.error(e));\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl, setUpdateAvaliable);\n            }\n        });\n    }\n}\n\n/** Method to register a valid service worker */\nfunction registerValidSW(swUrl: string, setUpdateAvaliable: (is: boolean) => void) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker !== null) {\n                    installingWorker.onstatechange = () => {\n                        if (installingWorker.state === \"installed\") {\n                            if (navigator.serviceWorker.controller !== null) {\n                                // At this point, the old content will have been purged and\n                                // the fresh content will have been added to the cache.\n                                // It's the perfect time to display a 'New content is\n                                // available; please refresh.' message in your web app.\n                                console.log(\"New content is available; please refresh.\");\n                                setUpdateAvaliable(true);\n                            } else {\n                                // At this point, everything has been precached.\n                                // It's the perfect time to display a\n                                // 'Content is cached for offline use.' message.\n                                console.log(\"Content is cached for offline use.\");\n                            }\n                        }\n                    };\n                }\n            };\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\n/** A method to make sure that the service worker exists before usig it */\nfunction checkValidServiceWorker(swUrl: string, setUpdateAvaliable: (is: boolean) => void) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get(\"content-type\")!.indexOf(\"javascript\") === -1 // tslint:disable-line: no-non-null-assertion\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration =>\n                    registration.unregister()\n                        .then(() => {\n                            window.location.reload();\n                        })\n                ).catch(e => console.error(e));\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, setUpdateAvaliable);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\n/** Method to unregister the service worker */\n// ts-unused-exports:disable-next-line\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration =>\n            registration.unregister()\n        ).catch(e => console.error(e));\n    }\n}\n","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport styled from \"styled-components\";\n\n/** The main app container */\nexport const AppContainer = styled.div`\n    position: absolute;\n\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n\n    display: grid;\n    grid-template-columns: 250px auto 300px;\n    grid-template-rows: 100%;\n    grid-column-gap: 3px;\n\n    min-width: 800px;\n    height: 100%;\n    width: 100%;\n\n    background: #202020;\n`;\n\n/** The container for the rendered card views */\nexport const CardContainer = styled.div`\n    grid-column: 3;\n\n    overflow-y: auto;\n    overflow-x: hidden;\n    scrollbar-width: none;\n`;","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { createGlobalStyle } from \"styled-components\";\n\n/** The global styles for all of the app */\nconst GlobalStyles = createGlobalStyle`\n    @font-face {\n        font-family: \"Modesto-Expd\";\n        src: url(\"/fonts/Modesto-Expd.woff2\");\n    }\n\n    @font-face {\n        font-family: \"Modesto-Regular\";\n        src: url(\"/fonts/Modesto-Regular.woff2\");\n    }\n\n    body,\n    html {\n        margin: 0;\n        padding: 0;\n        font-family: 'Open Sans', sans-serif;\n        overflow: auto;\n        width: 100%;\n        height: 100%;\n    }\n`;\n\nexport default GlobalStyles;","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport React from \"react\";\nimport ReactModal from \"react-modal\";\nimport { ModalButton, ModalButtons, ModalContainer, ModalDialog, ModalStyles, ModalSuggestedButton } from \"./styles/modal\";\n\n/** The props to the update modal */\ninterface IUpdateModalProps {\n    /** The has to act on */\n    show: boolean;\n    /** The action to call when a choice is made */\n    doUpdate(update: boolean): void;\n}\n\n/** The delete confirmation modal */\nexport default function UpdateModal({ doUpdate, show }: IUpdateModalProps) {\n    const callDoUpdate = (update: boolean) => () => doUpdate(update);\n\n    return (\n        <ReactModal isOpen={show} style={ModalStyles}>\n            <ModalContainer>\n                <ModalDialog>\n                    There is a new update! You can choose to update now, or ignore the message.\n                </ModalDialog>\n                <ModalButtons>\n                    <ModalSuggestedButton onClick={callDoUpdate(true)}>Update</ModalSuggestedButton>\n                    <ModalButton onClick={callDoUpdate(false)}>Ignore</ModalButton>\n                </ModalButtons>\n            </ModalContainer>\n        </ReactModal>\n    );\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { create } from \"mobx-persist\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { CardBack, CardFront } from \"./card/RenderedCard\";\nimport Editor from \"./editor/Editor\";\nimport { ExplorerContextMenus } from \"./explorer/ContextMenu\";\nimport Explorer from \"./explorer/Explorer\";\nimport DeleteModal from \"./explorer/Modal\";\nimport register from \"./registerServiceWorker\";\nimport { GlobalStateContext, Selection, SelectionType } from \"./state\";\nimport { AppContainer, CardContainer } from \"./styles/app\";\nimport { ContextMenuStyles } from \"./styles/contextMenu\";\nimport GlobalStyles from \"./styles/global\";\nimport UpdateModal from \"./UpdateModal\";\n\n/**\n * TODO:\n * - Better layout\n * - Styled components?\n * - Printing (double sided)\n */\n\n/** The main app component */\nexport default function App() {\n    const state = useContext(GlobalStateContext);\n    const [updateAvaliable, setUpdateAvaliable] = useState(false);\n    const doUpdate = (update: boolean) => {\n        if (update) {\n            console.log(\"%cUser accepting update, reloading\", \"color: goldenrod\");\n            location.reload(); // eslint-disable-line\n        } else {\n            console.log(\"%cUser ignored update\", \"color: goldenrod\");\n        }\n\n        // Hide prompt\n        setUpdateAvaliable(false);\n    };\n\n    useEffect(() => {\n        // Setup Mobx-Persist\n        const hydrate = create({\n            jsonify: true,\n            storage: localStorage\n        });\n\n        hydrate(\"state\", state);\n\n        // Setup service worker\n        register(setUpdateAvaliable);\n\n        // Disable context menu\n        document.oncontextmenu = (e) => {\n            e.preventDefault();\n        };\n        // eslint-disable-next-line\n    }, []);\n\n    const [deleteSelection, setDeleteSelection] = useState<Selection>({ type: SelectionType.None });\n\n    return (\n        <AppContainer>\n            {/* Global styles */}\n            <GlobalStyles />\n            <ContextMenuStyles />\n\n            {/* The exporer view */}\n            <Explorer />\n            <ExplorerContextMenus setDeleteSelection={setDeleteSelection} />\n            <DeleteModal setDeleteSelection={setDeleteSelection} deleteSelection={deleteSelection} />\n\n            {/* The editor */}\n            <Editor />\n\n            {/* The card renders */}\n            <CardContainer>\n                <CardFront />\n                <CardBack />\n            </CardContainer>\n\n            {/* The update modal */}\n            <UpdateModal doUpdate={doUpdate} show={updateAvaliable} />\n        </AppContainer>\n    );\n}\n","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\n// tslint:disable-next-line: no-import-side-effect\nimport \"mobx-react-lite/batchingForReactDom\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ReactModal from \"react-modal\";\nimport App from \"./App\";\n\nReactModal.setAppElement(\"#root\");\n\nReactDOM.render(\n    <App />,\n    document.getElementById(\"root\") as HTMLElement\n);"],"sourceRoot":""}