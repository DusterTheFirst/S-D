{"version":3,"sources":["state.ts","card/cardGroup.ts","util/string.ts","util/wordWrap.ts","card/RenderedCard.tsx","util/file.ts","editor/Editor.tsx","explorer/ContextMenu.tsx","explorer/CardComponent.tsx","explorer/CardGroupComponent.tsx","explorer/Explorer.tsx","explorer/Modal.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["SelectionType","CardGroup","persist","name","defaults","cards","this","_cards","card","undefined","push","oldpos","newpos","splice","i","key","value","map","data","observable","action","GlobalState","group","_selection","type","None","Group","Card","_groups","x","GlobalStateContext","createContext","bulletLists","text","replace","hashCode","s","hash","length","charCodeAt","wordWrapSVG","width","outputElement","split","initialOffset","words","elems","tspanElement","document","createElementNS","textNode","createTextNode","setAttribute","baseVal","valueAsString","attributes","getNamedItem","appendChild","some","textContent","parseFloat","firstChild","console","error","len","getComputedTextLength","slice","wordWrapOneLineSVG","reduce","a","b","CardFront","state","useContext","physComponentsRef","createRef","physComponentsBakgroundRef","descriptionRef","extDescriptionRef","extDescriptionTitleRef","useObserver","selection","groups","useEffect","currHeight","physComp","current","physCompBkg","desc","extDesc","extDescTitle","physicalComponents","height","toString","removeAttribute","description","extDescription","innerHTML","durationConc","duration","toLowerCase","match","durationCap","charAt","toUpperCase","cardlevel","parseInt","level","cardType","isNaN","j","k","ordinalSuffixOf","color","className","viewBox","fontFamily","fill","y","rx","ry","x1","y1","x2","y2","stroke","strokeWidth","textAnchor","fontSize","castingTime","range","components","display","points","dominantBaseline","ref","fontWeight","letterSpacing","clazz","CardBackDyn","useMemo","image","href","CardBack","log","outImages","g","c","hashed","Object","entries","h","id","textFileReaderAsync","file","Promise","resolve","reject","reader","FileReader","readAsText","onload","_","result","Error","onerror","dataFileReaderAsync","readAsDataURL","download","filename","link","createElement","url","URL","createObjectURL","Blob","JSON","stringify","body","click","setTimeout","removeChild","revokeObjectURL","load","addGroup","fromData","select","addCard","alert","Editor","CardSettings","GroupSettings","onChange","event","editName","currentTarget","imageRef","cardSettings","rawCards","placeholders","cardValueUpdater","editCard","editDefaults","fileInput","files","placeholder","min","max","src","alt","accept","BetterMenuProvider","children","onContextMenu","preventDefault","stopPropagation","contextMenu","hideAll","show","props","onClick","ExplorerContextMenus","setDeleteSelection","downloadClick","toJS","groupsData","addClick","deleteClick","duplicateClick","upClick","moveGroup","moveCard","downClick","upDisable","downDisable","disabled","cardFilter","filter","includes","CardComponent","groupid","search","hidden","highlightMatches","CardGroupComponent","useState","collapsed","setCollapsed","toggleCollapse","icon","faCaretRight","faCaretDown","RegExp","part","Explorer","setSearch","isDragOver","setDragOver","isTop","setTop","onDrop","dataTransfer","items","endsWith","contents","parse","clear","onScroll","scrollTop","onDragEnter","onDragExit","onDragOver","e","target","style","faTimes","idx","faPlus","ModalStyles","content","background","border","left","maxHeight","maxWidth","minHeight","minWidth","position","top","transform","overlay","DeleteModal","deleteSelection","confirmationMessage","isOpen","removeGroup","removeCard","warn","App","create","jsonify","storage","localStorage","hydrate","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactModal","setAppElement","ReactDOM","render","getElementById","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","oncontextmenu"],"mappings":"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","file":"static/js/main.41c7a54b.chunk.js","sourcesContent":["/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { action, observable } from \"mobx\";\nimport { persist } from \"mobx-persist\";\nimport { createContext } from \"react\";\nimport CardGroup, { ICardGroupData } from \"./card/cardGroup\";\n\n/** The tag for the selection enum */\nexport enum SelectionType {\n    None = \"none\",\n    Group = \"group\",\n    Card = \"card\",\n}\n\n/** The user's selection */\nexport type Selection = {\n    /** The type of selection */\n    type: SelectionType.None;\n} | {\n    /** The type of selection */\n    type: SelectionType.Group;\n    /** The current selected group */\n    group: number;\n} | {\n    /** The type of selection */\n    type: SelectionType.Card;\n    /** The current selected group */\n    group: number;\n    /** The current selected card */\n    card: number;\n};\n\n/** The global state of the application */\nexport class GlobalState {\n    /** The current selection */\n    @observable @persist(\"object\")\n    private _selection: Selection = { type: SelectionType.None };\n    /** The groups of cards */\n    @observable @persist(\"list\", CardGroup)\n    private readonly _groups: CardGroup[] = [];\n\n    /** The current selection */\n    public get selection(): Selection {\n        return this._selection;\n    }\n\n    /** Select a group and or a card */\n    @action\n    public select(group?: number, card?: number) {\n        if (group === undefined) {\n            this._selection = { type: SelectionType.None };\n        } else if (card === undefined) {\n            this._selection = {\n                group,\n                type: SelectionType.Group\n            };\n        } else {\n            this._selection = {\n                card,\n                group,\n                type: SelectionType.Card\n            };\n        }\n    }\n\n    /** Add a group */\n    @action\n    public addGroup(group: CardGroup) {\n        return this._groups.push(group) - 1;\n    }\n\n    /** Remove a group */\n    @action\n    public removeGroup(group: number) {\n        return this._groups.splice(group, 1)[0];\n    }\n\n    /** Get a group */\n    public get groups() {\n        return this._groups;\n    }\n\n    /** Get a group */\n    public get groupsData(): ICardGroupData[] {\n        return this._groups.map(x => x.data);\n    }\n\n    /** Move a group */\n    @action\n    public moveGroup(oldpos: number, newpos: number) {\n        const [group] = this._groups.splice(oldpos, 1);\n        this._groups.splice(newpos, 0, group);\n    }\n}\n\n/** The global state context */\nexport const GlobalStateContext = createContext(new GlobalState());","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { action, observable } from \"mobx\";\nimport { persist } from \"mobx-persist\";\nimport ICard from \"./card\";\n\n/** The persistant data of a card group */\nexport interface ICardGroupData {\n    /** The name of the group */\n    readonly name: string;\n    /** The defaults for the cards */\n    readonly defaults: ICard;\n    /** The child cards of the group */\n    readonly cards: ICard[];\n}\n\n/** A group of cards */\nexport default class CardGroup {\n    /** The name of the group */\n    @observable @persist\n    public name: string;\n    /** The defaults for the cards */\n    @observable @persist(\"object\")\n    public defaults: ICard;\n    /** The child cards of the group */\n    @observable @persist(\"list\")\n    private readonly _cards: ICard[];\n\n    constructor(name = \"\", defaults: ICard = {}, cards: ICard[] = []) {\n        this.name = name;\n        this._cards = cards;\n        this.defaults = defaults;\n    }\n\n    /** Create a card group from a data object */\n    public static fromData(data: ICardGroupData) {\n        return new CardGroup(data.name, data.defaults, data.cards);\n    }\n\n    /** Method to get the jsonifyable data for the group */\n    public get data(): ICardGroupData {\n        return {\n            cards: this._cards,\n            defaults: this.defaults,\n            name: this.name\n        };\n    }\n\n    /** Add a card to the group */\n    @action\n    public addCard(card: ICard = {}) {\n        if (card.name === undefined) {\n            card.name = \"Unnamed\";\n        }\n\n        return this._cards.push(card) - 1;\n    }\n\n    /** Move a cards position */\n    @action\n    public moveCard(oldpos: number, newpos: number): this {\n        const [card] = this._cards.splice(oldpos, 1);\n        this._cards.splice(newpos, 0, card);\n\n        return this;\n    }\n\n    /** Get the cards stored in the group */\n    public get cards(): ICard[] {\n        return this._cards.map(card => ({ ...this.defaults, ...card }));\n    }\n\n    /** Get the cards stored in the group without their defaults applied */\n    public get rawCards(): ICard[] {\n        return this._cards;\n    }\n\n    /** Remove a card from the group */\n    @action\n    public removeCard(i: number): ICard {\n        return this._cards.splice(i, 1)[0];\n    }\n\n    /** Change the value of a card in the group */\n    @action\n    public editCard<K extends keyof ICard>(card: number, key: K, value: ICard[K]) {\n        this._cards[card] = { ...this._cards[card], [key]: value };\n    }\n\n    /** Change the value of the groups defaults */\n    @action\n    public editDefaults<K extends keyof ICard>(key: K, value: ICard[K]) {\n        this.defaults = { ...this.defaults, [key]: value };\n    }\n\n    /** Change the value of the groups defaults */\n    @action\n    public editName(name: string) {\n        this.name = name;\n    }\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\n/** Add a suffix to a number */\nexport function ordinalSuffixOf(i: number) {\n    const j = i % 10;\n    const k = i % 100;\n    if (j === 1 && k !== 11) {\n        return `${i}st`;\n    }\n    if (j === 2 && k !== 12) {\n        return `${i}nd`;\n    }\n    if (j === 3 && k !== 13) {\n        return `${i}rd`;\n    } else {\n        return `${i}th`;\n    }\n}\n\n/** Replace `- ` and `* ` with a bullet */\nexport function bulletLists(text: string): string {\n    return text.replace(/^(\\*|-)(?= )/img, \"\\u2022\");\n}\n\n/** Hash a string */\nexport function hashCode(s: string) {\n    let hash = 0;\n    let chr;\n    for (let i = 0; i < s.length; i++) {\n        chr = s.charCodeAt(i);\n        hash = ((hash << 5) - hash) + chr; // tslint:disable-line no-bitwise\n        hash |= 0; // tslint:disable-line no-bitwise // Convert to 32bit integer\n    }\n\n    return hash;\n}\n","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\n/** Helper function to achieve word wrapping */\nexport function wordWrapSVG(text: string, width: number, outputElement: SVGTextElement) {\n    return text.replace(\"\\r\", \"\").split(\"\\n\").map((x, i) => wordWrapOneLineSVG(x, width, outputElement, i !== 0)).reduce((a, b) => a + b);\n}\n\n/** Helper Function to wrap one continous line of text in an svg */\nfunction wordWrapOneLineSVG(text: string, width: number, outputElement: SVGTextElement, initialOffset = false) {\n    const words = text.split(\" \");\n    let elems = 0;\n\n    let tspanElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"tspan\");   // Create first tspan element\n    let textNode = document.createTextNode(words[0]);           // Create text in tspan element\n\n    if (initialOffset) {\n        tspanElement.setAttribute(\"x\", outputElement.x.baseVal[0].valueAsString);\n        tspanElement.setAttribute(\"dy\", outputElement.attributes.getNamedItem(\"font-size\")?.value ?? \"\");\n\n        elems++;\n    }\n\n    tspanElement.appendChild(textNode);                     // Add tspan element to DOM\n    outputElement.appendChild(tspanElement);                        // Add text to tspan element\n\n    if (!words.some(x => x.length > 0)) {\n        tspanElement.textContent = \"\\x20\";\n\n        return parseFloat(outputElement.attributes.getNamedItem(\"font-size\")?.value ?? \"0\");\n    }\n\n    for (let i = 1; i < words.length; i++) {\n        if (tspanElement.firstChild === null || tspanElement.firstChild.textContent === null) {\n            console.error(\"TSPAN element has no first child\", tspanElement);\n\n            return elems * parseFloat(outputElement.attributes.getNamedItem(\"font-size\")?.value ?? \"0\");\n        }\n\n        const len = tspanElement.firstChild?.textContent?.length;             // Find number of letters in string\n        tspanElement.firstChild.textContent += ` ${words[i]}`;            // Add next word\n\n        if (tspanElement.getComputedTextLength() > width) {\n            tspanElement.firstChild.textContent = tspanElement.firstChild.textContent.slice(0, len);    // Remove added word\n\n            tspanElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"tspan\");       // Create new tspan element\n            tspanElement.setAttribute(\"x\", outputElement.x.baseVal[0].valueAsString);\n            tspanElement.setAttribute(\"dy\", outputElement.attributes.getNamedItem(\"font-size\")?.value ?? \"\");\n            textNode = document.createTextNode(words[i]);\n\n            tspanElement.appendChild(textNode);\n            outputElement.appendChild(tspanElement);\n\n            elems++;\n        }\n    }\n\n    return elems * parseFloat(outputElement.attributes.getNamedItem(\"font-size\")?.value ?? \"0\");\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { useObserver } from \"mobx-react-lite\";\nimport React, { createRef, useContext, useEffect, useMemo } from \"react\";\nimport { GlobalStateContext, SelectionType } from \"../state\";\nimport { bulletLists, hashCode, ordinalSuffixOf } from \"../util/string\";\nimport { wordWrapSVG } from \"../util/wordWrap\";\n\n/** The front face of the card */\nexport function CardFront() {\n    const state = useContext(GlobalStateContext);\n\n    // Refs to wrappable words\n    const physComponentsRef = createRef<SVGTextElement>();\n    const physComponentsBakgroundRef = createRef<SVGRectElement>();\n    const descriptionRef = createRef<SVGTextElement>();\n    const extDescriptionRef = createRef<SVGTextElement>();\n    const extDescriptionTitleRef = createRef<SVGGElement>();\n\n    // Card selection\n    const card = useObserver(() => state.selection.type === SelectionType.Card ? state.groups[state.selection.group].cards[state.selection.card] : state.selection.type === SelectionType.Group ? state.groups[state.selection.group].defaults : {});\n\n    // Apply word wrapping to textx\n    useEffect(() => {\n        // Collecctive hight of blocks\n        let currHeight = 0;\n\n        // Aliases for refs\n        const physComp = physComponentsRef.current;\n        const physCompBkg = physComponentsBakgroundRef.current;\n        const desc = descriptionRef.current;\n        const extDesc = extDescriptionRef.current;\n        const extDescTitle = extDescriptionTitleRef.current;\n\n        if (physCompBkg !== null) {\n            if (card.physicalComponents !== undefined && physComp !== null) {\n                const height = wordWrapSVG(bulletLists(card.physicalComponents), 44, physComp);\n\n                physCompBkg.setAttribute(\"height\", (height + 4).toString());\n                physCompBkg.removeAttribute(\"display\");\n\n                currHeight += height + 3.5;\n            } else {\n                physCompBkg.setAttribute(\"display\", \"none\");\n            }\n        }\n\n        if (card.description !== undefined && desc !== null) {\n            desc.setAttribute(\"dy\", currHeight.toString());\n            const height = wordWrapSVG(bulletLists(card.description), 44, desc);\n\n            currHeight += height;\n        }\n\n        if (extDescTitle !== null) {\n            if (card.extDescription !== undefined && extDesc !== null) {\n                const height = wordWrapSVG(bulletLists(card.extDescription), 44, extDesc);\n                extDesc.setAttribute(\"y\", (65 - height).toString());\n                extDescTitle.setAttribute(\"transform\", `translate(0, ${(62 - height)})`);\n                extDescTitle.removeAttribute(\"display\");\n            } else {\n                extDescTitle.setAttribute(\"display\", \"none\");\n            }\n        }\n\n        return () => {\n            if (physComp !== null) {\n                physComp.innerHTML = \"\";\n            }\n            if (desc !== null) {\n                desc.innerHTML = \"\";\n            }\n            if (extDesc !== null) {\n                extDesc.innerHTML = \"\";\n            }\n        };\n    }, [\n        card,\n        descriptionRef,\n        extDescriptionRef,\n        extDescriptionTitleRef,\n        physComponentsBakgroundRef,\n        physComponentsRef\n    ]);\n\n    return useObserver(() => {\n        const durationConc = card.duration !== undefined && card.duration.toLowerCase().match(/^concentration(,)? /) !== null;\n        const duration = durationConc ? card.duration?.replace(/^concentration(,)? /i, \"\") : card.duration;\n        const durationCap = `${duration?.charAt(0).toUpperCase() ?? \"\"}${duration?.slice(1) ?? \"\"}`;\n\n        const cardlevel = parseInt(card.level !== undefined ? card.level : \"0\", 10);\n        const cardType = !isNaN(cardlevel) ? cardlevel === 0 ? `${card.type} cantrip` : `${ordinalSuffixOf(cardlevel)} level ${card.type}` : undefined;\n\n        const color = card.color ?? \"#000000\";\n\n        return (\n            <svg className=\"frontview view\" width=\"50\" height=\"70\" viewBox=\"0 0 50 70\" fontFamily=\"Modesto\">\n                {/* Frame */}\n                <rect width=\"50\" height=\"70\" fill={color} />\n                {/* Background */}\n                <rect width=\"46\" height=\"64\" x=\"2\" y=\"2\" rx=\"2\" ry=\"2\" fill=\"white\" />\n\n                {/* Sections */}\n                <line x1=\"0\" y1=\"9\" x2=\"50\" y2=\"9\" stroke={color} strokeWidth=\".3\" />\n                <line x1=\"0\" y1=\"16\" x2=\"50\" y2=\"16\" stroke={color} strokeWidth=\".3\" />\n                <line x1=\"0\" y1=\"23\" x2=\"50\" y2=\"23\" stroke={color} strokeWidth=\".3\" />\n                <line x1=\"25\" y1=\"9\" x2=\"25\" y2=\"23\" stroke={color} strokeWidth=\".3\" />\n\n                {/* Title */}\n                <text fontFamily=\"ModestoW01-Expd\" textAnchor=\"middle\" fontSize=\"4\" x=\"25\" y=\"6.75\">{card.name}</text>\n\n                {/* Casting Time */}\n                <text fontFamily=\"ModestoW01-Expd\" fontSize=\"2\" fill={color} x=\"13.5\" y=\"12\" textAnchor=\"middle\">CASTING TIME</text>\n                <text fontSize=\"2\" x=\"13.5\" y=\"14.6\" textAnchor=\"middle\">{card.castingTime}</text>\n\n                {/* Range */}\n                <text fontFamily=\"ModestoW01-Expd\" fontSize=\"2\" fill={color} x=\"36.5\" y=\"12\" textAnchor=\"middle\">RANGE</text>\n                <text fontSize=\"2\" x=\"36.5\" y=\"14.6\" textAnchor=\"middle\">{card.range}</text>\n\n                {/* Components */}\n                <text fontFamily=\"ModestoW01-Expd\" fontSize=\"2\" fill={color} x=\"13.5\" y=\"19\" textAnchor=\"middle\">COMPONENTS</text>\n                <text fontSize=\"2\" x=\"13.5\" y=\"21.6\" textAnchor=\"middle\">{card.components}</text>\n\n                {/* Duration */}\n                <text fontFamily=\"ModestoW01-Expd\" fontSize=\"2\" fill={color} x=\"36.5\" y=\"19\" textAnchor=\"middle\">DURATION</text>\n                <text fontSize=\"2\" x=\"36.5\" y=\"21.6\" textAnchor=\"middle\">{durationCap}</text>\n                {/* Duration Concentration */}\n                <g display={durationConc ? undefined : \"none\"}>\n                    <polygon points=\"46,17 44,19.5 46,22 48,19.5 46,17\" fill={color} />\n                    <text fontFamily=\"ModestoW01-Expd\" fontSize=\"2\" x=\"46\" y=\"19.5\" dominantBaseline=\"middle\" textAnchor=\"middle\" fill=\"#ffffff\">C</text>\n                </g>\n\n                {/* Physical Components */}\n                <rect width=\"50\" height=\"3.5\" y=\"23\" fill={color} ref={physComponentsBakgroundRef} />\n                <text fontSize=\"2\" x=\"3\" y=\"25.6\" ref={physComponentsRef} fill=\"#ffffff\" />\n                {/* Description */}\n                <text fontSize=\"2\" x=\"3\" y=\"25.5\" ref={descriptionRef} />\n                {/* Extended Description */}\n                <g ref={extDescriptionTitleRef}>\n                    <rect width=\"50\" height=\"3.5\" y=\"-3\" fill={color} />\n                    <text fontWeight=\"bold\" letterSpacing=\".1\" y=\"-.4\" fontSize=\"2\" x=\"25\" textAnchor=\"middle\" fill=\"#ffffff\">At Higher Levels</text>\n                </g>\n                <text fontSize=\"2\" x=\"3\" ref={extDescriptionRef} />\n\n                {/* Card class */}\n                <text fontFamily=\"ModestoW01-Expd\" fontSize=\"2\" fill=\"white\" x=\"2.5\" y=\"68.5\">{card.clazz}</text>\n                {/* Card type */}\n                <text fontSize=\"2\" fill=\"white\" x=\"48\" y=\"68.5\" textAnchor=\"end\">{cardType}</text>\n            </svg>\n        );\n    });\n}\n\n/** The more dynamic part of the card back */\nfunction CardBackDyn() {\n    const state = useContext(GlobalStateContext);\n\n    const card = useObserver(() => state.selection.type === SelectionType.Card ? state.groups[state.selection.group].cards[state.selection.card] : state.selection.type === SelectionType.Group ? state.groups[state.selection.group].defaults : {});\n    const hash = useMemo(() => hashCode(card.image ?? \"\"), [card.image]);\n\n    return useObserver(() => {\n        const color = card.color ?? \"#000000\";\n\n        return (\n            <>\n                {/* Frame */}\n                <rect width=\"50\" height=\"70\" fill={color} />\n\n                {/* Background */}\n                <rect width=\"46\" height=\"66\" x=\"2\" y=\"2\" rx=\"2\" ry=\"2\" fill=\"white\" />\n\n                {/* Rounded line */}\n                <rect width=\"40\" height=\"60\" x=\"5\" y=\"5\" rx=\"2\" ry=\"2\" stroke={color} strokeWidth=\"0.5\" fill=\"transparent\" />\n\n                {/* Rhombus */}\n                <polyline points=\"5.25,35 25,5.25 45,34.75 25,64.75 5.25,35\" fill=\"transparent\" stroke={color} strokeWidth=\".5\" />\n\n                {/* Card level top right */}\n                <text fontSize=\"10\" fontWeight=\"bold\" fill={color} x=\"38\" y=\"15\" textAnchor=\"middle\">{card.level}</text>\n                {/* Card level bottom left */}\n                <text fontSize=\"10\" fontWeight=\"bold\" fill={color} x=\"12\" y=\"62\" textAnchor=\"middle\">{card.level}</text>\n\n                {/* Card image */}\n                <use href={`#${hash}`} />\n            </>\n        );\n    });\n}\n\n/** The back face of the card */\nexport function CardBack() {\n    const state = useContext(GlobalStateContext);\n\n    return useObserver(() => {\n        console.log(\"compute\");\n        const outImages: { [x: string]: string | undefined } = {};\n\n        for (const g of state.groups) {\n            for (const c of g.cards) {\n                if (c.image !== undefined) {\n                    const hashed = hashCode(c.image);\n                    if (outImages[hashed] === undefined) {\n                        outImages[hashed] = c.image;\n                    }\n                }\n            }\n        }\n\n        return (\n            <svg className=\"backview view\" width=\"50\" height=\"70\" viewBox=\"0 0 50 70\" fontFamily=\"Modesto\">\n                {/* Cache images on screen for faster switch */}\n                <defs>\n                    {Object.entries(outImages).map(([h, image]) => <image key={h} id={h} href={image} width=\"25\" height=\"25\" x=\"12.5\" y=\"22.5\" />)}\n                </defs>\n\n                <CardBackDyn />\n            </svg>\n        );\n    });\n}\n","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport ICard from \"../card/card\";\nimport CardGroup, { ICardGroupData } from \"../card/cardGroup\";\nimport { GlobalState, SelectionType } from \"../state\";\n\n/** Helper to create a file reader that is async and reads text */\nexport async function textFileReaderAsync(file: Blob) {\n    return new Promise<string>((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsText(file);\n        reader.onload = (_) => {\n            if (reader.result !== null) {\n                resolve(reader.result.toString());\n            } else {\n                reject(new Error(\"No result\"));\n            }\n        };\n        reader.onerror = reject;\n    });\n}\n\n/** Helper that can create a file reaer that is async and reads data */\nexport async function dataFileReaderAsync(file: Blob) {\n    return new Promise<string>((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = (_) => {\n            if (reader.result !== null) {\n                resolve(reader.result.toString());\n            } else {\n                reject(new Error(\"No result\"));\n            }\n        };\n        reader.onerror = reject;\n    });\n}\n\n/** The structure for a downloaded file */\nexport type DownloadFile = {\n    /** The type of selection */\n    type: SelectionType.None;\n    /** All groups */\n    data: ICardGroupData[];\n} | {\n    /** The type of selection */\n    type: SelectionType.Group;\n    /** The group */\n    data: ICardGroupData;\n} | {\n    /** The type of selection */\n    type: SelectionType.Card;\n    /** The card */\n    data: ICard;\n};\n\n/** Helper to download a file */\nexport function download(file: DownloadFile, filename: string) {\n    const link = document.createElement(\"a\");\n    const url = URL.createObjectURL(new Blob([JSON.stringify(file)], { type: \"application/json\" }));\n\n    link.href = url;\n    link.download = filename;\n    document.body.appendChild(link);\n    link.click();\n\n    setTimeout(() => {\n        document.body.removeChild(link);\n        URL.revokeObjectURL(url);\n    }, 0);\n}\n\n/** Helper to laod a file */\nexport function load(file: DownloadFile, state: GlobalState) {\n    if (file.type === SelectionType.None) {\n        for (const group of file.data) {\n            state.addGroup(CardGroup.fromData(group));\n        }\n    } else if (file.type === SelectionType.Group) {\n        const id = state.addGroup(CardGroup.fromData(file.data));\n        state.select(id);\n    } else {\n        if (state.selection.type === SelectionType.Card || state.selection.type === SelectionType.Group) {\n            const id = state.groups[state.selection.group].addCard(file.data);\n            state.select(id);\n        } else {\n            alert(\"Attempted to add a card when no group is selected\");\n        }\n    }\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { useObserver } from \"mobx-react-lite\";\nimport React, { createRef, useContext } from \"react\";\nimport ICard from \"../card/card\";\nimport { GlobalStateContext, SelectionType } from \"../state\";\nimport { dataFileReaderAsync } from \"../util/file\";\nimport \"./Editor.scss\";\n\n/** The editor component */\nexport default function Editor() {\n    const state = useContext(GlobalStateContext);\n\n    // TODO: For saving\n    // const handleKeyDown = (event: KeyboardEvent<HTMLDivElement>) => {\n    //     const charCode = String.fromCharCode(event.which).toLowerCase();\n    //     if ((event.ctrlKey || event.metaKey) && charCode === \"s\") {\n    //         event.preventDefault();\n    //     }\n    // };\n\n    return useObserver(() => {\n        if (state.selection.type !== SelectionType.None) {\n            return <CardSettings />;\n        } else {\n            return <div className=\"empty\">You have nothing selected</div>;\n        }\n    });\n}\n\n/** The group settings part */\nfunction GroupSettings() {\n    const state = useContext(GlobalStateContext);\n\n    return useObserver(() => {\n        if (state.selection.type !== SelectionType.Group) {\n            return null;\n        }\n\n        const id = state.selection.group;\n\n        const update = (event: React.FormEvent<HTMLInputElement>) => {\n            state.groups[id].editName(event.currentTarget.value);\n        };\n\n        return (\n            <div className=\"groupsettings\">\n                <div className=\"title\">Group settings</div>\n                <label>\n                    Name:\n                <input type=\"text\" value={state.groups[state.selection.group].name ?? \"\"} onChange={update} />\n                </label>\n            </div>\n        );\n    });\n}\n\n/** The CardSettings section */\nfunction CardSettings() {\n    const state = useContext(GlobalStateContext);\n    const imageRef = createRef<HTMLInputElement>();\n\n    return useObserver(() => {\n        const cardSettings = state.selection.type === SelectionType.Card ? state.groups[state.selection.group].rawCards[state.selection.card] : state.selection.type === SelectionType.Group ? state.groups[state.selection.group].defaults : {};\n        const placeholders = state.selection.type === SelectionType.Card ? state.groups[state.selection.group].defaults : undefined;\n\n        /** Update the internal cache values of a text value */\n        const cardValueUpdater = (name: keyof ICard) => {\n            return (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n                event.persist();\n\n                if (state.selection.type === SelectionType.Card) {\n                    state.groups[state.selection.group].editCard(state.selection.card, name, event.currentTarget.value === \"\" ? undefined : event.currentTarget.value);\n                } else if (state.selection.type === SelectionType.Group) {\n                    state.groups[state.selection.group].editDefaults(name, event.currentTarget.value === \"\" ? undefined : event.currentTarget.value);\n                }\n            };\n        };\n\n        const fileInput = async (event: React.FormEvent<HTMLInputElement>) => {\n            event.persist();\n\n            if (state.selection.type === SelectionType.Card) {\n                if (imageRef.current !== null) {\n                    let image: string | undefined;\n\n                    if (imageRef.current.files !== null) {\n                        image = await dataFileReaderAsync(imageRef.current.files[0]);\n                    }\n\n                    state.groups[state.selection.group].editCard(state.selection.card, \"image\", image);\n                }\n            }\n        };\n\n        return (\n            <div className=\"editor\">\n                <div className=\"values\">\n                    <GroupSettings />\n                    <div className=\"title\">Card Settings</div>\n                    <label>\n                        Name:\n                        <input type=\"text\" value={cardSettings.name ?? \"\"} onChange={cardValueUpdater(\"name\")} placeholder={placeholders?.name} />\n                    </label>\n                    <label>\n                        Casting Time:\n                        <input type=\"text\" value={cardSettings.castingTime ?? \"\"} onChange={cardValueUpdater(\"castingTime\")} placeholder={placeholders?.castingTime} />\n                    </label>\n                    <label>\n                        Range:\n                        <input type=\"text\" value={cardSettings.range ?? \"\"} onChange={cardValueUpdater(\"range\")} placeholder={placeholders?.range} />\n                    </label>\n                    <label>\n                        Components:\n                        <input type=\"text\" value={cardSettings.components ?? \"\"} onChange={cardValueUpdater(\"components\")} placeholder={placeholders?.components ?? \"\"} />\n                    </label>\n                    <label>\n                        Duration:\n                        <input type=\"text\" value={cardSettings.duration ?? \"\"} onChange={cardValueUpdater(\"duration\")} placeholder={placeholders?.duration} />\n                    </label>\n                    <label>\n                        Physical Components:\n                        <textarea value={cardSettings.physicalComponents ?? \"\"} onChange={cardValueUpdater(\"physicalComponents\")} placeholder={placeholders?.physicalComponents} />\n                    </label>\n                    <label>\n                        Description:\n                        <textarea value={cardSettings.description ?? \"\"} onChange={cardValueUpdater(\"description\")} placeholder={placeholders?.description} />\n                    </label>\n                    <label>\n                        Extended Description:\n                        <textarea value={cardSettings.extDescription ?? \"\"} onChange={cardValueUpdater(\"extDescription\")} placeholder={placeholders?.extDescription} />\n                    </label>\n                    <label>\n                        Class:\n                        <input type=\"text\" value={cardSettings.clazz ?? \"\"} onChange={cardValueUpdater(\"clazz\")} placeholder={placeholders?.clazz} />\n                    </label>\n                    <label>\n                        Type:\n                        <input type=\"text\" value={cardSettings.type ?? \"\"} onChange={cardValueUpdater(\"type\")} placeholder={placeholders?.type} />\n                    </label>\n                    <label>\n                        Level:\n                        <input type=\"number\" min={0} max={99} value={cardSettings.level ?? \"\"} onChange={cardValueUpdater(\"level\")} placeholder={placeholders?.level === undefined ? undefined : placeholders?.level?.toString()} />\n                    </label>\n                    <label>\n                        Color:\n                        <input type=\"color\" value={cardSettings.color ?? \"\"} onChange={cardValueUpdater(\"color\")} placeholder={placeholders?.color} />\n                    </label>\n                    <label>\n                        Image:\n                        <img src={cardSettings.image} alt=\"Card Back\" />\n                        <input type=\"file\" accept=\"image/*\" onChange={fileInput} ref={imageRef} />\n                    </label>\n\n                    {/* TODO:? <button className={`save ${this.state.saved ? \"saved\" : \"unsaved\"}`} onClick={this.saveClick}>Save</button> */}\n                </div>\n            </div>\n        );\n    });\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { toJS } from \"mobx\";\nimport { useObserver } from \"mobx-react-lite\";\nimport React, { MouseEvent, PropsWithChildren, useContext } from \"react\";\nimport { contextMenu, Item, Menu, Separator } from \"react-contexify\";\nimport CardGroup from \"../card/cardGroup\";\nimport { GlobalStateContext, Selection, SelectionType } from \"../state\";\nimport { download } from \"../util/file\";\nimport { IItemArgs, ItemHandler } from \"./Explorer\";\n\n/** Props to the better menu provider component */\ninterface IBMPProps {\n    /** The id of the context menu */\n    id: string;\n    /** The selection that the menu should act upon */\n    selection: Selection;\n}\n\n/** A better menu provider */\nexport function BetterMenuProvider({ id, children, selection }: PropsWithChildren<IBMPProps>) {\n    const rightClick = (event: MouseEvent) => {\n        event.preventDefault();\n        event.stopPropagation();\n        event.persist();\n\n        contextMenu.hideAll();\n        setTimeout(() => contextMenu.show({\n            event,\n            id,\n            props: selection\n        }), 1);\n    };\n\n    const leftClick = (_: MouseEvent) => {\n        contextMenu.hideAll();\n    };\n\n    return (\n        <div onContextMenu={rightClick} onClick={leftClick}>\n            {children}\n        </div>\n    );\n}\n\n/** Props for the Explorer context menus */\ninterface IECMProps {\n    /** State changer for delete selection */\n    setDeleteSelection(val: Selection): void;\n}\n\n/** The context menus for the explorer */\nexport function ExplorerContextMenus({ setDeleteSelection }: IECMProps) {\n    const state = useContext(GlobalStateContext);\n\n    return useObserver(() => {\n        const downloadClick = (({ props }: IItemArgs) => {\n            if (props.type === SelectionType.Group) {\n                const group = state.groups[props.group];\n\n                download({ type: SelectionType.Group, data: group.data }, `${group.name}.group.json`);\n            } else if (props.type === SelectionType.Card) {\n                const card = state.groups[props.group].cards[props.card];\n\n                download({ type: SelectionType.Card, data: card }, `${card.name}.card.json`);\n            } else {\n                download({ type: SelectionType.None, data: toJS(state.groupsData) }, `workspace.json`);\n            }\n        }) as unknown as ItemHandler;\n\n        const addClick = (({ props }: IItemArgs) => {\n            if (props.type === SelectionType.Group) {\n                const id = state.groups[props.group].addCard();\n                state.select(props.group, id);\n            } else if (props.type === SelectionType.None) {\n                const id = state.addGroup(new CardGroup(`New Group ${state.groups.length}`));\n                state.select(id);\n            }\n        }) as unknown as ItemHandler;\n\n        const editClick = (({ props }: IItemArgs) => {\n            if (props.type === SelectionType.Group) {\n                state.select(props.group);\n            }\n        }) as unknown as ItemHandler;\n\n        const editDisable = (({ props }: IItemArgs) => {\n            // Disable the edit button if this card is already selected\n            return props.type === SelectionType.Group && state.selection.type === SelectionType.Group && state.selection.group === props.group;\n        }) as unknown as ItemHandler<boolean>;\n\n        const deleteClick = (({ props }: IItemArgs) => setDeleteSelection(props)) as unknown as ItemHandler;\n\n        const duplicateClick = (({ props }: IItemArgs) => {\n            if (props.type === SelectionType.Group) {\n                const id = state.addGroup(state.groups[props.group]);\n\n                state.select(id);\n            } else if (props.type === SelectionType.Card) {\n                const group = state.groups[props.group];\n                const id = group.addCard(group.rawCards[props.card]);\n\n                state.select(props.group, id);\n            }\n        }) as unknown as ItemHandler;\n\n        const upClick = (({ props }: IItemArgs) => {\n            if (props.type === SelectionType.Group) {\n                state.moveGroup(props.group, props.group - 1);\n                state.select(props.group - 1);\n            } else if (props.type === SelectionType.Card) {\n                state.groups[props.group].moveCard(props.card, props.card - 1);\n                state.select(props.group, props.card - 1);\n            }\n        }) as unknown as ItemHandler;\n\n        const downClick = (({ props }: IItemArgs) => {\n            if (props.type === SelectionType.Group) {\n                state.moveGroup(props.group, props.group + 1);\n                state.select(props.group + 1);\n            } else if (props.type === SelectionType.Card) {\n                state.groups[props.group].moveCard(props.card, props.card + 1);\n                state.select(props.group, props.card + 1);\n            }\n        }) as unknown as ItemHandler;\n\n        const upDisable = (({ props }: IItemArgs): boolean => {\n            if (props.type === SelectionType.Group) {\n                return props.group === 0;\n            } else if (props.type === SelectionType.Card) {\n                return props.card === 0;\n            } else {\n                return true;\n            }\n        }) as unknown as ItemHandler<boolean>;\n\n        const downDisable = (({ props }: IItemArgs): boolean => {\n            if (props.type === SelectionType.Group) {\n                return props.group === state.groups.length - 1;\n            } else if (props.type === SelectionType.Card) {\n                return props.card === state.groups[props.group].cards.length - 1;\n            } else {\n                return true;\n            }\n        }) as unknown as ItemHandler<boolean>;\n\n        return (\n            <>\n                <Menu id=\"none-contextmenu\">\n                    <Item onClick={addClick}>Add Group</Item>\n                    <Separator />\n                    <Item onClick={downloadClick}>Download All</Item>\n                    <Item disabled={true}>Render All</Item>\n                    <Item disabled={true}>Print All</Item>\n                </Menu>\n                <Menu id=\"group-contextmenu\">\n                    <Item onClick={editClick} disabled={editDisable}>Edit</Item>\n                    <Item onClick={addClick}>Add Card</Item>\n                    <Item onClick={duplicateClick}>Duplicate</Item>\n                    <Separator />\n                    <Item onClick={upClick} disabled={upDisable}>Move Up</Item>\n                    <Item onClick={downClick} disabled={downDisable}>Move Down</Item>\n                    <Separator />\n                    <Item onClick={downloadClick}>Download Group</Item>\n                    <Item disabled={true}>Render Group</Item>\n                    <Item disabled={true}>Print Group</Item>\n                    <Separator />\n                    <Item className=\"delete\" onClick={deleteClick}>Delete</Item>\n                </Menu>\n                <Menu id=\"card-contextmenu\">\n                    <Item onClick={duplicateClick}>Duplicate</Item>\n                    <Separator />\n                    <Item onClick={upClick} disabled={upDisable}>Move Up</Item>\n                    <Item onClick={downClick} disabled={downDisable}>Move Down</Item>\n                    <Separator />\n                    <Item onClick={downloadClick}>Download Card</Item>\n                    <Item disabled={true}>Render Card</Item>\n                    <Item disabled={true}>Print Card</Item>\n                    <Separator />\n                    <Item className=\"delete\" onClick={deleteClick}>Delete</Item>\n                </Menu>\n            </>\n        );\n    });\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { useObserver } from \"mobx-react-lite\";\nimport React, { useContext } from \"react\";\nimport ICard from \"../card/card\";\nimport { GlobalStateContext, SelectionType } from \"../state\";\nimport { BetterMenuProvider } from \"./ContextMenu\";\nimport { highlightMatches } from \"./Explorer\";\n\n/** The propt */\ninterface IProps {\n    /** The card id */\n    id: number;\n    /** The group id */\n    groupid: number;\n    /** The search term */\n    search: string;\n}\n\n/** Filter for cards */\nexport function cardFilter(filter: string) {\n    return (card: ICard) => (card.name !== undefined && card.name.toLowerCase().includes(filter.toLowerCase()));\n}\n\n/** A card component in the explortr */\nexport default function CardComponent({ groupid, id, search }: IProps) {\n    const state = useContext(GlobalStateContext);\n\n    const select = () => state.select(groupid, id);\n\n    return useObserver(() => {\n        const card = state.groups[groupid].cards[id];\n\n        // Hide the card if there is a search term AND\n        const hidden = search !== \"\" && (\n            // If the group is not selected AND\n            state.selection.type !== SelectionType.Card\n            || state.selection.card !== id\n            || state.selection.group !== groupid\n            // Or if it is a match\n        ) && cardFilter(search)(card);\n\n        return (\n            <BetterMenuProvider id=\"card-contextmenu\" selection={{ type: SelectionType.Card, card: id, group: groupid }}>\n                <div\n                    className={`card ${state.selection.type === SelectionType.Card && state.selection.card === id && state.selection.group === groupid ? \"selected\" : \"notselected\"}`}\n                    onClick={select}\n                    hidden={hidden}\n                >\n                    {/* Highlight any text in the card that matches the search query */}\n                    {highlightMatches(card.name, search)}\n                </div>\n            </BetterMenuProvider>\n        );\n    });\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { faCaretDown, faCaretRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Observer, useObserver } from \"mobx-react-lite\";\nimport React, { useContext, useState } from \"react\";\nimport { GlobalStateContext, SelectionType } from \"../state\";\nimport CardComponent, { cardFilter } from \"./CardComponent\";\nimport { BetterMenuProvider } from \"./ContextMenu\";\nimport { highlightMatches } from \"./Explorer\";\n\n/** The props */\ninterface IProps {\n    /** The card id */\n    id: number;\n    /** The search term */\n    search: string;\n}\n\n/** A component to show a card group in the side panel */\nexport default function CardGroupComponent({ id, search }: IProps) {\n    const [collapsed, setCollapsed] = useState(false);\n    const state = useContext(GlobalStateContext);\n\n    // Hide the group if there is a search term AND\n    const hidden = useObserver(() => search !== \"\" && (\n        // If there are no cards in the group that match the filter\n        state.groups[id].cards.filter(cardFilter(search)).length === 0\n        // AND the name of the group does not match\n        && !state.groups[id].name.toLowerCase().includes(search.toLowerCase())\n    ));\n\n    const toggleCollapse = () => setCollapsed(!collapsed);\n\n    return useObserver(() => (\n        <BetterMenuProvider id=\"group-contextmenu\" selection={{ type: SelectionType.Group, group: id }}>\n            <div\n                className={`group ${state.selection.type === SelectionType.Group && state.selection.group === id ? \"selected\" : \"notselected\"}`}\n                hidden={hidden}\n            >\n                <div className=\"title\" onClick={toggleCollapse}>\n                    <div className=\"caret\">\n                        <FontAwesomeIcon icon={collapsed ? faCaretRight : faCaretDown} />\n                    </div>\n                    <div className=\"name\">\n                        {/* Highlight any text in the name that matches the search query */}\n                        <Observer>{() => <>{highlightMatches(state.groups[id].name, search)}</>}</Observer>\n                    </div>\n                </div>\n                <div className=\"cards\" hidden={collapsed}>\n                    <Observer>{() => <>{state.groups[id].cards.map((_, j) => <CardComponent key={j} id={j} groupid={id} search={search} />)}</>}</Observer>\n                </div>\n            </div>\n        </BetterMenuProvider>\n    ));\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Observer } from \"mobx-react-lite\";\nimport React, { ChangeEvent, DragEvent, UIEvent, useContext, useState } from \"react\";\nimport { MenuItemEventHandler, TriggerEvent } from \"react-contexify/lib/types\";\nimport CardGroup from \"../card/cardGroup\";\nimport { GlobalStateContext, Selection, SelectionType } from \"../state\";\nimport { DownloadFile, load, textFileReaderAsync } from \"../util/file\";\nimport CardGroupComponent from \"./CardGroupComponent\";\nimport { BetterMenuProvider } from \"./ContextMenu\";\nimport \"./Explorer.scss\";\n\n/** Highlight the matches to the match string */\nexport function highlightMatches(text?: string, match?: string) {\n    // Only spend time spliting if there is a match to look for\n    if (match !== undefined && match !== \"\") {\n        // Split on higlight term and include term into parts, ignore case\n        return text !== undefined && text !== \"\" ?\n            text.split(new RegExp(`(${match.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\")})`, \"gi\"))\n                .map((part, i) => (\n                    // If the part is the same as the search term, give it the class highlight\n                    <span className={part.toLowerCase() === match.toLowerCase() ? \"highlight\" : \"\"} key={i}>\n                        {part}\n                    </span>\n                )) : undefined;\n    } else {\n        return text;\n    }\n}\n\n/** The args passed to a context menu item when it is clicked */\nexport interface IItemArgs {\n    /** The event that triggered the click */\n    event: TriggerEvent;\n    /** The props passed to the item */\n    props: Selection;\n}\n\n/** The handler type that react-contextify needs */\nexport type ItemHandler<T = void> = (info: MenuItemEventHandler) => T;\n\n/** The explorer view */\nexport default function Explorer() {\n    const [search, setSearch] = useState(\"\");\n    const [isDragOver, setDragOver] = useState(false);\n    const [isTop, setTop] = useState(true);\n    const state = useContext(GlobalStateContext);\n\n    /** Listen for scroll */\n    const onScroll = (event: UIEvent<HTMLDivElement>) => {\n        if (isTop !== (event.currentTarget.scrollTop === 0)) {\n            setTop(event.currentTarget.scrollTop === 0);\n        }\n    };\n\n    const onDragEnter = () => setDragOver(true);\n    const onDragExit = () => setDragOver(false);\n    const onDragOver = (event: DragEvent<HTMLDivElement>) => {\n        event.preventDefault();\n    };\n\n    const onDrop = async (event: DragEvent<HTMLDivElement>) => {\n        event.preventDefault();\n        event.persist();\n\n        setDragOver(false);\n\n        for (let i = 0; i < event.dataTransfer.items.length; i++) {\n            const file = event.dataTransfer.files[i];\n\n            if (file.type === \"application/json\" || file.name.endsWith(\".json\")) {\n                const contents = await textFileReaderAsync(file);\n\n                load(JSON.parse(contents) as DownloadFile, state);\n            } else {\n                console.error(`Format \"${file.type}\" unrecognised`);\n            }\n        }\n\n        event.dataTransfer.items.clear();\n    };\n\n    const clearSearch = () => setSearch(\"\");\n    const updateSearch = (e: ChangeEvent<HTMLInputElement>) => setSearch(e.target.value);\n\n    const addGroup = () => {\n        const idx = state.addGroup(new CardGroup(`New Group ${state.groups.length}`));\n        state.select(idx);\n    };\n\n    return (\n        <div className=\"explorer\">\n            {/* Search results */}\n            <BetterMenuProvider id=\"none-contextmenu\" selection={{ type: SelectionType.None }}>\n                <div className={`children ${isDragOver ? \"dragover\" : \"nodragover\"}`} onScroll={onScroll} onDrop={onDrop} onDragEnter={onDragEnter} onDragExit={onDragExit} onDragOver={onDragOver}>\n                    <Observer>{() => <>{state.groups.map((_, i) => <CardGroupComponent key={i} id={i} search={search} />)}</>}</Observer>\n                </div>\n            </BetterMenuProvider>\n\n            {/* Header */}\n            <div className={`head ${(isTop ? \"top\" : \"scrolled\")}`}>\n                <div className=\"search\">\n                    <input type=\"text\" onChange={updateSearch} className={search !== \"\" ? \"short\" : undefined} value={search} />\n                    <div className=\"x\" style={{ display: search !== \"\" ? undefined : \"none\" }} onClick={clearSearch}><FontAwesomeIcon icon={faTimes} /></div>\n                </div>\n                <div className=\"add\" onClick={addGroup}><FontAwesomeIcon icon={faPlus} /></div>\n            </div>\n        </div>\n    );\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { Observer } from \"mobx-react-lite\";\nimport React, { useContext } from \"react\";\nimport ReactModal from \"react-modal\";\nimport { GlobalStateContext, Selection, SelectionType } from \"../state\";\n\n/** The props for the delete modal */\ninterface IDeleteModalProps {\n    /** The selection to delete */\n    deleteSelection: Selection;\n    /** A way to change the selection */\n    setDeleteSelection(selection: Selection): void;\n}\n\n/** The styles for the modal */\nconst ModalStyles: {\n    /** The content props */\n    content: React.CSSProperties;\n    /** The overlay props */\n    overlay: React.CSSProperties;\n} = {\n    content: {\n        background: \"#1a1a1a\",\n        border: \"solid 1px #666666\",\n        color: \"#b8b8b8\",\n        height: \"150px\",\n        left: \"50%\",\n        maxHeight: \"calc(100% - 40px)\",\n        maxWidth: \"calc(100% - 40px)\",\n        minHeight: \"100px\",\n        minWidth: \"100px\",\n        position: \"absolute\",\n        top: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        width: \"500px\",\n    },\n    overlay: {\n        background: \"#000000AA\"\n    }\n};\n\n/** The delete confirmation modal */\nexport default function DeleteModal({ deleteSelection, setDeleteSelection }: IDeleteModalProps) {\n    const state = useContext(GlobalStateContext);\n\n    const deleteCard = () => {\n        if (deleteSelection.type === SelectionType.Group) {\n            state.select();\n            state.removeGroup(deleteSelection.group);\n        } else if (deleteSelection.type === SelectionType.Card) {\n            state.select(deleteSelection.group);\n            state.groups[deleteSelection.group].removeCard(deleteSelection.card);\n        } else {\n            console.warn(\"Attempted to delete card when no card selected for deletion\");\n        }\n\n        setDeleteSelection({ type: SelectionType.None });\n    };\n    const closeDeleteModal = () => setDeleteSelection({ type: SelectionType.None });\n\n    const confirmationMessage = () => {\n        if (deleteSelection.type === SelectionType.Group) {\n            const group = state.groups[deleteSelection.group];\n\n            return <span className=\"info\">Are you sure you want to delete the group <span className=\"name\">{group.name}</span> and all of its cards</span>;\n        } else if (deleteSelection.type === SelectionType.Card) {\n            const card = state.groups[deleteSelection.group].cards[deleteSelection.card];\n\n            return <span className=\"info\">Are you sure you want to delete the card <span className=\"name\">{card.name}</span></span>;\n        } else {\n            return <div className=\"error\">You have reached an invalid state, please press cancel</div>;\n        }\n    };\n\n    return (\n        <ReactModal isOpen={deleteSelection.type !== SelectionType.None} style={ModalStyles}>\n            <div className=\"modal\">\n                <div className=\"dialog\">\n                    <Observer>{confirmationMessage}</Observer>\n                    <div className=\"warn\">\n                        This action is <span className=\"irreversible\">irreversible</span>\n                    </div>\n                    <div className=\"buttons\">\n                        <button onClick={closeDeleteModal}>Cancel</button>\n                        <button className=\"delete\" onClick={deleteCard}>Delete</button>\n                    </div>\n                </div>\n            </div>\n        </ReactModal>\n    );\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { create } from \"mobx-persist\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport \"./App.scss\";\nimport { CardBack, CardFront } from \"./card/RenderedCard\";\nimport \"./ContextMenu.scss\";\nimport Editor from \"./editor/Editor\";\nimport { ExplorerContextMenus } from \"./explorer/ContextMenu\";\nimport Explorer from \"./explorer/Explorer\";\nimport DeleteModal from \"./explorer/Modal\";\nimport { GlobalStateContext, Selection, SelectionType } from \"./state\";\n\n/**\n * TODO:\n * - Better layout\n * - svg image\n * - Styled components?\n * - Printing (double sided)\n */\n\n// TODO: warn about unsaved before unload\n/** The main app component */\nexport default function App() {\n    const state = useContext(GlobalStateContext);\n\n    // MobX setup\n    useEffect(() => {\n        // Setup Mobx-Persist\n        const hydrate = create({\n            jsonify: true,\n            storage: localStorage\n        });\n\n        hydrate(\"state\", state);\n        // eslint-disable-next-line\n    }, []);\n\n    const [deleteSelection, setDeleteSelection] = useState<Selection>({ type: SelectionType.None });\n\n    return (\n        <div className=\"app\">\n            <div className=\"workspace\">\n                <Explorer />\n                <ExplorerContextMenus setDeleteSelection={setDeleteSelection} />\n                <DeleteModal setDeleteSelection={setDeleteSelection} deleteSelection={deleteSelection} />\n            </div>\n            <div className=\"settings\">\n                <Editor />\n            </div>\n            <div className=\"renders\">\n                {/* Create the svg with react, not the extra lib */}\n                <CardFront />\n                <CardBack />\n            </div>\n        </div>\n    );\n}\n","// tslint:disable\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    ) !== null\n);\n\nexport default function register() {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.toString()\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                        \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\n                    );\n                });\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker !== null) {\n                    installingWorker.onstatechange = () => {\n                        if (installingWorker.state === \"installed\") {\n                            if (navigator.serviceWorker.controller !== null) {\n                                // At this point, the old content will have been purged and\n                                // the fresh content will have been added to the cache.\n                                // It's the perfect time to display a 'New content is\n                                // available; please refresh.' message in your web app.\n                                console.log(\"New content is available; please refresh.\");\n                            } else {\n                                // At this point, everything has been precached.\n                                // It's the perfect time to display a\n                                // 'Content is cached for offline use.' message.\n                                console.log(\"Content is cached for offline use.\");\n                            }\n                        }\n                    };\n                }\n            };\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get(\"content-type\")!.indexOf(\"javascript\") === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister()\n                    .then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\n// ts-unused-exports:disable-next-line\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\n// tslint:disable-next-line: no-import-side-effect\nimport \"mobx-react-lite/batchingForReactDom\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ReactModal from \"react-modal\";\nimport App from \"./App\";\nimport \"./index.scss\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactModal.setAppElement(\"#root\");\n\nReactDOM.render(\n    <App />,\n    document.getElementById(\"root\") as HTMLElement\n);\nregisterServiceWorker();\n\ndocument.oncontextmenu = (e) => {\n    e.preventDefault();\n};"],"sourceRoot":""}