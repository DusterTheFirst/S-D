{"version":3,"sources":["state.ts","card/cardGroup.ts","styles/app.ts","util/file.ts","util/image.ts","styles/renderedCard.ts","util/string.ts","card/rendered/useEmbeddedFont.ts","card/rendered/CardBack.tsx","util/wordWrap.ts","card/rendered/CardFront.tsx","card/rendered/cardOrdering.ts","card/rendered/RenderedCards.tsx","styles/editor/index.ts","editor/AutoResizeTextArea.tsx","styles/editor/group.ts","editor/GroupSettings.tsx","editor/CardSettings.tsx","editor/Editor.tsx","styles/contextMenu.ts","explorer/ContextMenu.tsx","styles/modal.ts","explorer/DeleteModal.tsx","styles/explorer/index.ts","styles/explorer/cardGroup.ts","styles/explorer/card.ts","explorer/CardComponent.tsx","explorer/CardGroupComponent.tsx","explorer/Explorer.tsx","util/useIsTop.ts","registerServiceWorker.ts","RenderingModal.tsx","styles/global.ts","UpdateModal.tsx","App.tsx","index.tsx"],"names":["SelectionType","CardGroup","persist","name","defaults","cards","this","_cards","card","length","push","oldpos","newpos","splice","i","key","value","Object","entries","filter","undefined","reduce","pre","k","v","map","data","observable","action","GlobalState","group","_selection","type","None","Group","Card","selection","_groups","x","GlobalStateContext","createContext","AppContainer","styled","div","CardContainer","textFileReaderAsync","file","a","Promise","resolve","reject","reader","FileReader","readAsText","onload","_","result","toString","Error","onerror","dataFileReaderAsync","readAsDataURL","downloadSelection","filename","saveAs","Blob","JSON","stringify","loadSelection","state","addGroup","fromData","id","select","groups","addCard","alert","createImageAsync","src","image","Image","canvasToBlobAsync","canvas","toBlob","RenderedCard","svg","attrs","fontFamily","height","version","viewBox","width","xmlns","CardText","text","props","fontSize","textAnchor","ExpandedText","bulletLists","replace","hashCode","s","hash","charCodeAt","useEmbeddedFont","useState","fonts","setFonts","useEffect","all","fetch","then","blob","catch","e","console","error","ModestoRegular","ModestoExpd","CardBackDyn","useContext","IsRenderingContext","isRendering","rendered","BackRenderedCallbackContext","useLayoutEffect","current","useObserver","useMemo","color","fill","y","rx","ry","stroke","strokeWidth","points","fontWeight","level","href","CardImagePreloader","preloadedImages","Map","g","c","has","set","Array","from","values","CardBack","forwardRef","ref","wordWrapSVG","outputElement","split","initialOffset","words","elems","tspanElement","document","createElementNS","textNode","createTextNode","setAttribute","baseVal","valueAsString","attributes","getNamedItem","appendChild","some","textContent","parseFloat","firstChild","len","getComputedTextLength","slice","wordWrapOneLineSVG","b","CardFront","FrontRenderedCallbackContext","physComponentsRef","useRef","physComponentsBackgroundRef","descriptionRef","extDescriptionRef","extDescriptionTitleRef","currHeight","physComp","physCompBkg","desc","extDesc","extDescTitle","physicalComponents","removeAttribute","description","extDescription","innerHTML","durationConc","duration","toLowerCase","match","durationCap","charAt","toUpperCase","cardlevel","parseInt","cardType","isNaN","j","ordinalSuffixOf","x1","y1","x2","y2","castingTime","range","components","display","dominantBaseline","letterSpacing","clazz","doubleSideOrdering","front","back","cardY","Math","floor","cardX","absolutePosition","CARD_TILE_WIDTH","pageBreak","CARD_TILE_HEIGHT","done","fronts","backs","foldableOrdering","PRINT_CARD_HEIGHT","RenderedCards","frontRef","backRef","frontRenderedCallback","backRenderedCallback","setIsRendering","expd","regular","pdfMake","vfs","substring","lastIndexOf","normal","bold","selectAsync","useCallback","args","race","setTimeout","getCurrentSelectedSVGs","ReferenceError","outerHTML","renderCurrentSelection","zip","JSZip","createElement","context","getContext","svgFront","svgBack","encodeURIComponent","imageFront","imageBack","drawImage","RASTER_WIDTH","RASTER_HEIGHT","remove","print","ordering","preselect","svgs","csvgs","createPdf","content","pageMargins","pageSize","setSelection","useImperativeHandle","printDoubleSided","printFoldable","render","folder","generateAsync","groupFolder","Provider","EditorContainer","EditorValues","EditorEmpty","EditorCenter","EditorTitle","EditorLabel","label","hidden","EditorInput","input","EditorTextArea","textarea","EditorImage","img","AutoResizeTextArea","memo","resize","style","scrollHeight","window","addEventListener","removeEventListener","onKeyUp","GroupSettingsContainer","GroupSettings","onChange","event","editName","currentTarget","CardSettings","imageRef","cardSettings","rawCards","placeholders","cardValueUpdater","editCard","editDefaults","clear","param","fileInput","files","placeholder","min","max","onClick","disabled","alt","accept","Editor","ContextMenuStyles","createGlobalStyle","DangerItem","Item","BetterMenuProvider","children","onContextMenu","preventDefault","stopPropagation","contextMenu","hideAll","show","ExplorerContextMenus","setDeleteSelection","renderedCards","RenderedCardsContext","downloadClick","toJS","groupsData","addClick","deleteClick","duplicateClick","upClick","moveGroup","moveCard","downClick","upDisable","downDisable","renderClick","printDoubleSidedClick","printFoldableClick","ModalStyles","background","border","left","maxHeight","maxWidth","minHeight","minWidth","position","top","transform","overlay","ModalContainer","ModalDialog","ModalEmph","span","ModalDesc","ModalDangerEmph","ModalButtons","ModalButton","button","ModalDangerButton","ModalSuggestedButton","DeleteModal","deleteSelection","confirmationMessage","isOpen","removeGroup","removeCard","warn","ExplorerContainer","ExplorerHeader","isTop","ExplorerSearch","ExporerSearchInput","short","ExplorerSearchX","ExplorerAddButton","ExplorerGroups","dragOver","ExplorerHighlight","CardGroupTitle","selected","CardGroupCaret","CardGroupName","CardTitle","cardFilter","includes","CardComponent","groupid","search","highlightMatches","CardGroupComponent","collapsed","setCollapsed","toggleCollapse","icon","faCaretRight","faCaretDown","RegExp","part","Explorer","setSearch","isDragOver","setDragOver","setTop","scrollTop","useIsTop","onScroll","onDrop","dataTransfer","items","endsWith","contents","parse","onDragEnter","onDragExit","onDragOver","target","faTimes","idx","faPlus","isLocalhost","Boolean","location","hostname","register","setUpdateAvaliable","navigator","URL","process","origin","swUrl","response","status","headers","get","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","RenderingModal","GlobalStyles","UpdateModal","doUpdate","callDoUpdate","update","App","cardsRef","updateAvaliable","create","jsonify","storage","localStorage","hydrate","oncontextmenu","ReactModal","setAppElement","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.16b820e8.chunk.js","sourcesContent":["/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { action, observable } from \"mobx\";\nimport { persist } from \"mobx-persist\";\nimport { createContext } from \"react\";\nimport CardGroup, { ICardGroupData } from \"./card/cardGroup\";\n\n/** The tag for the selection enum */\nexport enum SelectionType {\n    None = \"none\",\n    Group = \"group\",\n    Card = \"card\",\n}\n\n/** The user's selection */\nexport type Selection = {\n    /** The type of selection */\n    type: SelectionType.None;\n} | {\n    /** The type of selection */\n    type: SelectionType.Group;\n    /** The current selected group */\n    group: number;\n} | {\n    /** The type of selection */\n    type: SelectionType.Card;\n    /** The current selected group */\n    group: number;\n    /** The current selected card */\n    card: number;\n};\n\n/** The global state of the application */\nexport class GlobalState {\n    /** The current selection */\n    @observable @persist(\"object\")\n    private _selection: Selection = { type: SelectionType.None };\n    /** The groups of cards */\n    @observable @persist(\"list\", CardGroup)\n    private readonly _groups: CardGroup[] = [];\n\n    /** The current selection */\n    public get selection(): Selection {\n        return this._selection;\n    }\n\n    /** Select a group and or a card */\n    @action\n    public select(group?: number, card?: number) {\n        if (group === undefined) {\n            this._selection = { type: SelectionType.None };\n        } else if (card === undefined) {\n            this._selection = {\n                group,\n                type: SelectionType.Group\n            };\n        } else {\n            this._selection = {\n                card,\n                group,\n                type: SelectionType.Card\n            };\n        }\n    }\n\n    /** A way to set the selection directly */\n    @action\n    public setSelection(selection: Selection) {\n        this._selection = selection;\n    }\n\n    /** Add a group */\n    @action\n    public addGroup(group: CardGroup) {\n        return this._groups.push(group) - 1;\n    }\n\n    /** Remove a group */\n    @action\n    public removeGroup(group: number) {\n        return this._groups.splice(group, 1)[0];\n    }\n\n    /** Get a group */\n    public get groups() {\n        return this._groups;\n    }\n\n    /** Get a group */\n    public get groupsData(): ICardGroupData[] {\n        return this._groups.map(x => x.data);\n    }\n\n    /** Move a group */\n    @action\n    public moveGroup(oldpos: number, newpos: number) {\n        const [group] = this._groups.splice(oldpos, 1);\n        this._groups.splice(newpos, 0, group);\n    }\n}\n\n/** The global state context */\nexport const GlobalStateContext = createContext(new GlobalState());","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { action, observable } from \"mobx\";\nimport { persist } from \"mobx-persist\";\nimport ICard from \"./card\";\n\n/** The persistant data of a card group */\nexport interface ICardGroupData {\n    /** The name of the group */\n    readonly name: string;\n    /** The defaults for the cards */\n    readonly defaults: Partial<ICard>;\n    /** The child cards of the group */\n    readonly cards: ICard[];\n}\n\n/** The defaults that can be from a card group */\ntype ICardGroupDefaults = Omit<ICard, \"name\">;\n\n/** A group of cards */\nexport default class CardGroup {\n    /** The name of the group */\n    @observable @persist\n    public name: string;\n    /** The defaults for the cards */\n    @observable @persist(\"object\")\n    public defaults: ICardGroupDefaults;\n    /** The child cards of the group */\n    @observable @persist(\"list\")\n    private readonly _cards: ICard[];\n\n    constructor(name = \"\", defaults: ICardGroupDefaults = {}, cards: ICard[] = []) {\n        this.name = name;\n        this._cards = cards;\n        this.defaults = defaults;\n    }\n\n    /** Create a card group from a data object */\n    public static fromData(data: ICardGroupData) {\n        return new CardGroup(data.name, data.defaults, data.cards);\n    }\n\n    /** Method to get the jsonifyable data for the group */\n    public get data(): ICardGroupData {\n        return {\n            cards: this._cards,\n            defaults: this.defaults,\n            name: this.name\n        };\n    }\n\n    /** Add a card to the group */\n    @action\n    public addCard(card: ICard = { name: `New Card ${this._cards.length}` }) {\n        return this._cards.push(card) - 1;\n    }\n\n    /** Move a cards position */\n    @action\n    public moveCard(oldpos: number, newpos: number): this {\n        const [card] = this._cards.splice(oldpos, 1);\n        this._cards.splice(newpos, 0, card);\n\n        return this;\n    }\n\n    /** Get the cards stored in the group */\n    public get cards(): ICard[] {\n        return this._cards.map(card => ({ ...this.defaults, ...card }));\n    }\n\n    /** Get the cards stored in the group without their defaults applied */\n    public get rawCards(): ICard[] {\n        return this._cards;\n    }\n\n    /** Remove a card from the group */\n    @action\n    public removeCard(i: number): ICard {\n        return this._cards.splice(i, 1)[0];\n    }\n\n    /** Change the value of a card in the group */\n    @action\n    public editCard<K extends keyof ICard>(card: number, key: K, value: ICard[K]) {\n        this._cards[card] = Object.entries({ ...this._cards[card], [key]: value })\n            // Remove undefined props\n            .filter(([, v]) => v !== undefined)\n            .reduce<ICard>((pre, [k, v]) => ({ ...pre, [k]: v }), {} as unknown as ICard);\n    }\n\n    /** Change the value of the groups defaults */\n    @action\n    public editDefaults<K extends keyof ICard>(key: K, value: ICard[K]) {\n        this.defaults = Object.entries({ ...this.defaults, [key]: value })\n            // Remove undefined props\n            .filter(([, v]) => v !== undefined)\n            .reduce<Partial<ICard>>((pre, [k, v]) => ({ ...pre, [k]: v }), {});\n    }\n\n    /** Change the value of the groups defaults */\n    @action\n    public editName(name: string) {\n        this.name = name;\n    }\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport styled from \"styled-components\";\n\n/** The main app container */\nexport const AppContainer = styled.div`\n    position: absolute;\n\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n\n    display: grid;\n    grid-template-columns: 250px auto 300px;\n    grid-template-rows: 100%;\n    grid-column-gap: 3px;\n\n    min-width: 800px;\n    height: 100%;\n    width: 100%;\n\n    background: #202020;\n`;\n\n/** The container for the rendered card views */\nexport const CardContainer = styled.div`\n    grid-column: 3;\n\n    overflow-y: auto;\n    overflow-x: hidden;\n    scrollbar-width: none;\n`;","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { saveAs } from \"file-saver\";\nimport ICard from \"../card/card\";\nimport CardGroup, { ICardGroupData } from \"../card/cardGroup\";\nimport { GlobalState, SelectionType } from \"../state\";\n\n/** Helper to create a file reader that is async and reads text */\nexport async function textFileReaderAsync(file: Blob) {\n    return new Promise<string>((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsText(file);\n        reader.onload = (_) => {\n            if (reader.result !== null) {\n                resolve(reader.result.toString());\n            } else {\n                reject(new Error(\"No result\"));\n            }\n        };\n        reader.onerror = reject;\n    });\n}\n\n/** Helper that can create a file reaer that is async and reads data */\nexport async function dataFileReaderAsync(file: Blob) {\n    return new Promise<string>((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = (_) => {\n            if (reader.result !== null) {\n                resolve(reader.result.toString());\n            } else {\n                reject(new Error(\"No result\"));\n            }\n        };\n        reader.onerror = reject;\n    });\n}\n\n/** The structure for a downloaded file */\nexport type DownloadSelection = {\n    /** The type of selection */\n    type: SelectionType.None;\n    /** All groups */\n    data: ICardGroupData[];\n} | {\n    /** The type of selection */\n    type: SelectionType.Group;\n    /** The group */\n    data: ICardGroupData;\n} | {\n    /** The type of selection */\n    type: SelectionType.Card;\n    /** The card */\n    data: ICard;\n};\n\n/** Helper to download a file */\nexport function downloadSelection(file: DownloadSelection, filename: string) {\n    saveAs(new Blob([JSON.stringify(file)], { type: \"application/json\" }), filename);\n}\n\n/** Helper to laod a file */\nexport function loadSelection(file: DownloadSelection, state: GlobalState) {\n    if (file.type === SelectionType.None) {\n        for (const group of file.data) {\n            state.addGroup(CardGroup.fromData(group));\n        }\n    } else if (file.type === SelectionType.Group) {\n        const id = state.addGroup(CardGroup.fromData(file.data));\n        state.select(id);\n    } else {\n        if (state.selection.type === SelectionType.Card || state.selection.type === SelectionType.Group) {\n            const id = state.groups[state.selection.group].addCard(file.data);\n            state.select(state.selection.group, id);\n        } else {\n            alert(\"Attempted to add a card when no group is selected\");\n        }\n    }\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\n/** Helper to create and load an image async */\nexport async function createImageAsync(src: string): Promise<HTMLImageElement> {\n    return new Promise((resolve, reject) => {\n        const image = new Image();\n        image.src = src;\n        image.onload = () => resolve(image);\n        image.onerror = reject;\n    });\n}\n\n/** Helper to async create blob from canvas */\nexport async function canvasToBlobAsync(canvas: HTMLCanvasElement): Promise<Blob> {\n    return new Promise((resolve, reject) => {\n        canvas.toBlob((v) => v === null ? reject() : resolve(v), \"image/png\");\n    });\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport styled from \"styled-components\";\n\n/** The view container for the rendered card svg */\nexport const RenderedCard = styled.svg.attrs({\n    fontFamily: \"Modesto-Regular\",\n    height: 700,\n    version: \"1.1\",\n    viewBox: \"0 0 50 70\",\n    width: 500,\n    xmlns: \"http://www.w3.org/2000/svg\",\n})`\n    width: 300px;\n    height: calc(300px * 7/5);\n\n    user-select: none;\n`;\n\n/** Text for use on a card */\nexport const CardText = styled.text.attrs(props => ({\n    fontSize: props.fontSize ?? 2,\n    textAnchor: props.textAnchor ?? \"middle\"\n}))``;\n\n/** Text with the expanded font */\nexport const ExpandedText = styled(CardText).attrs({\n    fontFamily: \"Modesto-Expd\"\n})``;","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\n/** Add a suffix to a number */\nexport function ordinalSuffixOf(i: number) {\n    const j = i % 10;\n    const k = i % 100;\n    if (j === 1 && k !== 11) {\n        return `${i}st`;\n    }\n    if (j === 2 && k !== 12) {\n        return `${i}nd`;\n    }\n    if (j === 3 && k !== 13) {\n        return `${i}rd`;\n    } else {\n        return `${i}th`;\n    }\n}\n\n/** Replace `- ` and `* ` with a bullet */\nexport function bulletLists(text: string): string {\n    return text.replace(/^(\\*|-)(?= )/img, \"\\u2022\");\n}\n\n/** Hash a string */\nexport function hashCode(s: string) {\n    let hash = 0;\n    let chr;\n    for (let i = 0; i < s.length; i++) {\n        chr = s.charCodeAt(i);\n        hash = ((hash << 5) - hash) + chr; // tslint:disable-line no-bitwise\n        hash |= 0; // tslint:disable-line no-bitwise // Convert to 32bit integer\n    }\n\n    return hash;\n}\n","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { useEffect, useState } from \"react\";\nimport { dataFileReaderAsync } from \"../../util/file\";\n\n/** Style section for the svgs */\nexport default function useEmbeddedFont() {\n    const [fonts, setFonts] = useState<[string, string]>();\n\n    useEffect(() => {\n        Promise.all([\n            fetch(\"/fonts/Modesto-Expd.woff2\")\n                .then(x => x.blob())\n                .then(dataFileReaderAsync),\n            fetch(\"/fonts/Modesto-Regular.woff2\")\n                .then(x => x.blob())\n                .then(dataFileReaderAsync)\n        ]).then(setFonts)\n            .catch(e => console.error(e));\n    }, []);\n\n    if (fonts === undefined) {\n        return null;\n    }\n\n    const [ModestoRegular, ModestoExpd] = fonts;\n\n    return `\n        @font-face {\n            font-family: \"Modesto-Expd\";\n            src: url(\"${ModestoRegular}\");\n        }\n\n        @font-face {\n            font-family: \"Modesto-Regular\";\n            src: url(\"${ModestoExpd}\");\n        }\n    `;\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { useObserver } from \"mobx-react-lite\";\nimport React, { forwardRef, useContext, useLayoutEffect, useMemo } from \"react\";\nimport { IsRenderingContext } from \"../../App\";\nimport { GlobalStateContext, SelectionType } from \"../../state\";\nimport { RenderedCard } from \"../../styles/renderedCard\";\nimport { hashCode } from \"../../util/string\";\nimport { BackRenderedCallbackContext } from \"./RenderedCards\";\nimport useEmbeddedFont from \"./useEmbeddedFont\";\n\n/** The more dynamic part of the card back */\nfunction CardBackDyn() {\n    const state = useContext(GlobalStateContext);\n    const [isRendering] = useContext(IsRenderingContext);\n\n    const rendered = useContext(BackRenderedCallbackContext);\n\n    useLayoutEffect(rendered.current);\n\n    const card = useObserver(() =>\n        state.selection.type === SelectionType.Card\n            ? state.groups[state.selection.group].cards[state.selection.card]\n            : state.selection.type === SelectionType.Group\n                ? state.groups[state.selection.group].defaults\n                : { name: \"No Selection\" }\n    );\n    const hash = useMemo(() => hashCode(card.image ?? \"\"), [card.image]);\n\n    return useObserver(() => {\n        const color = card.color ?? \"#000000\";\n\n        return (\n            <>\n                {/* Frame */}\n                <rect width=\"50\" height=\"70\" fill={color} />\n\n                {/* Background */}\n                <rect width=\"46\" height=\"66\" x=\"2\" y=\"2\" rx=\"2\" ry=\"2\" fill=\"white\" />\n\n                {/* Rounded line */}\n                <rect width=\"40\" height=\"60\" x=\"5\" y=\"5\" rx=\"2\" ry=\"2\" stroke={color} strokeWidth=\"0.5\" fill=\"transparent\" />\n\n                {/* Rhombus */}\n                <polyline points=\"5.25,35 25,5.25 45,34.75 25,64.75 5.25,35\" fill=\"transparent\" stroke={color} strokeWidth=\".5\" />\n\n                {/* Card level top right */}\n                <text fontSize=\"10\" fontWeight=\"bold\" fill={color} x=\"38\" y=\"15\" textAnchor=\"middle\">{card.level}</text>\n                {/* Card level bottom left */}\n                <text fontSize=\"10\" fontWeight=\"bold\" fill={color} x=\"12\" y=\"62\" textAnchor=\"middle\">{card.level}</text>\n\n                {/* Card image */}\n                {isRendering ? <image href={card.image} width=\"25\" height=\"25\" x=\"12.5\" y=\"22.5\" /> : <use href={`#${hash}`} />}\n            </>\n        );\n    });\n}\n\n/** A component that contains hidden images to preload them into memory */\nfunction CardImagePreloader() {\n    const state = useContext(GlobalStateContext);\n\n    return useObserver(() => {\n        const preloadedImages = new Map<number, JSX.Element>();\n\n        for (const g of state.groups) {\n            for (const c of g.cards) {\n                if (c.image !== undefined) {\n                    const hash = hashCode(c.image);\n                    if (!preloadedImages.has(hash)) {\n                        preloadedImages.set(hash, <image key={hash} id={hash.toString()} href={c.image} width=\"25\" height=\"25\" x=\"12.5\" y=\"22.5\" />);\n                    }\n                }\n            }\n        }\n\n        return <>{Array.from(preloadedImages.values())}</>;\n    });\n}\n\n/** The back face of the card */\nconst CardBack = forwardRef<SVGSVGElement>((_, ref) => {\n    const [isRendering] = useContext(IsRenderingContext);\n\n    const fonts = useEmbeddedFont();\n\n    return (\n        <RenderedCard ref={ref}>\n            <defs>\n                {isRendering ? null : <CardImagePreloader />}\n                <style>{fonts}</style>\n            </defs>\n\n            <CardBackDyn />\n        </RenderedCard>\n    );\n});\n\nexport default CardBack;","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\n/** Helper function to achieve word wrapping */\nexport function wordWrapSVG(text: string, width: number, outputElement: SVGTextElement) {\n    return text.replace(\"\\r\", \"\").split(\"\\n\").map((x, i) => wordWrapOneLineSVG(x, width, outputElement, i !== 0)).reduce((a, b) => a + b);\n}\n\n/** Helper Function to wrap one continous line of text in an svg */\nfunction wordWrapOneLineSVG(text: string, width: number, outputElement: SVGTextElement, initialOffset = false) {\n    const words = text.split(\" \");\n    let elems = 0;\n\n    let tspanElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"tspan\");   // Create first tspan element\n    let textNode = document.createTextNode(words[0]);           // Create text in tspan element\n\n    if (initialOffset) {\n        tspanElement.setAttribute(\"x\", outputElement.x.baseVal[0].valueAsString);\n        tspanElement.setAttribute(\"dy\", outputElement.attributes.getNamedItem(\"font-size\")?.value ?? \"\");\n\n        elems++;\n    }\n\n    tspanElement.appendChild(textNode);                     // Add tspan element to DOM\n    outputElement.appendChild(tspanElement);                        // Add text to tspan element\n\n    if (!words.some(x => x.length > 0)) {\n        tspanElement.textContent = \"\\x20\";\n\n        return parseFloat(outputElement.attributes.getNamedItem(\"font-size\")?.value ?? \"0\");\n    }\n\n    for (let i = 1; i < words.length; i++) {\n        if (tspanElement.firstChild === null || tspanElement.firstChild.textContent === null) {\n            console.error(\"TSPAN element has no first child\", tspanElement);\n\n            return elems * parseFloat(outputElement.attributes.getNamedItem(\"font-size\")?.value ?? \"0\");\n        }\n\n        const len = tspanElement.firstChild?.textContent?.length;             // Find number of letters in string\n        tspanElement.firstChild.textContent += ` ${words[i]}`;            // Add next word\n\n        if (tspanElement.getComputedTextLength() > width) {\n            tspanElement.firstChild.textContent = tspanElement.firstChild.textContent.slice(0, len);    // Remove added word\n\n            tspanElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"tspan\");       // Create new tspan element\n            tspanElement.setAttribute(\"x\", outputElement.x.baseVal[0].valueAsString);\n            tspanElement.setAttribute(\"dy\", outputElement.attributes.getNamedItem(\"font-size\")?.value ?? \"\");\n            textNode = document.createTextNode(words[i]);\n\n            tspanElement.appendChild(textNode);\n            outputElement.appendChild(tspanElement);\n\n            elems++;\n        }\n    }\n\n    return elems * parseFloat(outputElement.attributes.getNamedItem(\"font-size\")?.value ?? \"0\");\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { useObserver } from \"mobx-react-lite\";\nimport React, { forwardRef, useContext, useEffect, useRef } from \"react\";\nimport { GlobalStateContext, SelectionType } from \"../../state\";\nimport { CardText, ExpandedText, RenderedCard } from \"../../styles/renderedCard\";\nimport { bulletLists, ordinalSuffixOf } from \"../../util/string\";\nimport { wordWrapSVG } from \"../../util/wordWrap\";\nimport { FrontRenderedCallbackContext } from \"./RenderedCards\";\nimport useEmbeddedFont from \"./useEmbeddedFont\";\n\n/** The front face of the card */\nconst CardFront = forwardRef<SVGSVGElement>((_, ref) => {\n    const state = useContext(GlobalStateContext);\n\n    const rendered = useContext(FrontRenderedCallbackContext);\n\n    // Refs to wrappable words\n    const physComponentsRef = useRef<SVGTextElement>(null);\n    const physComponentsBackgroundRef = useRef<SVGRectElement>(null);\n    const descriptionRef = useRef<SVGTextElement>(null);\n    const extDescriptionRef = useRef<SVGTextElement>(null);\n    const extDescriptionTitleRef = useRef<SVGGElement>(null);\n\n    // Card selection\n    const card = useObserver(() =>\n        state.selection.type === SelectionType.Card\n            ? state.groups[state.selection.group].cards[state.selection.card]\n            : state.selection.type === SelectionType.Group\n                ? { name: state.groups[state.selection.group].name, ...state.groups[state.selection.group].defaults }\n                : { name: \"No Selection\" }\n    );\n\n    const fonts = useEmbeddedFont();\n\n    // Apply word wrapping to text\n    useEffect(() => {\n        if (fonts === null) {\n            return undefined;\n        }\n        // Collecctive hight of blocks\n        let currHeight = 0;\n\n        // Aliases for refs\n        const physComp = physComponentsRef.current;\n        const physCompBkg = physComponentsBackgroundRef.current;\n        const desc = descriptionRef.current;\n        const extDesc = extDescriptionRef.current;\n        const extDescTitle = extDescriptionTitleRef.current;\n\n        if (physCompBkg !== null) {\n            if (card.physicalComponents !== undefined && physComp !== null) {\n                const height = wordWrapSVG(bulletLists(card.physicalComponents), 44, physComp);\n\n                physCompBkg.setAttribute(\"height\", (height + 4).toString());\n                physCompBkg.removeAttribute(\"display\");\n\n                currHeight += height + 3.5;\n            } else {\n                physCompBkg.setAttribute(\"display\", \"none\");\n            }\n        }\n\n        if (card.description !== undefined && desc !== null) {\n            desc.setAttribute(\"dy\", currHeight.toString());\n            const height = wordWrapSVG(bulletLists(card.description), 44, desc);\n\n            currHeight += height;\n        }\n\n        if (extDescTitle !== null) {\n            if (card.extDescription !== undefined && extDesc !== null) {\n                const height = wordWrapSVG(bulletLists(card.extDescription), 44, extDesc);\n                extDesc.setAttribute(\"y\", (65 - height).toString());\n                extDescTitle.setAttribute(\"transform\", `translate(0, ${(62 - height)})`);\n                extDescTitle.removeAttribute(\"display\");\n            } else {\n                extDescTitle.setAttribute(\"display\", \"none\");\n            }\n        }\n\n        rendered.current();\n\n        return () => {\n            if (physComp !== null) {\n                physComp.innerHTML = \"\";\n            }\n            if (desc !== null) {\n                desc.innerHTML = \"\";\n            }\n            if (extDesc !== null) {\n                extDesc.innerHTML = \"\";\n            }\n        };\n    }, [\n        card,\n        rendered,\n        descriptionRef,\n        extDescriptionRef,\n        extDescriptionTitleRef,\n        physComponentsBackgroundRef,\n        physComponentsRef,\n        fonts\n    ]);\n\n    return useObserver(() => {\n        const durationConc = card.duration !== undefined && card.duration.toLowerCase().match(/^concentration(,)? /) !== null;\n        const duration = durationConc ? card.duration?.replace(/^concentration(,)? /i, \"\") : card.duration;\n        const durationCap = `${duration?.charAt(0).toUpperCase() ?? \"\"}${duration?.slice(1) ?? \"\"}`;\n\n        const cardlevel = parseInt(card.level !== undefined ? card.level : \"0\", 10);\n        const cardType = !isNaN(cardlevel) ? cardlevel === 0 ? `${card.type} cantrip` : `${ordinalSuffixOf(cardlevel)} level ${card.type}` : undefined;\n\n        const color = card.color ?? \"#000000\";\n\n        return (\n            <RenderedCard ref={ref}>\n                <defs>\n                    <style>{fonts}</style>\n                </defs>\n                {/* Frame */}\n                <rect width=\"50\" height=\"70\" fill={color} />\n                {/* Background */}\n                <rect width=\"46\" height=\"64\" x=\"2\" y=\"2\" rx=\"2\" ry=\"2\" fill=\"white\" />\n\n                {/* Sections */}\n                <line x1=\"0\" y1=\"9\" x2=\"50\" y2=\"9\" stroke={color} strokeWidth=\".3\" />\n                <line x1=\"0\" y1=\"16\" x2=\"50\" y2=\"16\" stroke={color} strokeWidth=\".3\" />\n                <line x1=\"0\" y1=\"23\" x2=\"50\" y2=\"23\" stroke={color} strokeWidth=\".3\" />\n                <line x1=\"25\" y1=\"9\" x2=\"25\" y2=\"23\" stroke={color} strokeWidth=\".3\" />\n\n                {/* Title */}\n                <ExpandedText fontSize=\"4\" x=\"25\" y=\"6.75\">{card.name}</ExpandedText>\n\n                {/* Casting Time */}\n                <ExpandedText fill={color} x=\"13.5\" y=\"12\">CASTING TIME</ExpandedText>\n                <CardText x=\"13.5\" y=\"14.6\">{card.castingTime}</CardText>\n\n                {/* Range */}\n                <ExpandedText fill={color} x=\"36.5\" y=\"12\">RANGE</ExpandedText>\n                <CardText x=\"36.5\" y=\"14.6\" >{card.range}</CardText>\n\n                {/* Components */}\n                <ExpandedText fill={color} x=\"13.5\" y=\"19\" >COMPONENTS</ExpandedText>\n                <CardText x=\"13.5\" y=\"21.6\">{card.components}</CardText>\n\n                {/* Duration */}\n                <ExpandedText fill={color} x=\"36.5\" y=\"19\" >DURATION</ExpandedText>\n                <CardText x=\"36.5\" y=\"21.6\" >{durationCap}</CardText>\n                {/* Duration Concentration */}\n                <g display={durationConc ? undefined : \"none\"}>\n                    <polygon points=\"45.5,17 43.5,19.5 45.5,22 47.5,19.5 45.5,17\" fill={color} />\n                    <ExpandedText x=\"45.5\" y=\"19.5\" dominantBaseline=\"middle\" fill=\"#ffffff\">C</ExpandedText>\n                </g>\n\n                {/* Physical Components */}\n                <rect width=\"50\" height=\"3.5\" y=\"23\" fill={color} ref={physComponentsBackgroundRef} />\n                <CardText x=\"3\" y=\"25.6\" ref={physComponentsRef} fill=\"#ffffff\" textAnchor=\"right\" />\n                {/* Description */}\n                <CardText x=\"3\" y=\"25.5\" ref={descriptionRef} textAnchor=\"right\" />\n                {/* Extended Description */}\n                <g ref={extDescriptionTitleRef}>\n                    <rect width=\"50\" height=\"3.5\" y=\"-3\" fill={color} />\n                    <CardText fontWeight=\"bold\" letterSpacing=\".1\" y=\"-.4\" x=\"25\" fill=\"#ffffff\">At Higher Levels</CardText>\n                </g>\n                <CardText x=\"3\" ref={extDescriptionRef} textAnchor=\"right\" />\n\n                {/* Card class */}\n                <ExpandedText fill=\"white\" x=\"2.5\" y=\"68.5\" textAnchor=\"left\">{card.clazz}</ExpandedText>\n                {/* Card type */}\n                <CardText fill=\"white\" x=\"48\" y=\"68.5\" textAnchor=\"end\">{cardType}</CardText>\n            </RenderedCard>\n        );\n    });\n});\n\nexport default CardFront;","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { Content } from \"pdfmake/interfaces\";\n\n/** The width of a card tile for a double sided layout */\nconst CARD_TILE_WIDTH = 612 / 3;\n/** The height of a card tile for a double sided layout */\nconst CARD_TILE_HEIGHT = 792 / 3;\n\n/** The printed card width */\nconst PRINT_CARD_WIDTH = (CARD_TILE_HEIGHT / 70) * 50;\n/** The printed card height */\nconst PRINT_CARD_HEIGHT = CARD_TILE_HEIGHT;\n\n/** Method to order the cards in a double sided arrangement */\nexport function doubleSideOrdering(cards: Array<[string, string]>) {\n    return cards.map<[Content, Content]>(([front, back], i) => {\n        // Calculate the Y of the card\n        const cardY = (Math.floor(i / 3) * CARD_TILE_HEIGHT) % (CARD_TILE_HEIGHT * 3);\n        // Calculate the X of the card\n        const cardX = (i % 3) * CARD_TILE_WIDTH;\n\n        return [\n            {\n                // Set the front's position\n                absolutePosition: {\n                    x: cardX,\n                    y: cardY\n                },\n                height: CARD_TILE_HEIGHT,\n                svg: front,\n                width: CARD_TILE_WIDTH,\n            },\n            {\n                // Set the cards position, reversing direction\n                absolutePosition: {\n                    x: (CARD_TILE_WIDTH * 2) - cardX,\n                    y: cardY\n                },\n                height: CARD_TILE_HEIGHT,\n                // Add a page break before the card if first and after the card if last\n                pageBreak:\n                    cardY === 0 && cardX === 0\n                        ? \"before\"\n                        : cardY === CARD_TILE_HEIGHT * 2 && cardX === CARD_TILE_WIDTH * 2\n                            ? \"after\"\n                            : undefined,\n                svg: back,\n                width: CARD_TILE_WIDTH\n            },\n        ];\n    }).reduce<[Content, Content[], Content[]]>(([done, fronts, backs], [front, back], i) => {\n        // Interweave the fronts and backs for a double sided print\n        if (i % 9 === 0) {\n            return [[...done, ...fronts, ...backs], [front], [back]];\n        } else {\n            return [done, [...fronts, front], [...backs, back]];\n        }\n    }, [[], [], []]);\n}\n\n/** Method to order the cards in a foldable arrangement */\nexport function foldableOrdering(cards: Array<[string, string]>) {\n    return cards.map<[Content, Content]>(([front, back], i) => {\n        // Calculate the Y of the card\n        const cardY = (i * PRINT_CARD_HEIGHT) % (PRINT_CARD_HEIGHT * 3);\n\n        return [\n            {\n                // Set the front's position\n                absolutePosition: {\n                    x: 0,\n                    y: cardY\n                },\n                height: PRINT_CARD_HEIGHT,\n                svg: front,\n                width: PRINT_CARD_WIDTH,\n            },\n            {\n                // Set the cards position\n                absolutePosition: {\n                    x: PRINT_CARD_WIDTH,\n                    y: cardY\n                },\n                height: PRINT_CARD_HEIGHT,\n                pageBreak:\n                    cardY === PRINT_CARD_HEIGHT * 2 && i !== cards.length - 1\n                        ? \"after\"\n                        : undefined,\n                svg: back,\n                width: PRINT_CARD_WIDTH\n            },\n        ];\n    });\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport JSZip from \"jszip\";\nimport pdfMake from \"pdfmake/build/pdfmake\";\nimport { Content } from \"pdfmake/interfaces\";\nimport React, { createContext, forwardRef, MutableRefObject, useCallback, useContext, useEffect, useImperativeHandle, useRef } from \"react\";\nimport { IsRenderingContext } from \"../../App\";\nimport { GlobalState, GlobalStateContext, Selection, SelectionType } from \"../../state\";\nimport { CardContainer } from \"../../styles/app\";\nimport { dataFileReaderAsync } from \"../../util/file\";\nimport { canvasToBlobAsync, createImageAsync } from \"../../util/image\";\nimport CardBack from \"./CardBack\";\nimport CardFront from \"./CardFront\";\nimport { doubleSideOrdering, foldableOrdering } from \"./cardOrdering\";\n\n/** The width of the resulting rasters */\nconst RASTER_WIDTH = 1500;\n/** The height of the resulting rasters */\nconst RASTER_HEIGHT = 2100;\n\n/** The ref exposed by thr Rendered Cards component */\nexport interface IRenderedCardsRef {\n    /** Render/Rasterize the card */\n    render(selection: Selection): Promise<void>;\n    /** Print the card in a double sided arrangement */\n    printDoubleSided(selection: Selection): Promise<void>;\n    /** Print the card in a foldable arrangement */\n    printFoldable(selection: Selection): Promise<void>;\n}\n\n/** The rendered callback context for the front of the card */\nexport const FrontRenderedCallbackContext = createContext<MutableRefObject<() => void>>({ current: () => void 0 });\n/** The rendered callback context for the back of the card */\nexport const BackRenderedCallbackContext = createContext<MutableRefObject<() => void>>({ current: () => void 0 });\n\n/** The rendered cards container and manager */\nconst RenderedCards = forwardRef<IRenderedCardsRef>((_, ref) => {\n    const frontRef = useRef<SVGSVGElement>(null);\n    const backRef = useRef<SVGSVGElement>(null);\n\n    const frontRenderedCallback = useRef<() => void>(() => void 0);\n    const backRenderedCallback = useRef<() => void>(() => void 0);\n\n    const state = useContext(GlobalStateContext);\n    const [, setIsRendering] = useContext(IsRenderingContext);\n\n    useEffect(() => {\n        Promise.all([\n            fetch(\"/fonts/Modesto-Expd.ttf\").then(x => x.blob()).then(dataFileReaderAsync),\n            fetch(\"/fonts/Modesto-Regular.ttf\").then(x => x.blob()).then(dataFileReaderAsync)\n        ]).then(([expd, regular]) => {\n            pdfMake.vfs = {\n                \"Modesto-Expd.ttf\": expd.substring(expd.lastIndexOf(\",\") + 1),\n                \"Modesto-Regular.ttf\": regular.substring(regular.lastIndexOf(\",\") + 1)\n            };\n            pdfMake.fonts = {\n                \"Modesto-Expd\": {\n                    normal: \"Modesto-Expd.ttf\"\n                },\n                \"Modesto-Regular\": {\n                    bold: \"Modesto-Regular.ttf\",\n                    normal: \"Modesto-Regular.ttf\"\n                }\n            };\n        }).catch(e => console.error(e));\n    }, []);\n\n    const selectAsync = useCallback((...args: Parameters<GlobalState[\"select\"]>) => Promise.race([\n        new Promise((resolve) => {\n            frontRenderedCallback.current = () => {\n                frontRenderedCallback.current = () => void 0;\n                backRenderedCallback.current = () => void 0;\n                resolve();\n            };\n\n            state.select(...args);\n        }),\n        new Promise((resolve) => {\n            backRenderedCallback.current = () => {\n                frontRenderedCallback.current = () => void 0;\n                backRenderedCallback.current = () => void 0;\n                resolve();\n            };\n        }),\n        new Promise((resolve) => setTimeout(resolve, 1000))\n    ]), [state, frontRenderedCallback, backRenderedCallback]);\n\n    const getCurrentSelectedSVGs = useCallback((): [string, string] => {\n        // Make sure the svgs are actually rendered\n        if (frontRef.current === null || backRef.current === null) {\n            throw new ReferenceError(\"Attempted to render while the card was not rendered, please try again.\");\n        }\n\n        // Setup exportable svg for the sides\n        const svgFront = `<?xml version=\"1.0\" encoding=\"utf-8\"?>${frontRef.current.outerHTML}`;\n        const svgBack = `<?xml version=\"1.0\" encoding=\"utf-8\"?>${backRef.current.outerHTML}`;\n\n        return [svgFront, svgBack];\n    }, [frontRef, backRef]);\n\n    const renderCurrentSelection = useCallback(async (zip: JSZip = new JSZip()) => {\n        // Create the rasterizing canvas\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = RASTER_WIDTH;\n        canvas.height = RASTER_HEIGHT;\n        // Get the rendering context\n        const context = canvas.getContext(\"2d\");\n\n        // Make sure the context exists\n        if (context === null) {\n            throw new ReferenceError(\"Could not load canvas 2d context\");\n        }\n\n        const [svgFront, svgBack] = getCurrentSelectedSVGs();\n\n        // Save the vector images\n        zip.file(\"front.svg\", svgFront);\n        zip.file(\"back.svg\", svgBack);\n\n        // Create rasterable Image objects from the svg\n        const imageFront = await createImageAsync(`data:image/svg+xml;utf8,${encodeURIComponent(svgFront)}`);\n        const imageBack = await createImageAsync(`data:image/svg+xml;utf8,${encodeURIComponent(svgBack)}`);\n\n        // Rasterize the front of the card\n        context?.drawImage(imageFront, 0, 0, RASTER_WIDTH, RASTER_HEIGHT);\n        zip.file(\"front.png\", await canvasToBlobAsync(canvas));\n\n        // Rasterize the back of the card\n        context?.drawImage(imageBack, 0, 0, RASTER_WIDTH, RASTER_HEIGHT);\n        zip.file(\"back.png\", await canvasToBlobAsync(canvas));\n\n        // Rasterize the sides in a row formation\n        canvas.width = RASTER_WIDTH * 2;\n        canvas.height = RASTER_HEIGHT;\n        context?.drawImage(imageFront, 0, 0, RASTER_WIDTH, RASTER_HEIGHT);\n        context?.drawImage(imageBack, RASTER_WIDTH, 0, RASTER_WIDTH, RASTER_HEIGHT);\n        zip.file(\"row.png\", await canvasToBlobAsync(canvas));\n\n        // Rasterize the sides in a column formation\n        canvas.width = RASTER_WIDTH;\n        canvas.height = RASTER_HEIGHT * 2;\n        context?.drawImage(imageFront, 0, 0, RASTER_WIDTH, RASTER_HEIGHT);\n        context?.drawImage(imageBack, 0, RASTER_HEIGHT, RASTER_WIDTH, RASTER_HEIGHT);\n        zip.file(\"column.png\", await canvasToBlobAsync(canvas));\n\n        // Remove the canvas from the DOM\n        canvas.remove();\n\n        // Return the packaged zip\n        return zip;\n    }, [getCurrentSelectedSVGs]);\n\n    const print = useCallback((ordering: (cards: Array<[string, string]>) => Content) => async (selection: Selection) => {\n        // Move into rendering mode\n        setIsRendering(true);\n\n        // Save the previous selection\n        const preselect = state.selection;\n\n        if (selection.type === SelectionType.Group) {\n            const svgs: Array<[string, string]> = [];\n\n            for (let card = 0; card < state.groups[selection.group].cards.length; card++) {\n                // Select and render the current card\n                await selectAsync(selection.group, card);\n\n                const csvgs = getCurrentSelectedSVGs();\n\n                svgs.push(csvgs);\n            }\n\n            pdfMake.createPdf({\n                content: ordering(svgs),\n                pageMargins: 0,\n                pageSize: \"LETTER\",\n            }).print();\n        } else if (selection.type === SelectionType.Card) {\n            // Select and render the current card\n            await selectAsync(selection.group, selection.card);\n\n            // Make a simple pdf of one side of the card on each page\n            pdfMake.createPdf({\n                content: ordering([getCurrentSelectedSVGs()]),\n                pageMargins: 0,\n                pageSize: \"LETTER\",\n            }).print();\n        } else {\n            const svgs: Array<[string, string]> = [];\n\n            for (let group = 0; group < state.groups.length; group++) {\n                for (let card = 0; card < state.groups[group].cards.length; card++) {\n                    // Select and render the current card\n                    await selectAsync(group, card);\n\n                    const csvgs = getCurrentSelectedSVGs();\n\n                    svgs.push(csvgs);\n                }\n            }\n\n            pdfMake.createPdf({\n                content: ordering(svgs),\n                pageMargins: 0,\n                pageSize: \"LETTER\",\n            }).print();\n        }\n\n        // Return selection\n        state.setSelection(preselect);\n\n        // Leave rendering mode\n        setIsRendering(false);\n    }, [getCurrentSelectedSVGs, selectAsync, setIsRendering, state]);\n\n    useImperativeHandle<IRenderedCardsRef, IRenderedCardsRef>(ref, () => ({\n        printDoubleSided: print(doubleSideOrdering),\n        printFoldable: print(foldableOrdering),\n        render: async (selection: Selection) => {\n            // Move into rendering mode\n            setIsRendering(true);\n\n            // Save the previous selection\n            const preselect = state.selection;\n\n            if (selection.type === SelectionType.Group) {\n                // Create zip file\n                const zip = new JSZip();\n\n                for (let card = 0; card < state.groups[selection.group].cards.length; card++) {\n                    // Select and render the current card\n                    await selectAsync(selection.group, card);\n\n                    // Render and export the cards into a new zip file\n                    await renderCurrentSelection(zip.folder(state.groups[selection.group].cards[card].name));\n                }\n\n                // Save the zip file\n                saveAs(await zip.generateAsync({ type: \"blob\" }), state.groups[selection.group].name);\n            } else if (selection.type === SelectionType.Card) {\n                // Select and render the current card\n                await selectAsync(selection.group, selection.card);\n\n                // Render and export the cards into a new zip file\n                const zip = await renderCurrentSelection();\n\n                // Save the zip file\n                saveAs(await zip.generateAsync({ type: \"blob\" }), state.groups[selection.group].cards[selection.card].name);\n            } else {\n                // Create zip file\n                const zip = new JSZip();\n\n                for (let group = 0; group < state.groups.length; group++) {\n                    const groupFolder = zip.folder(state.groups[group].name);\n\n                    for (let card = 0; card < state.groups[group].cards.length; card++) {\n                        // Select and render the current card\n                        await selectAsync(group, card);\n\n                        // Render and export the cards into a new zip file\n                        await renderCurrentSelection(groupFolder.folder(state.groups[group].cards[card].name));\n                    }\n                }\n\n                // Save the zip file\n                saveAs(await zip.generateAsync({ type: \"blob\" }), \"workspace\");\n            }\n\n            // Return selection\n            state.setSelection(preselect);\n\n            // Leave rendering mode\n            setIsRendering(false);\n        }\n    }));\n\n    return (\n        <CardContainer>\n            <FrontRenderedCallbackContext.Provider value={frontRenderedCallback}>\n                <BackRenderedCallbackContext.Provider value={backRenderedCallback}>\n                    <CardFront ref={frontRef} />\n                    <CardBack ref={backRef} />\n                </BackRenderedCallbackContext.Provider>\n            </FrontRenderedCallbackContext.Provider >\n        </CardContainer >\n    );\n});\n\nexport default RenderedCards;","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport styled from \"styled-components\";\n\n/** The container for the editor */\nexport const EditorContainer = styled.div`\n    background: #313131;\n    color: #cccccc;\n\n    padding: 15px 10px;\n\n    min-height: calc(100% - 30px);\n    overflow: auto;\n`;\n\n/** The values section of the editor */\nexport const EditorValues = styled.div`\n    padding-bottom: 20px;\n`;\n\n/** The empty editor view */\nexport const EditorEmpty = styled.div`\n    height: 100%;\n    width: 100%;\n    position: relative;\n\n    color: white;\n    background-color: #696969;\n`;\n\n/** The centered text in the editor */\nexport const EditorCenter = styled.div`\n    position: absolute;\n    top: 50%;\n    width: 100%;\n    text-align: center;\n\n    transform: translateY(-50%);\n`;\n\n/** A title for the editor */\nexport const EditorTitle = styled.div`\n    font-weight: bold;\n    font-size: 25px;\n\n    border-bottom: solid 1px #cccccc;\n    padding-bottom: 3px;\n    margin-bottom: 10px;\n`;\n\n/** A label for an editor value */\nexport const EditorLabel = styled.label`\n    font-weight: bold;\n    display: ${props => props.hidden === true ? \"none\" : \"block\"};\n    user-select: none;\n\n    &:hover > input,\n    &:hover > textarea {\n        border-bottom: solid 1px #777777;\n    }\n`;\n\n/** The editor input for a value */\nexport const EditorInput = styled.input`\n    user-select: contain;\n\n    font-weight: normal;\n    background: #00000080;\n    color: #cccccc;\n    border: solid 1px transparent;\n\n    padding: 2px 5px;\n\n    display: block;\n\n    width: calc(100% - 20px);\n\n    &:focus {\n        outline: none;\n        border-bottom: solid 1px #cccccc;\n    }\n`;\n\n/** The editor input for a value */\nexport const EditorTextArea = styled.textarea`\n    user-select: contain;\n    resize: none;\n\n    font-weight: normal;\n    background: #00000080;\n    color: #cccccc;\n    border: solid 1px transparent;\n\n    padding: 2px 5px;\n\n    display: block;\n\n    width: calc(100% - 20px);\n\n    &:focus {\n        outline: none;\n        border-bottom: solid 1px #cccccc;\n    }\n`;\n\n/** An image in the editor */\nexport const EditorImage = styled.img`\n    max-height: 50px;\n    display: block;\n`;","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport React, { memo, useCallback, useEffect, useRef } from \"react\";\nimport { EditorTextArea } from \"../styles/editor\";\n\n/** A text area that resizes when it overflows */\nconst AutoResizeTextArea = memo((props: React.DetailedHTMLProps<React.TextareaHTMLAttributes<HTMLTextAreaElement>, HTMLTextAreaElement>) => {\n    const ref = useRef<HTMLTextAreaElement>(null);\n\n    const resize = useCallback(() => {\n        if (ref.current === null) {\n            return;\n        }\n\n        ref.current.style.height = \"1px\";\n        ref.current.style.height = `${ref.current.scrollHeight}px`;\n    }, [ref]);\n\n    useEffect(() => {\n        resize();\n\n        window.addEventListener(\"resize\", resize);\n\n        return () => window.removeEventListener(\"resize\", resize);\n    }, [resize, props.value]);\n\n    return <EditorTextArea {...props} ref={ref} onKeyUp={resize} />;\n});\n\nexport default AutoResizeTextArea;","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport styled from \"styled-components\";\n\n/** The container for the group settings */\nexport const GroupSettingsContainer = styled.div`\n    margin-bottom: 20px;\n`;","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { useObserver } from \"mobx-react-lite\";\nimport React, { useContext } from \"react\";\nimport { GlobalStateContext, SelectionType } from \"../state\";\nimport { EditorInput, EditorLabel, EditorTitle } from \"../styles/editor\";\nimport { GroupSettingsContainer } from \"../styles/editor/group\";\n\n/** The group settings part */\nexport default function GroupSettings() {\n    const state = useContext(GlobalStateContext);\n\n    return useObserver(() => {\n        if (state.selection.type !== SelectionType.Group) {\n            return null;\n        }\n\n        const id = state.selection.group;\n        const update = (event: React.FormEvent<HTMLInputElement>) => {\n            state.groups[id].editName(event.currentTarget.value);\n        };\n\n        return (\n            <GroupSettingsContainer>\n                <EditorTitle>Group settings</EditorTitle>\n                <EditorLabel>\n                    Name:\n                    <EditorInput type=\"text\" value={state.groups[state.selection.group].name ?? \"\"} onChange={update} />\n                </EditorLabel>\n            </GroupSettingsContainer>\n        );\n    });\n}\n","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { useObserver } from \"mobx-react-lite\";\nimport React, { useContext, useRef } from \"react\";\nimport ICard from \"../card/card\";\nimport { GlobalStateContext, SelectionType } from \"../state\";\nimport { EditorImage, EditorInput, EditorLabel, EditorTitle, EditorValues } from \"../styles/editor\";\nimport { dataFileReaderAsync } from \"../util/file\";\nimport AutoResizeTextArea from \"./AutoResizeTextArea\";\nimport GroupSettings from \"./GroupSettings\";\n\n/** The CardSettings section */\nexport default function CardSettings() {\n    const state = useContext(GlobalStateContext);\n    const imageRef = useRef<HTMLInputElement>(null);\n\n    return useObserver(() => {\n        const cardSettings =\n            state.selection.type === SelectionType.Card\n                ? state.groups[state.selection.group].rawCards[state.selection.card]\n                : state.selection.type === SelectionType.Group\n                    ? { name: state.groups[state.selection.group].name, ...state.groups[state.selection.group].defaults }\n                    : { name: \"No Selection\" };\n        const placeholders = state.selection.type === SelectionType.Card ? state.groups[state.selection.group].defaults : undefined;\n\n        /** Update the internal cache values of a text value */\n        const cardValueUpdater = (name: keyof ICard) => {\n            return (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n                event.persist();\n\n                if (state.selection.type === SelectionType.Card) {\n                    state.groups[state.selection.group].editCard(state.selection.card, name, event.currentTarget.value === \"\" && name !== \"name\" ? undefined : event.currentTarget.value);\n                } else if (state.selection.type === SelectionType.Group) {\n                    state.groups[state.selection.group].editDefaults(name, event.currentTarget.value === \"\" ? undefined : event.currentTarget.value);\n                }\n            };\n        };\n\n        const clear = (param: keyof ICard) => () => {\n            if (state.selection.type === SelectionType.Card) {\n                state.groups[state.selection.group].editCard(state.selection.card, param, undefined);\n            } else if (state.selection.type === SelectionType.Group) {\n                state.groups[state.selection.group].editDefaults(param, undefined);\n            }\n        };\n\n        const fileInput = async (event: React.FormEvent<HTMLInputElement>) => {\n            event.persist();\n\n            if (state.selection.type === SelectionType.Card) {\n                if (imageRef.current !== null) {\n                    let image: string | undefined;\n\n                    if (imageRef.current.files !== null) {\n                        image = await dataFileReaderAsync(imageRef.current.files[0]);\n                    }\n\n                    state.groups[state.selection.group].editCard(state.selection.card, \"image\", image);\n                }\n            } else if (state.selection.type === SelectionType.Group) {\n                if (imageRef.current !== null) {\n                    let image: string | undefined;\n\n                    if (imageRef.current.files !== null) {\n                        image = await dataFileReaderAsync(imageRef.current.files[0]);\n                    }\n\n                    state.groups[state.selection.group].editDefaults(\"image\", image);\n                }\n            }\n        };\n\n        return (\n            <EditorValues>\n                <GroupSettings />\n                <EditorTitle>Card Settings</EditorTitle>\n                <EditorLabel hidden={state.selection.type === SelectionType.Group}>\n                    Name:\n                    <EditorInput type=\"text\" value={cardSettings.name ?? \"\"} onChange={cardValueUpdater(\"name\")} />\n                </EditorLabel>\n                <EditorLabel>\n                    Casting Time:\n                    <EditorInput type=\"text\" value={cardSettings.castingTime ?? \"\"} onChange={cardValueUpdater(\"castingTime\")} placeholder={placeholders?.castingTime} />\n                </EditorLabel>\n                <EditorLabel>\n                    Range:\n                    <EditorInput type=\"text\" value={cardSettings.range ?? \"\"} onChange={cardValueUpdater(\"range\")} placeholder={placeholders?.range} />\n                </EditorLabel>\n                <EditorLabel>\n                    Components:\n                    <EditorInput type=\"text\" value={cardSettings.components ?? \"\"} onChange={cardValueUpdater(\"components\")} placeholder={placeholders?.components ?? \"\"} />\n                </EditorLabel>\n                <EditorLabel>\n                    Duration:\n                    <EditorInput type=\"text\" value={cardSettings.duration ?? \"\"} onChange={cardValueUpdater(\"duration\")} placeholder={placeholders?.duration} />\n                </EditorLabel>\n                <EditorLabel>\n                    Physical Components:\n                    <AutoResizeTextArea value={cardSettings.physicalComponents ?? \"\"} onChange={cardValueUpdater(\"physicalComponents\")} placeholder={placeholders?.physicalComponents} />\n                </EditorLabel>\n                <EditorLabel>\n                    Description:\n                    <AutoResizeTextArea value={cardSettings.description ?? \"\"} onChange={cardValueUpdater(\"description\")} placeholder={placeholders?.description} />\n                </EditorLabel>\n                <EditorLabel>\n                    Extended Description:\n                    <AutoResizeTextArea value={cardSettings.extDescription ?? \"\"} onChange={cardValueUpdater(\"extDescription\")} placeholder={placeholders?.extDescription} />\n                </EditorLabel>\n                <EditorLabel>\n                    Class:\n                    <EditorInput type=\"text\" value={cardSettings.clazz ?? \"\"} onChange={cardValueUpdater(\"clazz\")} placeholder={placeholders?.clazz} />\n                </EditorLabel>\n                <EditorLabel>\n                    Type:\n                    <EditorInput type=\"text\" value={cardSettings.type ?? \"\"} onChange={cardValueUpdater(\"type\")} placeholder={placeholders?.type} />\n                </EditorLabel>\n                <EditorLabel>\n                    Level:\n                    <EditorInput type=\"number\" min={0} max={99} value={cardSettings.level ?? \"\"} onChange={cardValueUpdater(\"level\")} placeholder={placeholders?.level === undefined ? undefined : placeholders?.level?.toString()} />\n                </EditorLabel>\n                <EditorLabel>\n                    Color:\n                    <EditorInput type=\"color\" value={cardSettings.color ?? \"\"} onChange={cardValueUpdater(\"color\")} placeholder={placeholders?.color} />\n                    <button onClick={clear(\"color\")} disabled={cardSettings.color === undefined}>Clear Color</button>\n                </EditorLabel>\n                <EditorLabel>\n                    Image:\n                    <EditorImage src={cardSettings.image} alt=\"Group Default\" />\n                    <EditorInput type=\"file\" accept=\"image/*\" onChange={fileInput} ref={imageRef} />\n                    <button onClick={clear(\"image\")} disabled={cardSettings.image === undefined}>Remove Image</button>\n                </EditorLabel>\n            </EditorValues>\n        );\n    });\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { useObserver } from \"mobx-react-lite\";\nimport React, { useContext } from \"react\";\nimport { GlobalStateContext, SelectionType } from \"../state\";\nimport { EditorCenter, EditorContainer, EditorEmpty } from \"../styles/editor\";\nimport CardSettings from \"./CardSettings\";\n\n/** The editor component */\nexport default function Editor() {\n    const state = useContext(GlobalStateContext);\n\n    return useObserver(() => {\n        if (state.selection.type !== SelectionType.None) {\n            return (\n                <EditorContainer>\n                    <CardSettings />\n                </EditorContainer>\n            );\n        } else {\n            return (\n                <EditorEmpty>\n                    <EditorCenter>You have nothing selected</EditorCenter>\n                </EditorEmpty>\n            );\n        }\n    });\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { Item } from \"react-contexify\";\nimport styled, { createGlobalStyle } from \"styled-components\";\n\n/** Global styles for the context menu */\nexport const ContextMenuStyles = createGlobalStyle`\n    .react-contexify {\n        position: fixed;\n        opacity: 0;\n        user-select: none;\n        box-sizing: border-box;\n\n        padding: 10px 10px;\n        background-color: #1a1a1a;\n        box-shadow: 5px 5px 15px #00000066;\n\n        border-radius: 3px;\n\n        cursor: pointer;\n\n        & &__submenu {\n            position: absolute;\n            top: 0;\n            pointer-events: none;\n            transition: opacity 0.275s;\n\n            background-color: #282828fa;\n        }\n\n        &__submenu-arrow {\n            font-size: 12px;\n            position: absolute;\n            right: 10px;\n            line-height: 22px;\n        }\n\n        &__separator {\n            float: left;\n            width: 100%;\n            height: 1px;\n            cursor: default;\n            margin: 4px 0;\n\n            background-color: #666666;\n        }\n\n        &__item {\n            font-size: 14px;\n\n            color: #b8b8b8;\n            font-weight: bold;\n\n            cursor: pointer;\n            position: relative;\n\n            &:not(&--disabled):hover > &__data {\n                color: inherit;\n                background-color: #313131;\n            }\n\n            &:not(&--disabled):hover > .react-contexify__submenu {\n                pointer-events: initial;\n                opacity: 1;\n            }\n\n            &--disabled {\n                cursor: default;\n                opacity: .5;\n            }\n\n            &__data {\n                min-width: 100px;\n                padding: 6px 12px;\n                display: flex;\n                text-align: left;\n                white-space: nowrap;\n                color: inherit;\n                position: relative;\n            }\n\n            &__icon {\n                font-size: 20px;\n                margin-right: 8px;\n                width: 12px;\n                text-align: center;\n            }\n        }\n    }\n`;\n\n/** An item that does a dangerous action */\nexport const DangerItem = styled(Item)`\n    color: #f04747 !important;\n`;","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { toJS } from \"mobx\";\nimport { useObserver } from \"mobx-react-lite\";\nimport React, { MouseEvent, PropsWithChildren, useContext } from \"react\";\nimport { contextMenu, Item, Menu, Separator } from \"react-contexify\";\nimport { RenderedCardsContext } from \"../App\";\nimport CardGroup from \"../card/cardGroup\";\nimport { GlobalStateContext, Selection, SelectionType } from \"../state\";\nimport { DangerItem } from \"../styles/contextMenu\";\nimport { downloadSelection } from \"../util/file\";\nimport { IItemArgs, ItemHandler } from \"./Explorer\";\n\n/** Props to the better menu provider component */\ninterface IBMPProps {\n    /** The id of the context menu */\n    id: string;\n    /** The selection that the menu should act upon */\n    selection: Selection;\n}\n\n/** A better menu provider */\nexport function BetterMenuProvider({ id, children, selection }: PropsWithChildren<IBMPProps>) {\n    const rightClick = (event: MouseEvent) => {\n        event.preventDefault();\n        event.stopPropagation();\n        event.persist();\n\n        contextMenu.hideAll();\n        setTimeout(() => contextMenu.show({\n            event,\n            id,\n            props: selection\n        }), 1);\n    };\n\n    const leftClick = (_: MouseEvent) => {\n        contextMenu.hideAll();\n    };\n\n    return (\n        <div onContextMenu={rightClick} onClick={leftClick}>\n            {children}\n        </div>\n    );\n}\n\n/** Props for the Explorer context menus */\ninterface IECMProps {\n    /** State changer for delete selection */\n    setDeleteSelection(val: Selection): void;\n}\n\n/** The context menus for the explorer */\nexport function ExplorerContextMenus({ setDeleteSelection }: IECMProps) {\n    const state = useContext(GlobalStateContext);\n    const renderedCards = useContext(RenderedCardsContext);\n\n    return useObserver(() => {\n        const downloadClick = (({ props }: IItemArgs) => {\n            if (props.type === SelectionType.Group) {\n                const group = state.groups[props.group];\n\n                downloadSelection({ type: SelectionType.Group, data: group.data }, `${group.name}.group.json`);\n            } else if (props.type === SelectionType.Card) {\n                const card = state.groups[props.group].cards[props.card];\n\n                downloadSelection({ type: SelectionType.Card, data: card }, `${card.name}.card.json`);\n            } else {\n                downloadSelection({ type: SelectionType.None, data: toJS(state.groupsData) }, `workspace.json`);\n            }\n        }) as unknown as ItemHandler;\n\n        const addClick = (({ props }: IItemArgs) => {\n            if (props.type === SelectionType.Group) {\n                const id = state.groups[props.group].addCard();\n                state.select(props.group, id);\n            } else if (props.type === SelectionType.None) {\n                const id = state.addGroup(new CardGroup(`New Group ${state.groups.length}`));\n                state.select(id);\n            }\n        }) as unknown as ItemHandler;\n\n        const editClick = (({ props }: IItemArgs) => {\n            if (props.type === SelectionType.Group) {\n                state.select(props.group);\n            }\n        }) as unknown as ItemHandler;\n\n        const editDisable = (({ props }: IItemArgs) => {\n            // Disable the edit button if this card is already selected\n            return props.type === SelectionType.Group && state.selection.type === SelectionType.Group && state.selection.group === props.group;\n        }) as unknown as ItemHandler<boolean>;\n\n        const deleteClick = (({ props }: IItemArgs) => setDeleteSelection(props)) as unknown as ItemHandler;\n\n        const duplicateClick = (({ props }: IItemArgs) => {\n            if (props.type === SelectionType.Group) {\n                const id = state.addGroup(state.groups[props.group]);\n\n                state.select(id);\n            } else if (props.type === SelectionType.Card) {\n                const group = state.groups[props.group];\n                const id = group.addCard(group.rawCards[props.card]);\n\n                state.select(props.group, id);\n            }\n        }) as unknown as ItemHandler;\n\n        const upClick = (({ props }: IItemArgs) => {\n            if (props.type === SelectionType.Group) {\n                state.moveGroup(props.group, props.group - 1);\n                state.select(props.group - 1);\n            } else if (props.type === SelectionType.Card) {\n                state.groups[props.group].moveCard(props.card, props.card - 1);\n                state.select(props.group, props.card - 1);\n            }\n        }) as unknown as ItemHandler;\n\n        const downClick = (({ props }: IItemArgs) => {\n            if (props.type === SelectionType.Group) {\n                state.moveGroup(props.group, props.group + 1);\n                state.select(props.group + 1);\n            } else if (props.type === SelectionType.Card) {\n                state.groups[props.group].moveCard(props.card, props.card + 1);\n                state.select(props.group, props.card + 1);\n            }\n        }) as unknown as ItemHandler;\n\n        const upDisable = (({ props }: IItemArgs): boolean => {\n            if (props.type === SelectionType.Group) {\n                return props.group === 0;\n            } else if (props.type === SelectionType.Card) {\n                return props.card === 0;\n            } else {\n                return true;\n            }\n        }) as unknown as ItemHandler<boolean>;\n\n        const downDisable = (({ props }: IItemArgs): boolean => {\n            if (props.type === SelectionType.Group) {\n                return props.group === state.groups.length - 1;\n            } else if (props.type === SelectionType.Card) {\n                return props.card === state.groups[props.group].cards.length - 1;\n            } else {\n                return true;\n            }\n        }) as unknown as ItemHandler<boolean>;\n\n        const deselect = () => {\n            state.select();\n        };\n\n        const renderClick = (async ({ props }: IItemArgs) => {\n            if (renderedCards.current === null) {\n                return;\n            }\n\n            // Render the cards\n            await renderedCards.current.render(props);\n        }) as unknown as ItemHandler;\n\n        const printDoubleSidedClick = (async ({ props }: IItemArgs) => {\n            if (renderedCards.current === null) {\n                return;\n            }\n\n            // Render the cards\n            await renderedCards.current.printDoubleSided(props);\n        }) as unknown as ItemHandler;\n\n        const printFoldableClick = (async ({ props }: IItemArgs) => {\n            if (renderedCards.current === null) {\n                return;\n            }\n\n            // Render the cards\n            await renderedCards.current.printFoldable(props);\n        }) as unknown as ItemHandler;\n\n        return (\n            <>\n                <Menu id=\"none-contextmenu\">\n                    <Item onClick={addClick}>Add Group</Item>\n                    <Separator />\n                    <Item onClick={deselect}>Deselect All</Item>\n                    <Separator />\n                    <Item onClick={downloadClick}>Download All</Item>\n                    <Item onClick={renderClick}>Render All</Item>\n                    <Item onClick={printDoubleSidedClick}>Print All (Double Sided)</Item>\n                    <Item onClick={printFoldableClick}>Print All (Foldable)</Item>\n                </Menu>\n                <Menu id=\"group-contextmenu\">\n                    <Item onClick={editClick} disabled={editDisable}>Edit</Item>\n                    <Item onClick={addClick}>Add Card</Item>\n                    <Item onClick={duplicateClick}>Duplicate</Item>\n                    <Separator />\n                    <Item onClick={upClick} disabled={upDisable}>Move Up</Item>\n                    <Item onClick={downClick} disabled={downDisable}>Move Down</Item>\n                    <Separator />\n                    <Item onClick={downloadClick}>Download Group</Item>\n                    <Item onClick={renderClick}>Render Group</Item>\n                    <Item onClick={printDoubleSidedClick}>Print Group (Double Sided)</Item>\n                    <Item onClick={printFoldableClick}>Print Group (Foldable)</Item>\n                    <Separator />\n                    <DangerItem onClick={deleteClick}>Delete</DangerItem>\n                </Menu>\n                <Menu id=\"card-contextmenu\">\n                    <Item onClick={duplicateClick}>Duplicate</Item>\n                    <Separator />\n                    <Item onClick={upClick} disabled={upDisable}>Move Up</Item>\n                    <Item onClick={downClick} disabled={downDisable}>Move Down</Item>\n                    <Separator />\n                    <Item onClick={downloadClick}>Download Card</Item>\n                    <Item onClick={renderClick}>Render Card</Item>\n                    <Item onClick={printDoubleSidedClick}>Print Card (Double Sided)</Item>\n                    <Item onClick={printFoldableClick}>Print Card (Foldable)</Item>\n                    <Separator />\n                    <DangerItem onClick={deleteClick}>Delete</DangerItem>\n                </Menu>\n            </>\n        );\n    });\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport styled from \"styled-components\";\n\n/** The styles for the modal */\nexport const ModalStyles: {\n    /** The content props */\n    content: React.CSSProperties;\n    /** The overlay props */\n    overlay: React.CSSProperties;\n} = {\n    content: {\n        background: \"#1a1a1a\",\n        border: \"solid 1px #666666\",\n        color: \"#b8b8b8\",\n        height: \"150px\",\n        left: \"50%\",\n        maxHeight: \"calc(100% - 40px)\",\n        maxWidth: \"calc(100% - 40px)\",\n        minHeight: \"100px\",\n        minWidth: \"100px\",\n        position: \"absolute\",\n        top: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        width: \"500px\",\n    },\n    overlay: {\n        background: \"#000000AA\"\n    }\n};\n\n/** The container for the modal */\nexport const ModalContainer = styled.div`\n    display: grid;\n    grid-template-columns: auto;\n    grid-template-rows: auto 40px 30px;\n    height: 100%;\n\n    grid-column-gap: 10px;\n\n    color: #cccccc;\n    font-size: 20px;\n`;\n\n/** The dialog for the modal */\nexport const ModalDialog = styled.div`\n    grid-row: 1;\n    margin-left: 10px;\n`;\n\n/** An emphasis on the modal text */\nexport const ModalEmph = styled.span`\n    font-weight: bold;\n    font-style: italic;\n`;\n\n/** The description for the modal */\nexport const ModalDesc = styled.div`\n    grid-row: 2;\n\n    margin-left: 10px;\n    font-weight: bold;\n`;\n\n/** A danger emphasis on modal text */\nexport const ModalDangerEmph = styled.span`\n    color: #f04747;\n`;\n\n/** The buttons on a modal */\nexport const ModalButtons = styled.div`\n    grid-row: 3;\n    text-align: center;\n`;\n\n/** A modal button */\nexport const ModalButton = styled.button`\n    background: #313131;\n    border: none;\n    color: #cccccc;\n\n    padding: 5px 10px;\n    border-radius: 5px;\n\n    margin: 0px 10px;\n\n    &:hover {\n        background: #515151;\n    }\n`;\n\n/** A modal button that represents a dangerous action */\nexport const ModalDangerButton = styled(ModalButton)`\n    color: #f04747;\n    font-weight: bold;\n\n    &:hover {\n        background: #f04747;\n        color: #FFFFFF;\n    }\n`;\n\n/** A modal button that represents a suggested action */\nexport const ModalSuggestedButton = styled(ModalButton)`\n    color: #17831d;\n    font-weight: bold;\n\n    &:hover {\n        background: #17831d;\n        color: #FFFFFF;\n    }\n`;","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { Observer } from \"mobx-react-lite\";\nimport React, { useContext } from \"react\";\nimport ReactModal from \"react-modal\";\nimport { GlobalStateContext, Selection, SelectionType } from \"../state\";\nimport { ModalButton, ModalButtons, ModalContainer, ModalDangerButton, ModalDangerEmph, ModalDesc, ModalDialog, ModalEmph, ModalStyles } from \"../styles/modal\";\n\n/** The props for the delete modal */\ninterface IDeleteModalProps {\n    /** The selection to delete */\n    deleteSelection: Selection;\n    /** A way to change the selection */\n    setDeleteSelection(selection: Selection): void;\n}\n\n/** The delete confirmation modal */\nexport default function DeleteModal({ deleteSelection, setDeleteSelection }: IDeleteModalProps) {\n    const state = useContext(GlobalStateContext);\n\n    const deleteCard = () => {\n        if (deleteSelection.type === SelectionType.Group) {\n            state.select();\n            state.removeGroup(deleteSelection.group);\n        } else if (deleteSelection.type === SelectionType.Card) {\n            state.select(deleteSelection.group);\n            state.groups[deleteSelection.group].removeCard(deleteSelection.card);\n        } else {\n            console.warn(\"Attempted to delete card when no card selected for deletion\");\n        }\n\n        setDeleteSelection({ type: SelectionType.None });\n    };\n    const closeDeleteModal = () => setDeleteSelection({ type: SelectionType.None });\n\n    const confirmationMessage = () => {\n        if (deleteSelection.type === SelectionType.Group) {\n            const group = state.groups[deleteSelection.group];\n\n            return <span>Are you sure you want to delete the group <ModalEmph>{group.name}</ModalEmph> and all of its cards</span>;\n        } else if (deleteSelection.type === SelectionType.Card) {\n            const card = state.groups[deleteSelection.group].cards[deleteSelection.card];\n\n            return <span>Are you sure you want to delete the card <ModalEmph>{card.name}</ModalEmph></span>;\n        } else {\n            return <span>You have reached an invalid state, please press cancel</span>;\n        }\n    };\n\n    return (\n        <ReactModal isOpen={deleteSelection.type !== SelectionType.None} style={ModalStyles}>\n            <ModalContainer>\n                <ModalDialog>\n                    <Observer>{confirmationMessage}</Observer>\n                </ModalDialog>\n                <ModalDesc>\n                    This action is <ModalDangerEmph>irreversible</ModalDangerEmph>\n                </ModalDesc>\n                <ModalButtons>\n                    <ModalButton onClick={closeDeleteModal}>Cancel</ModalButton>\n                    <ModalDangerButton onClick={deleteCard}>Delete</ModalDangerButton>\n                </ModalButtons>\n            </ModalContainer>\n        </ReactModal>\n    );\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport styled from \"styled-components\";\n\n/** The container for the explorer */\nexport const ExplorerContainer = styled.div`\n    display: grid;\n    grid-template-columns: auto;\n    grid-template-rows: 40px calc(100% - 60px);\n\n    grid-column-gap: 10px;\n\n    background: #313131;\n    color: #cccccc;\n\n    height: 100%;\n    overflow: hidden;\n`;\n\n/** Properties for the explorer header */\ninterface IHeaderProps {\n    /** If the view below is scrolled all the way to the top */\n    isTop: boolean;\n}\n\n/** The header component of the explorer */\nexport const ExplorerHeader = styled.div<IHeaderProps>`\n    grid-row: 1;\n    height: 100%;\n\n    padding: 0px 50px;\n\n    margin-left: -50px;\n\n    width: 100%;\n    box-shadow: ${props => props.isTop ? \"none\" : \"0px 10px 10px #000000\"};\n`;\n\n/** The search bar for the explorere */\nexport const ExplorerSearch = styled.div`\n    display: inline-block;\n    width: calc(100% - 60px);\n\n    margin: 8px 5px 8px 10px;\n\n    border: 1px solid transparent;\n\n    padding: 0px 3px;\n\n    background: #555555;\n`;\n\n/** Properties for the explorer header input */\ninterface IHeaderSearchInputProps {\n    /** If the input should be shortened for the x button */\n    short: boolean;\n}\n\n/** The input in the explorer search */\nexport const ExporerSearchInput = styled.input.attrs({\n    type: \"text\"\n}) <IHeaderSearchInputProps>`\n    &::-ms-clear {\n        display: none;\n    }\n    outline: none;\n\n    height: 20px;\n    width: ${props => props.short ? \"calc(100% - 20px)\" : \"calc(100%)\"};\n\n    background: transparent;\n    color: #cccccc;\n    border: none;\n\n    font-size: 15px;\n\n    padding: 0px;\n\n    display: inline-block;\n`;\n\n/** The x button on the explorer */\nexport const ExplorerSearchX = styled.div`\n    height: 20px;\n    font-size: 16px;\n    width: 20px;\n\n    color: #cccccc;\n    text-align: center;\n    display: ${props => props.hidden === true ? \"none\" : \"inline-block\"};\n    position: relative;\n    vertical-align: text-bottom;\n\n    user-select: none;\n\n    &:hover {\n        color: #f04747;\n    }\n\n    svg {\n        position: absolute;\n\n        top: 50%;\n        left: 50%;\n\n        transform: translate(-50%, -50%);\n    }\n`;\n\n/** The add button on the explorer */\nexport const ExplorerAddButton = styled.div`\n    color: #cccccc;\n    text-align: center;\n    display: inline-block;\n    position: relative;\n\n    user-select: none;\n\n    width: 20px;\n    margin: 0 5px;\n\n    &:hover {\n        color: #43b581;\n    }\n`;\n\n/** The exporer groups section props */\ninterface IExplorerGroupsProps {\n    /** If there is smthn dragged over */\n    dragOver: boolean;\n}\n\n/** The groupd section of the explorer */\nexport const ExplorerGroups = styled.div<IExplorerGroupsProps>`\n    grid-row: 2;\n    user-select: none;\n\n    overflow: auto;\n    height: 100%;\n\n    padding: 10px 0px 10px 0px;\n    background: ${props => props.dragOver ? \"#ec52ec80\" : \"none\"};\n`;\n\n/** The highlighted match of the search term */\nexport const ExplorerHighlight = styled.span`\n    background: #ff440041;\n`;","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport styled from \"styled-components\";\n\n/** Props for a component that is selectable */\nexport interface ISelectableProps {\n    /** If the component is selected */\n    selected: boolean;\n}\n\n/** The title to the card group */\nexport const CardGroupTitle = styled.div<ISelectableProps>`\n    padding: 0px 0px 0px 10px;\n    background: ${props => props.selected ? \"#2b5c3b\" : \"none\"};\n\n    &:hover {\n        background: #414141;\n    }\n`;\n\n/** The carat for the card group */\nexport const CardGroupCaret = styled.div`\n    display: inline-block;\n    width: 20px;\n    text-align: center;\n`;\n\n/** The name for the group */\nexport const CardGroupName = styled.div`\n    display: inline-block;\n    font-weight: bold;\n    font-size: 20px;\n`;","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport styled from \"styled-components\";\nimport { ISelectableProps } from \"./cardGroup\";\n\n/** The title to the card group */\nexport const CardTitle = styled.div<ISelectableProps>`\n    min-height: 20px;\n    background: ${props => props.selected ? \"#515151\" : \"none\"};\n\n    &:hover {\n        background: #414141;\n    }\n\n    padding: 3px 0px 3px 30px;\n`;","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { useObserver } from \"mobx-react-lite\";\nimport React, { useContext } from \"react\";\nimport ICard from \"../card/card\";\nimport { GlobalStateContext, SelectionType } from \"../state\";\nimport { CardTitle } from \"../styles/explorer/card\";\nimport { BetterMenuProvider } from \"./ContextMenu\";\nimport { highlightMatches } from \"./Explorer\";\n\n/** The propt */\ninterface IProps {\n    /** The card id */\n    id: number;\n    /** The group id */\n    groupid: number;\n    /** The search term */\n    search: string;\n}\n\n/** Filter for cards */\nexport function cardFilter(filter: string) {\n    return (card: ICard) => (card.name.toLowerCase().includes(filter.toLowerCase()));\n}\n\n/** A card component in the explortr */\nexport default function CardComponent({ groupid, id, search }: IProps) {\n    const state = useContext(GlobalStateContext);\n\n    const select = () => state.select(groupid, id);\n\n    return useObserver(() => {\n        const card = state.groups[groupid].cards[id];\n\n        // Hide the card if there is a search term AND\n        const hidden = search !== \"\" && (\n            // If the group is not selected AND\n            state.selection.type !== SelectionType.Card\n            || state.selection.card !== id\n            || state.selection.group !== groupid\n            // Or if it is a match\n        ) && !cardFilter(search)(card);\n\n        return (\n            <BetterMenuProvider id=\"card-contextmenu\" selection={{ type: SelectionType.Card, card: id, group: groupid }}>\n                <CardTitle\n                    selected={state.selection.type === SelectionType.Card && state.selection.card === id && state.selection.group === groupid}\n                    onClick={select}\n                    hidden={hidden}\n                >\n                    {/* Highlight any text in the card that matches the search query */}\n                    {highlightMatches(card.name, search)}\n                </CardTitle>\n            </BetterMenuProvider>\n        );\n    });\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { faCaretDown, faCaretRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Observer, useObserver } from \"mobx-react-lite\";\nimport React, { useContext, useState } from \"react\";\nimport { GlobalStateContext, SelectionType } from \"../state\";\nimport { CardGroupCaret, CardGroupName, CardGroupTitle } from \"../styles/explorer/cardGroup\";\nimport CardComponent, { cardFilter } from \"./CardComponent\";\nimport { BetterMenuProvider } from \"./ContextMenu\";\nimport { highlightMatches } from \"./Explorer\";\n\n/** The props */\ninterface IProps {\n    /** The card id */\n    id: number;\n    /** The search term */\n    search: string;\n}\n\n/** A component to show a card group in the side panel */\nexport default function CardGroupComponent({ id, search }: IProps) {\n    const [collapsed, setCollapsed] = useState(false);\n    const state = useContext(GlobalStateContext);\n\n    // Hide the group if there is a search term AND\n    const hidden = useObserver(() => search !== \"\" && (\n        // If there are no cards in the group that match the filter\n        state.groups[id].cards.filter(cardFilter(search)).length === 0\n        // AND the name of the group does not match\n        && !state.groups[id].name.toLowerCase().includes(search.toLowerCase())\n        // AND the group is not selected OR any card in the group\n        && !((state.selection.type === SelectionType.Card || state.selection.type === SelectionType.Group) && state.selection.group === id)\n    ));\n\n    const toggleCollapse = () => setCollapsed(!collapsed);\n\n    return useObserver(() => (\n        <BetterMenuProvider id=\"group-contextmenu\" selection={{ type: SelectionType.Group, group: id }}>\n            <div hidden={hidden}>\n                <CardGroupTitle selected={state.selection.type === SelectionType.Group && state.selection.group === id} onClick={toggleCollapse}>\n                    <CardGroupCaret>\n                        <FontAwesomeIcon icon={collapsed ? faCaretRight : faCaretDown} />\n                    </CardGroupCaret>\n                    <CardGroupName>\n                        {/* Highlight any text in the name that matches the search query */}\n                        <Observer>{() => <>{highlightMatches(state.groups[id].name, search)}</>}</Observer>\n                    </CardGroupName>\n                </CardGroupTitle>\n                <div hidden={collapsed}>\n                    <Observer>{() => <>{state.groups[id].cards.map((_, j) => <CardComponent key={j} id={j} groupid={id} search={search} />)}</>}</Observer>\n                </div>\n            </div>\n        </BetterMenuProvider>\n    ));\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Observer } from \"mobx-react-lite\";\nimport React, { ChangeEvent, DragEvent, useContext, useState } from \"react\";\nimport { MenuItemEventHandler, TriggerEvent } from \"react-contexify/lib/types\";\nimport CardGroup from \"../card/cardGroup\";\nimport { GlobalStateContext, Selection, SelectionType } from \"../state\";\nimport { ExplorerAddButton, ExplorerContainer, ExplorerGroups, ExplorerHeader, ExplorerHighlight, ExplorerSearch, ExplorerSearchX, ExporerSearchInput } from \"../styles/explorer\";\nimport { DownloadSelection, loadSelection, textFileReaderAsync } from \"../util/file\";\nimport useIsTop from \"../util/useIsTop\";\nimport CardGroupComponent from \"./CardGroupComponent\";\nimport { BetterMenuProvider } from \"./ContextMenu\";\n\n/** Highlight the matches to the match string */\nexport function highlightMatches(text?: string, match?: string) {\n    // Only spend time spliting if there is a match to look for\n    if (match !== undefined && match !== \"\") {\n        // Split on higlight term and include term into parts, ignore case\n        return text !== undefined && text !== \"\" ?\n            text.split(new RegExp(`(${match.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\")})`, \"gi\"))\n                .map((part, i) => (\n                    // If the part is the same as the search term, give it the class highlight\n                    part.toLowerCase() === match.toLowerCase() ? (\n                        <ExplorerHighlight>\n                            {part}\n                        </ExplorerHighlight>\n                    ) : (\n                            <span key={i}>\n                                {part}\n                            </span>\n                        )\n                )) : undefined;\n    } else {\n        return text;\n    }\n}\n\n/** The args passed to a context menu item when it is clicked */\nexport interface IItemArgs {\n    /** The event that triggered the click */\n    event: TriggerEvent;\n    /** The props passed to the item */\n    props: Selection;\n}\n\n/** The handler type that react-contextify needs */\nexport type ItemHandler<T = void> = (info: MenuItemEventHandler) => T;\n\n/** The explorer view */\nexport default function Explorer() {\n    const [search, setSearch] = useState(\"\");\n    const [isDragOver, setDragOver] = useState(false);\n    const [isTop, onScroll] = useIsTop();\n    const state = useContext(GlobalStateContext);\n\n    const onDragEnter = () => setDragOver(true);\n    const onDragExit = () => setDragOver(false);\n    const onDragOver = (event: DragEvent<HTMLDivElement>) => {\n        event.preventDefault();\n    };\n\n    const onDrop = async (event: DragEvent<HTMLDivElement>) => {\n        event.preventDefault();\n        event.persist();\n\n        setDragOver(false);\n\n        for (let i = 0; i < event.dataTransfer.items.length; i++) {\n            const file = event.dataTransfer.files[i];\n\n            if (file.type === \"application/json\" || file.name.endsWith(\".json\")) {\n                const contents = await textFileReaderAsync(file);\n\n                loadSelection(JSON.parse(contents) as DownloadSelection, state);\n            } else {\n                console.error(`Format \"${file.type}\" unrecognised`);\n            }\n        }\n\n        event.dataTransfer.items.clear();\n    };\n\n    const clearSearch = () => setSearch(\"\");\n    const updateSearch = (e: ChangeEvent<HTMLInputElement>) => setSearch(e.target.value);\n\n    const addGroup = () => {\n        const idx = state.addGroup(new CardGroup(`New Group ${state.groups.length}`));\n        state.select(idx);\n    };\n\n    return (\n        <ExplorerContainer>\n            {/* Search results */}\n            <BetterMenuProvider id=\"none-contextmenu\" selection={{ type: SelectionType.None }}>\n                <ExplorerGroups dragOver={isDragOver} onScroll={onScroll} onDrop={onDrop} onDragEnter={onDragEnter} onDragExit={onDragExit} onDragOver={onDragOver}>\n                    <Observer>{() => <>{state.groups.map((_, i) => <CardGroupComponent key={i} id={i} search={search} />)}</>}</Observer>\n                </ExplorerGroups>\n            </BetterMenuProvider>\n\n            {/* Header */}\n            <ExplorerHeader isTop={isTop}>\n                <ExplorerSearch>\n                    <ExporerSearchInput short={search !== \"\"} value={search} onChange={updateSearch} />\n                    <ExplorerSearchX hidden={search === \"\"} onClick={clearSearch}>\n                        <FontAwesomeIcon icon={faTimes} />\n                    </ExplorerSearchX>\n                </ExplorerSearch>\n                <ExplorerAddButton onClick={addGroup}><FontAwesomeIcon icon={faPlus} /></ExplorerAddButton>\n            </ExplorerHeader>\n        </ExplorerContainer>\n    );\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { UIEvent, useState } from \"react\";\n\n/** Hook to determine if a component is at the top */\nexport default function useIsTop(): [boolean, (event: UIEvent<HTMLDivElement>) => void] {\n    const [isTop, setTop] = useState(true);\n\n    /** Listen for scroll */\n    const onScroll = (event: UIEvent<HTMLDivElement>) => {\n        if (isTop !== (event.currentTarget.scrollTop === 0)) {\n            setTop(event.currentTarget.scrollTop === 0);\n        }\n    };\n\n    return [isTop, onScroll];\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\n/** Check for localhost uri */\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    ) !== null\n);\n\n/** Method to register the service worker */\nexport default function register(setUpdateAvaliable: (is: boolean) => void) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.toString()\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, setUpdateAvaliable);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                        \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\n                    );\n                }).catch(e => console.error(e));\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl, setUpdateAvaliable);\n            }\n        });\n    }\n}\n\n/** Method to register a valid service worker */\nfunction registerValidSW(swUrl: string, setUpdateAvaliable: (is: boolean) => void) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker !== null) {\n                    installingWorker.onstatechange = () => {\n                        if (installingWorker.state === \"installed\") {\n                            if (navigator.serviceWorker.controller !== null) {\n                                // At this point, the old content will have been purged and\n                                // the fresh content will have been added to the cache.\n                                // It's the perfect time to display a 'New content is\n                                // available; please refresh.' message in your web app.\n                                console.log(\"New content is available; please refresh.\");\n                                setUpdateAvaliable(true);\n                            } else {\n                                // At this point, everything has been precached.\n                                // It's the perfect time to display a\n                                // 'Content is cached for offline use.' message.\n                                console.log(\"Content is cached for offline use.\");\n                            }\n                        }\n                    };\n                }\n            };\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\n/** A method to make sure that the service worker exists before usig it */\nfunction checkValidServiceWorker(swUrl: string, setUpdateAvaliable: (is: boolean) => void) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get(\"content-type\")!.indexOf(\"javascript\") === -1 // tslint:disable-line: no-non-null-assertion\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration =>\n                    registration.unregister()\n                        .then(() => {\n                            window.location.reload();\n                        })\n                ).catch(e => console.error(e));\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, setUpdateAvaliable);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\n/** Method to unregister the service worker */\n// ts-unused-exports:disable-next-line\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration =>\n            registration.unregister()\n        ).catch(e => console.error(e));\n    }\n}\n","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport React from \"react\";\nimport ReactModal from \"react-modal\";\nimport { ModalContainer, ModalDangerEmph, ModalDesc, ModalDialog, ModalStyles } from \"./styles/modal\";\n\n/** The props to the rndering modal */\ninterface IRenderingModalProps {\n    /** If the modal should show */\n    show: boolean;\n}\n\n/** The delete confirmation modal */\nexport default function RenderingModal({ show }: IRenderingModalProps) {\n    return (\n        <ReactModal isOpen={show} style={ModalStyles}>\n            <ModalContainer>\n                <ModalDialog>\n                    A rendering task is taking place\n                </ModalDialog>\n                <ModalDesc>\n                    Please <ModalDangerEmph>DO NOT</ModalDangerEmph> leave the page\n                </ModalDesc>\n            </ModalContainer>\n        </ReactModal>\n    );\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { createGlobalStyle } from \"styled-components\";\n\n/** The global styles for all of the app */\nconst GlobalStyles = createGlobalStyle`\n    body,\n    html {\n        margin: 0;\n        padding: 0;\n        font-family: 'Open Sans', sans-serif;\n        overflow: auto;\n        width: 100%;\n        height: 100%;\n    }\n\n    @font-face {\n        font-family: \"Modesto-Expd\";\n        src: url(\"/fonts/Modesto-Expd.woff2\");\n    }\n\n    @font-face {\n        font-family: \"Modesto-Regular\";\n        src: url(\"/fonts/Modesto-Regular.woff2\");\n    }\n`;\n\nexport default GlobalStyles;","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport React from \"react\";\nimport ReactModal from \"react-modal\";\nimport { ModalButton, ModalButtons, ModalContainer, ModalDialog, ModalStyles, ModalSuggestedButton } from \"./styles/modal\";\n\n/** The props to the update modal */\ninterface IUpdateModalProps {\n    /** The has to act on */\n    show: boolean;\n    /** The action to call when a choice is made */\n    doUpdate(update: boolean): void;\n}\n\n/** The delete confirmation modal */\nexport default function UpdateModal({ doUpdate, show }: IUpdateModalProps) {\n    const callDoUpdate = (update: boolean) => () => doUpdate(update);\n\n    return (\n        <ReactModal isOpen={show} style={ModalStyles}>\n            <ModalContainer>\n                <ModalDialog>\n                    There is a new update! You can choose to update now, or ignore the message.\n                </ModalDialog>\n                <ModalButtons>\n                    <ModalSuggestedButton onClick={callDoUpdate(true)}>Update</ModalSuggestedButton>\n                    <ModalButton onClick={callDoUpdate(false)}>Ignore</ModalButton>\n                </ModalButtons>\n            </ModalContainer>\n        </ReactModal>\n    );\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { create } from \"mobx-persist\";\nimport React, { createContext, useContext, useEffect, useRef, useState } from \"react\";\nimport RenderedCards, { IRenderedCardsRef } from \"./card/rendered/RenderedCards\";\nimport Editor from \"./editor/Editor\";\nimport { ExplorerContextMenus } from \"./explorer/ContextMenu\";\nimport DeleteModal from \"./explorer/DeleteModal\";\nimport Explorer from \"./explorer/Explorer\";\nimport register from \"./registerServiceWorker\";\nimport RenderingModal from \"./RenderingModal\";\nimport { GlobalStateContext, Selection, SelectionType } from \"./state\";\nimport { AppContainer } from \"./styles/app\";\nimport { ContextMenuStyles } from \"./styles/contextMenu\";\nimport GlobalStyles from \"./styles/global\";\nimport UpdateModal from \"./UpdateModal\";\n\n/**\n * TODO:\n * - Better layout\n * - Printing (double sided)\n */\n\n/** The context for the rendered cards component */\nexport const RenderedCardsContext = createContext<React.RefObject<IRenderedCardsRef>>({ current: null });\n/** The context for the rendering state */\nexport const IsRenderingContext = createContext<[boolean, (value: boolean) => void]>([false, () => void 0]);\n\n/** The main app component */\nexport default function App() {\n    const state = useContext(GlobalStateContext);\n\n    const [isRendering, setIsRendering] = useState(false);\n\n    const cardsRef = useRef<IRenderedCardsRef>(null);\n\n    // Updates\n    const [updateAvaliable, setUpdateAvaliable] = useState(false);\n    const doUpdate = (update: boolean) => {\n        if (update) {\n            console.log(\"%cUser accepting update, reloading\", \"color: goldenrod\");\n            location.reload(); // eslint-disable-line\n        } else {\n            console.log(\"%cUser ignored update\", \"color: goldenrod\");\n        }\n\n        // Hide prompt\n        setUpdateAvaliable(false);\n    };\n\n    useEffect(() => {\n        // Setup Mobx-Persist\n        const hydrate = create({\n            jsonify: true,\n            storage: localStorage\n        });\n\n        hydrate(\"state\", state);\n\n        // Setup service worker\n        register(setUpdateAvaliable);\n\n        // Disable context menu\n        document.oncontextmenu = (e) => {\n            e.preventDefault();\n        };\n        // eslint-disable-next-line\n    }, []);\n\n    const [deleteSelection, setDeleteSelection] = useState<Selection>({ type: SelectionType.None });\n\n    return (\n        <AppContainer>\n            <RenderedCardsContext.Provider value={cardsRef}>\n                <IsRenderingContext.Provider value={[isRendering, setIsRendering]}>\n                    {/* Global styles */}\n                    <GlobalStyles />\n                    <ContextMenuStyles />\n\n                    {/* The exporer view */}\n                    <Explorer />\n                    <ExplorerContextMenus setDeleteSelection={setDeleteSelection} />\n                    <DeleteModal setDeleteSelection={setDeleteSelection} deleteSelection={deleteSelection} />\n\n                    {/* The editor */}\n                    <Editor />\n\n                    {/* The card renders */}\n                    <RenderedCards ref={cardsRef} />\n\n                    {/* The update modal */}\n                    <UpdateModal doUpdate={doUpdate} show={updateAvaliable} />\n\n                    {/* The rendering modal */}\n                    <RenderingModal show={isRendering} />\n                </IsRenderingContext.Provider>\n            </RenderedCardsContext.Provider>\n        </AppContainer>\n    );\n}\n","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\n// tslint:disable-next-line: no-import-side-effect\nimport \"mobx-react-lite/batchingForReactDom\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ReactModal from \"react-modal\";\nimport App from \"./App\";\n\nReactModal.setAppElement(\"#root\");\n\nReactDOM.render(\n    <App />,\n    document.getElementById(\"root\") as HTMLElement\n);"],"sourceRoot":""}