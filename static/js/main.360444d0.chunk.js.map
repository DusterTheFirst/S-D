{"version":3,"sources":["styles/app.ts","util/image.ts","state.ts","card/cardGroup.ts","styles/renderedCard.ts","util/string.ts","util/file.ts","card/rendered/SVGStyle.tsx","card/rendered/CardBack.tsx","util/wordWrap.ts","card/rendered/CardFront.tsx","card/rendered/RenderedCards.tsx","styles/editor/index.ts","editor/AutoResizeTextArea.tsx","styles/editor/group.ts","editor/GroupSettings.tsx","editor/CardSettings.tsx","editor/Editor.tsx","styles/contextMenu.ts","explorer/ContextMenu.tsx","styles/modal.ts","explorer/DeleteModal.tsx","styles/explorer/index.ts","styles/explorer/cardGroup.ts","styles/explorer/card.ts","explorer/CardComponent.tsx","explorer/CardGroupComponent.tsx","explorer/Explorer.tsx","util/useIsTop.ts","registerServiceWorker.ts","RenderingModal.tsx","styles/global.ts","UpdateModal.tsx","App.tsx","index.tsx"],"names":["AppContainer","styled","div","CardContainer","createImageAsync","src","a","Promise","resolve","reject","image","Image","onload","onerror","canvasToBlobAsync","canvas","toBlob","v","SelectionType","CardGroup","persist","name","defaults","cards","this","_cards","card","length","push","oldpos","newpos","splice","i","key","value","Object","entries","filter","undefined","reduce","pre","k","map","data","observable","action","GlobalState","group","_selection","type","None","Group","Card","selection","_groups","x","GlobalStateContext","createContext","RenderedCard","svg","attrs","fontFamily","height","version","viewBox","width","xmlns","CardText","text","props","fontSize","textAnchor","ExpandedText","bulletLists","replace","hashCode","s","hash","charCodeAt","textFileReaderAsync","file","reader","FileReader","readAsText","_","result","toString","Error","dataFileReaderAsync","readAsDataURL","downloadSelection","filename","saveAs","Blob","JSON","stringify","loadSelection","state","addGroup","fromData","id","select","groups","addCard","alert","SVGStyle","useState","fonts","setFonts","useEffect","all","fetch","then","blob","b","catch","e","console","error","ModestoRegular","ModestoExpd","style","CardBackDyn","useContext","IsRenderingContext","isRendering","useObserver","useMemo","color","fill","y","rx","ry","stroke","strokeWidth","points","fontWeight","level","href","CardImagePreloader","preloadedImages","Map","g","c","has","set","Array","from","values","CardBack","forwardRef","ref","wordWrapSVG","outputElement","split","initialOffset","words","elems","tspanElement","document","createElementNS","textNode","createTextNode","setAttribute","baseVal","valueAsString","attributes","getNamedItem","appendChild","some","textContent","parseFloat","firstChild","len","getComputedTextLength","slice","wordWrapOneLineSVG","CardFront","physComponentsRef","useRef","physComponentsBackgroundRef","descriptionRef","extDescriptionRef","extDescriptionTitleRef","currHeight","physComp","current","physCompBkg","desc","extDesc","extDescTitle","physicalComponents","removeAttribute","description","extDescription","innerHTML","durationConc","duration","toLowerCase","match","durationCap","charAt","toUpperCase","cardlevel","parseInt","cardType","isNaN","j","ordinalSuffixOf","x1","y1","x2","y2","castingTime","range","components","display","dominantBaseline","letterSpacing","clazz","RenderedCards","frontRef","backRef","useImperativeHandle","render","zip","JSZip","ReferenceError","createElement","context","getContext","svgFront","outerHTML","svgBack","encodeURIComponent","imageFront","imageBack","drawImage","RASTER_WIDTH","RASTER_HEIGHT","remove","EditorContainer","EditorValues","EditorEmpty","EditorCenter","EditorTitle","EditorLabel","label","hidden","EditorInput","input","EditorTextArea","textarea","EditorImage","img","AutoResizeTextArea","memo","resize","useCallback","scrollHeight","window","addEventListener","removeEventListener","onKeyUp","GroupSettingsContainer","GroupSettings","onChange","event","editName","currentTarget","CardSettings","imageRef","cardSettings","rawCards","placeholders","cardValueUpdater","editCard","editDefaults","clear","param","fileInput","files","placeholder","min","max","onClick","disabled","alt","accept","Editor","ContextMenuStyles","createGlobalStyle","DangerItem","Item","BetterMenuProvider","children","onContextMenu","preventDefault","stopPropagation","contextMenu","hideAll","setTimeout","show","ExplorerContextMenus","setDeleteSelection","renderedCards","RenderedCardsContext","setIsRendering","downloadClick","toJS","groupsData","addClick","deleteClick","duplicateClick","upClick","moveGroup","moveCard","downClick","upDisable","downDisable","renderClick","preselect","folder","generateAsync","setSelection","groupFolder","ModalStyles","content","background","border","left","maxHeight","maxWidth","minHeight","minWidth","position","top","transform","overlay","ModalContainer","ModalDialog","ModalEmph","span","ModalDesc","ModalDangerEmph","ModalButtons","ModalButton","button","ModalDangerButton","ModalSuggestedButton","DeleteModal","deleteSelection","confirmationMessage","isOpen","removeGroup","removeCard","warn","ExplorerContainer","ExplorerHeader","isTop","ExplorerSearch","ExporerSearchInput","short","ExplorerSearchX","ExplorerAddButton","ExplorerGroups","dragOver","ExplorerHighlight","CardGroupTitle","selected","CardGroupCaret","CardGroupName","CardTitle","cardFilter","includes","CardComponent","groupid","search","highlightMatches","CardGroupComponent","collapsed","setCollapsed","toggleCollapse","icon","faCaretRight","faCaretDown","RegExp","part","Explorer","setSearch","isDragOver","setDragOver","setTop","scrollTop","useIsTop","onScroll","onDrop","dataTransfer","items","endsWith","contents","parse","onDragEnter","onDragExit","onDragOver","target","faTimes","idx","faPlus","isLocalhost","Boolean","location","hostname","register","setUpdateAvaliable","navigator","URL","process","origin","swUrl","response","status","headers","get","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","RenderingModal","GlobalStyles","UpdateModal","doUpdate","callDoUpdate","update","App","cardsRef","updateAvaliable","create","jsonify","storage","localStorage","hydrate","oncontextmenu","Provider","ReactModal","setAppElement","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.360444d0.chunk.js","sourcesContent":["/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport styled from \"styled-components\";\n\n/** The main app container */\nexport const AppContainer = styled.div`\n    position: absolute;\n\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n\n    display: grid;\n    grid-template-columns: 250px auto 300px;\n    grid-template-rows: 100%;\n    grid-column-gap: 3px;\n\n    min-width: 800px;\n    height: 100%;\n    width: 100%;\n\n    background: #202020;\n`;\n\n/** The container for the rendered card views */\nexport const CardContainer = styled.div`\n    grid-column: 3;\n\n    overflow-y: auto;\n    overflow-x: hidden;\n    scrollbar-width: none;\n`;","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\n/** Helper to create and load an image async */\nexport async function createImageAsync(src: string): Promise<HTMLImageElement> {\n    return new Promise((resolve, reject) => {\n        const image = new Image();\n        image.src = src;\n        image.onload = () => resolve(image);\n        image.onerror = reject;\n    });\n}\n\n/** Helper to async create blob from canvas */\nexport async function canvasToBlobAsync(canvas: HTMLCanvasElement): Promise<Blob> {\n    return new Promise((resolve, reject) => {\n        canvas.toBlob((v) => v === null ? reject() : resolve(v), \"image/png\");\n    });\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { action, observable } from \"mobx\";\nimport { persist } from \"mobx-persist\";\nimport { createContext } from \"react\";\nimport CardGroup, { ICardGroupData } from \"./card/cardGroup\";\n\n/** The tag for the selection enum */\nexport enum SelectionType {\n    None = \"none\",\n    Group = \"group\",\n    Card = \"card\",\n}\n\n/** The user's selection */\nexport type Selection = {\n    /** The type of selection */\n    type: SelectionType.None;\n} | {\n    /** The type of selection */\n    type: SelectionType.Group;\n    /** The current selected group */\n    group: number;\n} | {\n    /** The type of selection */\n    type: SelectionType.Card;\n    /** The current selected group */\n    group: number;\n    /** The current selected card */\n    card: number;\n};\n\n/** The global state of the application */\nexport class GlobalState {\n    /** The current selection */\n    @observable @persist(\"object\")\n    private _selection: Selection = { type: SelectionType.None };\n    /** The groups of cards */\n    @observable @persist(\"list\", CardGroup)\n    private readonly _groups: CardGroup[] = [];\n\n    /** The current selection */\n    public get selection(): Selection {\n        return this._selection;\n    }\n\n    /** Select a group and or a card */\n    @action\n    public select(group?: number, card?: number) {\n        if (group === undefined) {\n            this._selection = { type: SelectionType.None };\n        } else if (card === undefined) {\n            this._selection = {\n                group,\n                type: SelectionType.Group\n            };\n        } else {\n            this._selection = {\n                card,\n                group,\n                type: SelectionType.Card\n            };\n        }\n    }\n\n    /** A way to set the selection directly */\n    @action\n    public setSelection(selection: Selection) {\n        this._selection = selection;\n    }\n\n    /** Add a group */\n    @action\n    public addGroup(group: CardGroup) {\n        return this._groups.push(group) - 1;\n    }\n\n    /** Remove a group */\n    @action\n    public removeGroup(group: number) {\n        return this._groups.splice(group, 1)[0];\n    }\n\n    /** Get a group */\n    public get groups() {\n        return this._groups;\n    }\n\n    /** Get a group */\n    public get groupsData(): ICardGroupData[] {\n        return this._groups.map(x => x.data);\n    }\n\n    /** Move a group */\n    @action\n    public moveGroup(oldpos: number, newpos: number) {\n        const [group] = this._groups.splice(oldpos, 1);\n        this._groups.splice(newpos, 0, group);\n    }\n}\n\n/** The global state context */\nexport const GlobalStateContext = createContext(new GlobalState());","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { action, observable } from \"mobx\";\nimport { persist } from \"mobx-persist\";\nimport ICard from \"./card\";\n\n/** The persistant data of a card group */\nexport interface ICardGroupData {\n    /** The name of the group */\n    readonly name: string;\n    /** The defaults for the cards */\n    readonly defaults: Partial<ICard>;\n    /** The child cards of the group */\n    readonly cards: ICard[];\n}\n\n/** The defaults that can be from a card group */\ntype ICardGroupDefaults = Omit<ICard, \"name\">;\n\n/** A group of cards */\nexport default class CardGroup {\n    /** The name of the group */\n    @observable @persist\n    public name: string;\n    /** The defaults for the cards */\n    @observable @persist(\"object\")\n    public defaults: ICardGroupDefaults;\n    /** The child cards of the group */\n    @observable @persist(\"list\")\n    private readonly _cards: ICard[];\n\n    constructor(name = \"\", defaults: ICardGroupDefaults = {}, cards: ICard[] = []) {\n        this.name = name;\n        this._cards = cards;\n        this.defaults = defaults;\n    }\n\n    /** Create a card group from a data object */\n    public static fromData(data: ICardGroupData) {\n        return new CardGroup(data.name, data.defaults, data.cards);\n    }\n\n    /** Method to get the jsonifyable data for the group */\n    public get data(): ICardGroupData {\n        return {\n            cards: this._cards,\n            defaults: this.defaults,\n            name: this.name\n        };\n    }\n\n    /** Add a card to the group */\n    @action\n    public addCard(card: ICard = { name: `New Card ${this._cards.length}` }) {\n        return this._cards.push(card) - 1;\n    }\n\n    /** Move a cards position */\n    @action\n    public moveCard(oldpos: number, newpos: number): this {\n        const [card] = this._cards.splice(oldpos, 1);\n        this._cards.splice(newpos, 0, card);\n\n        return this;\n    }\n\n    /** Get the cards stored in the group */\n    public get cards(): ICard[] {\n        return this._cards.map(card => ({ ...this.defaults, ...card }));\n    }\n\n    /** Get the cards stored in the group without their defaults applied */\n    public get rawCards(): ICard[] {\n        return this._cards;\n    }\n\n    /** Remove a card from the group */\n    @action\n    public removeCard(i: number): ICard {\n        return this._cards.splice(i, 1)[0];\n    }\n\n    /** Change the value of a card in the group */\n    @action\n    public editCard<K extends keyof ICard>(card: number, key: K, value: ICard[K]) {\n        this._cards[card] = Object.entries({ ...this._cards[card], [key]: value })\n            // Remove undefined props\n            .filter(([, v]) => v !== undefined)\n            .reduce<ICard>((pre, [k, v]) => ({ ...pre, [k]: v }), {} as unknown as ICard);\n    }\n\n    /** Change the value of the groups defaults */\n    @action\n    public editDefaults<K extends keyof ICard>(key: K, value: ICard[K]) {\n        this.defaults = Object.entries({ ...this.defaults, [key]: value })\n            // Remove undefined props\n            .filter(([, v]) => v !== undefined)\n            .reduce<Partial<ICard>>((pre, [k, v]) => ({ ...pre, [k]: v }), {});\n    }\n\n    /** Change the value of the groups defaults */\n    @action\n    public editName(name: string) {\n        this.name = name;\n    }\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport styled from \"styled-components\";\n\n/** The view container for the rendered card svg */\nexport const RenderedCard = styled.svg.attrs({\n    fontFamily: \"Modesto\",\n    height: 700,\n    version: \"1.1\",\n    viewBox: \"0 0 50 70\",\n    width: 500,\n    xmlns: \"http://www.w3.org/2000/svg\",\n})`\n    width: 300px;\n    height: calc(300px * 7/5);\n\n    user-select: none;\n`;\n\n/** Text for use on a card */\nexport const CardText = styled.text.attrs(props => ({\n    fontSize: props.fontSize ?? 2,\n    textAnchor: props.textAnchor ?? \"middle\"\n}))``;\n\n/** Text with the expanded font */\nexport const ExpandedText = styled(CardText).attrs({\n    fontFamily: \"Modesto-Expd\"\n})``;","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\n/** Add a suffix to a number */\nexport function ordinalSuffixOf(i: number) {\n    const j = i % 10;\n    const k = i % 100;\n    if (j === 1 && k !== 11) {\n        return `${i}st`;\n    }\n    if (j === 2 && k !== 12) {\n        return `${i}nd`;\n    }\n    if (j === 3 && k !== 13) {\n        return `${i}rd`;\n    } else {\n        return `${i}th`;\n    }\n}\n\n/** Replace `- ` and `* ` with a bullet */\nexport function bulletLists(text: string): string {\n    return text.replace(/^(\\*|-)(?= )/img, \"\\u2022\");\n}\n\n/** Hash a string */\nexport function hashCode(s: string) {\n    let hash = 0;\n    let chr;\n    for (let i = 0; i < s.length; i++) {\n        chr = s.charCodeAt(i);\n        hash = ((hash << 5) - hash) + chr; // tslint:disable-line no-bitwise\n        hash |= 0; // tslint:disable-line no-bitwise // Convert to 32bit integer\n    }\n\n    return hash;\n}\n","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { saveAs } from \"file-saver\";\nimport ICard from \"../card/card\";\nimport CardGroup, { ICardGroupData } from \"../card/cardGroup\";\nimport { GlobalState, SelectionType } from \"../state\";\n\n/** Helper to create a file reader that is async and reads text */\nexport async function textFileReaderAsync(file: Blob) {\n    return new Promise<string>((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsText(file);\n        reader.onload = (_) => {\n            if (reader.result !== null) {\n                resolve(reader.result.toString());\n            } else {\n                reject(new Error(\"No result\"));\n            }\n        };\n        reader.onerror = reject;\n    });\n}\n\n/** Helper that can create a file reaer that is async and reads data */\nexport async function dataFileReaderAsync(file: Blob) {\n    return new Promise<string>((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = (_) => {\n            if (reader.result !== null) {\n                resolve(reader.result.toString());\n            } else {\n                reject(new Error(\"No result\"));\n            }\n        };\n        reader.onerror = reject;\n    });\n}\n\n/** The structure for a downloaded file */\nexport type DownloadSelection = {\n    /** The type of selection */\n    type: SelectionType.None;\n    /** All groups */\n    data: ICardGroupData[];\n} | {\n    /** The type of selection */\n    type: SelectionType.Group;\n    /** The group */\n    data: ICardGroupData;\n} | {\n    /** The type of selection */\n    type: SelectionType.Card;\n    /** The card */\n    data: ICard;\n};\n\n/** Helper to download a file */\nexport function downloadSelection(file: DownloadSelection, filename: string) {\n    saveAs(new Blob([JSON.stringify(file)], { type: \"application/json\" }), filename);\n}\n\n/** Helper to laod a file */\nexport function loadSelection(file: DownloadSelection, state: GlobalState) {\n    if (file.type === SelectionType.None) {\n        for (const group of file.data) {\n            state.addGroup(CardGroup.fromData(group));\n        }\n    } else if (file.type === SelectionType.Group) {\n        const id = state.addGroup(CardGroup.fromData(file.data));\n        state.select(id);\n    } else {\n        if (state.selection.type === SelectionType.Card || state.selection.type === SelectionType.Group) {\n            const id = state.groups[state.selection.group].addCard(file.data);\n            state.select(state.selection.group, id);\n        } else {\n            alert(\"Attempted to add a card when no group is selected\");\n        }\n    }\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport React, { useEffect, useState } from \"react\";\nimport { dataFileReaderAsync } from \"../../util/file\";\n\n/** Style section for the svgs */\nexport default function SVGStyle() {\n    const [fonts, setFonts] = useState<[string, string]>();\n\n    useEffect(() => {\n        Promise.all([\n            fetch(\"/fonts/Modesto-Expd.woff2\").then(x => x.blob()).then(dataFileReaderAsync),\n            fetch(\"/fonts/Modesto-Regular.woff2\").then(x => x.blob()).then(dataFileReaderAsync)\n        ]).then(([a, b]) => {\n            setFonts([a, b]);\n        }).catch(e => console.error(e));\n    }, []);\n\n    if (fonts === undefined) {\n        return null;\n    }\n\n    const [ModestoRegular, ModestoExpd] = fonts;\n\n    const style = `\n        @font-face {\n            font-family: \"Modesto-Expd\";\n            src: url(\"${ModestoRegular}\");\n        }\n\n        @font-face {\n            font-family: \"Modesto-Regular\";\n            src: url(\"${ModestoExpd}\");\n        }\n    `;\n\n    return (\n        <style>{style}</style>\n    );\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { useObserver } from \"mobx-react-lite\";\nimport React, { forwardRef, useContext, useMemo } from \"react\";\nimport { IsRenderingContext } from \"../../App\";\nimport { GlobalStateContext, SelectionType } from \"../../state\";\nimport { RenderedCard } from \"../../styles/renderedCard\";\nimport { hashCode } from \"../../util/string\";\nimport SVGStyle from \"./SVGStyle\";\n\n/** The more dynamic part of the card back */\nfunction CardBackDyn() {\n    const state = useContext(GlobalStateContext);\n    const [isRendering] = useContext(IsRenderingContext);\n\n    const card = useObserver(() =>\n        state.selection.type === SelectionType.Card\n            ? state.groups[state.selection.group].cards[state.selection.card]\n            : state.selection.type === SelectionType.Group\n                ? state.groups[state.selection.group].defaults\n                : { name: \"No Selection\" }\n    );\n    const hash = useMemo(() => hashCode(card.image ?? \"\"), [card.image]);\n\n    return useObserver(() => {\n        const color = card.color ?? \"#000000\";\n\n        return (\n            <>\n                {/* Frame */}\n                <rect width=\"50\" height=\"70\" fill={color} />\n\n                {/* Background */}\n                <rect width=\"46\" height=\"66\" x=\"2\" y=\"2\" rx=\"2\" ry=\"2\" fill=\"white\" />\n\n                {/* Rounded line */}\n                <rect width=\"40\" height=\"60\" x=\"5\" y=\"5\" rx=\"2\" ry=\"2\" stroke={color} strokeWidth=\"0.5\" fill=\"transparent\" />\n\n                {/* Rhombus */}\n                <polyline points=\"5.25,35 25,5.25 45,34.75 25,64.75 5.25,35\" fill=\"transparent\" stroke={color} strokeWidth=\".5\" />\n\n                {/* Card level top right */}\n                <text fontSize=\"10\" fontWeight=\"bold\" fill={color} x=\"38\" y=\"15\" textAnchor=\"middle\">{card.level}</text>\n                {/* Card level bottom left */}\n                <text fontSize=\"10\" fontWeight=\"bold\" fill={color} x=\"12\" y=\"62\" textAnchor=\"middle\">{card.level}</text>\n\n                {/* Card image */}\n                {isRendering ? <image href={card.image} width=\"25\" height=\"25\" x=\"12.5\" y=\"22.5\" /> : <use href={`#${hash}`} />}\n            </>\n        );\n    });\n}\n\n/** A component that contains hidden images to preload them into memory */\nfunction CardImagePreloader() {\n    const state = useContext(GlobalStateContext);\n\n    return useObserver(() => {\n        const preloadedImages = new Map<number, JSX.Element>();\n\n        for (const g of state.groups) {\n            for (const c of g.cards) {\n                if (c.image !== undefined) {\n                    const hash = hashCode(c.image);\n                    if (!preloadedImages.has(hash)) {\n                        preloadedImages.set(hash, <image key={hash} id={hash.toString()} href={c.image} width=\"25\" height=\"25\" x=\"12.5\" y=\"22.5\" />);\n                    }\n                }\n            }\n        }\n\n        return <>{Array.from(preloadedImages.values())}</>;\n    });\n}\n\n/** The back face of the card */\nconst CardBack = forwardRef<SVGSVGElement>((_, ref) => {\n    const [isRendering] = useContext(IsRenderingContext);\n\n    return (\n        <RenderedCard ref={ref}>\n            <defs>\n                {isRendering ? null : <CardImagePreloader />}\n                <SVGStyle />\n            </defs>\n\n            <CardBackDyn />\n        </RenderedCard>\n    );\n});\n\nexport default CardBack;","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\n/** Helper function to achieve word wrapping */\nexport function wordWrapSVG(text: string, width: number, outputElement: SVGTextElement) {\n    return text.replace(\"\\r\", \"\").split(\"\\n\").map((x, i) => wordWrapOneLineSVG(x, width, outputElement, i !== 0)).reduce((a, b) => a + b);\n}\n\n/** Helper Function to wrap one continous line of text in an svg */\nfunction wordWrapOneLineSVG(text: string, width: number, outputElement: SVGTextElement, initialOffset = false) {\n    const words = text.split(\" \");\n    let elems = 0;\n\n    let tspanElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"tspan\");   // Create first tspan element\n    let textNode = document.createTextNode(words[0]);           // Create text in tspan element\n\n    if (initialOffset) {\n        tspanElement.setAttribute(\"x\", outputElement.x.baseVal[0].valueAsString);\n        tspanElement.setAttribute(\"dy\", outputElement.attributes.getNamedItem(\"font-size\")?.value ?? \"\");\n\n        elems++;\n    }\n\n    tspanElement.appendChild(textNode);                     // Add tspan element to DOM\n    outputElement.appendChild(tspanElement);                        // Add text to tspan element\n\n    if (!words.some(x => x.length > 0)) {\n        tspanElement.textContent = \"\\x20\";\n\n        return parseFloat(outputElement.attributes.getNamedItem(\"font-size\")?.value ?? \"0\");\n    }\n\n    for (let i = 1; i < words.length; i++) {\n        if (tspanElement.firstChild === null || tspanElement.firstChild.textContent === null) {\n            console.error(\"TSPAN element has no first child\", tspanElement);\n\n            return elems * parseFloat(outputElement.attributes.getNamedItem(\"font-size\")?.value ?? \"0\");\n        }\n\n        const len = tspanElement.firstChild?.textContent?.length;             // Find number of letters in string\n        tspanElement.firstChild.textContent += ` ${words[i]}`;            // Add next word\n\n        if (tspanElement.getComputedTextLength() > width) {\n            tspanElement.firstChild.textContent = tspanElement.firstChild.textContent.slice(0, len);    // Remove added word\n\n            tspanElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"tspan\");       // Create new tspan element\n            tspanElement.setAttribute(\"x\", outputElement.x.baseVal[0].valueAsString);\n            tspanElement.setAttribute(\"dy\", outputElement.attributes.getNamedItem(\"font-size\")?.value ?? \"\");\n            textNode = document.createTextNode(words[i]);\n\n            tspanElement.appendChild(textNode);\n            outputElement.appendChild(tspanElement);\n\n            elems++;\n        }\n    }\n\n    return elems * parseFloat(outputElement.attributes.getNamedItem(\"font-size\")?.value ?? \"0\");\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { useObserver } from \"mobx-react-lite\";\nimport React, { forwardRef, useContext, useEffect, useRef } from \"react\";\nimport { GlobalStateContext, SelectionType } from \"../../state\";\nimport { CardText, ExpandedText, RenderedCard } from \"../../styles/renderedCard\";\nimport { bulletLists, ordinalSuffixOf } from \"../../util/string\";\nimport { wordWrapSVG } from \"../../util/wordWrap\";\nimport SVGStyle from \"./SVGStyle\";\n\n/** The front face of the card */\nconst CardFront = forwardRef<SVGSVGElement>((_, ref) => {\n    const state = useContext(GlobalStateContext);\n\n    // Refs to wrappable words\n    const physComponentsRef = useRef<SVGTextElement>(null);\n    const physComponentsBackgroundRef = useRef<SVGRectElement>(null);\n    const descriptionRef = useRef<SVGTextElement>(null);\n    const extDescriptionRef = useRef<SVGTextElement>(null);\n    const extDescriptionTitleRef = useRef<SVGGElement>(null);\n\n    // Card selection\n    const card = useObserver(() =>\n        state.selection.type === SelectionType.Card\n            ? state.groups[state.selection.group].cards[state.selection.card]\n            : state.selection.type === SelectionType.Group\n                ? { name: state.groups[state.selection.group].name, ...state.groups[state.selection.group].defaults }\n                : { name: \"No Selection\" }\n    );\n\n    // Apply word wrapping to text\n    useEffect(() => {\n        // Collecctive hight of blocks\n        let currHeight = 0;\n\n        // Aliases for refs\n        const physComp = physComponentsRef.current;\n        const physCompBkg = physComponentsBackgroundRef.current;\n        const desc = descriptionRef.current;\n        const extDesc = extDescriptionRef.current;\n        const extDescTitle = extDescriptionTitleRef.current;\n\n        if (physCompBkg !== null) {\n            if (card.physicalComponents !== undefined && physComp !== null) {\n                const height = wordWrapSVG(bulletLists(card.physicalComponents), 44, physComp);\n\n                physCompBkg.setAttribute(\"height\", (height + 4).toString());\n                physCompBkg.removeAttribute(\"display\");\n\n                currHeight += height + 3.5;\n            } else {\n                physCompBkg.setAttribute(\"display\", \"none\");\n            }\n        }\n\n        if (card.description !== undefined && desc !== null) {\n            desc.setAttribute(\"dy\", currHeight.toString());\n            const height = wordWrapSVG(bulletLists(card.description), 44, desc);\n\n            currHeight += height;\n        }\n\n        if (extDescTitle !== null) {\n            if (card.extDescription !== undefined && extDesc !== null) {\n                const height = wordWrapSVG(bulletLists(card.extDescription), 44, extDesc);\n                extDesc.setAttribute(\"y\", (65 - height).toString());\n                extDescTitle.setAttribute(\"transform\", `translate(0, ${(62 - height)})`);\n                extDescTitle.removeAttribute(\"display\");\n            } else {\n                extDescTitle.setAttribute(\"display\", \"none\");\n            }\n        }\n\n        return () => {\n            if (physComp !== null) {\n                physComp.innerHTML = \"\";\n            }\n            if (desc !== null) {\n                desc.innerHTML = \"\";\n            }\n            if (extDesc !== null) {\n                extDesc.innerHTML = \"\";\n            }\n        };\n    }, [\n        card,\n        descriptionRef,\n        extDescriptionRef,\n        extDescriptionTitleRef,\n        physComponentsBackgroundRef,\n        physComponentsRef\n    ]);\n\n    return useObserver(() => {\n        const durationConc = card.duration !== undefined && card.duration.toLowerCase().match(/^concentration(,)? /) !== null;\n        const duration = durationConc ? card.duration?.replace(/^concentration(,)? /i, \"\") : card.duration;\n        const durationCap = `${duration?.charAt(0).toUpperCase() ?? \"\"}${duration?.slice(1) ?? \"\"}`;\n\n        const cardlevel = parseInt(card.level !== undefined ? card.level : \"0\", 10);\n        const cardType = !isNaN(cardlevel) ? cardlevel === 0 ? `${card.type} cantrip` : `${ordinalSuffixOf(cardlevel)} level ${card.type}` : undefined;\n\n        const color = card.color ?? \"#000000\";\n\n        return (\n            <RenderedCard ref={ref}>\n                <defs>\n                    <SVGStyle />\n                </defs>\n                {/* Frame */}\n                <rect width=\"50\" height=\"70\" fill={color} />\n                {/* Background */}\n                <rect width=\"46\" height=\"64\" x=\"2\" y=\"2\" rx=\"2\" ry=\"2\" fill=\"white\" />\n\n                {/* Sections */}\n                <line x1=\"0\" y1=\"9\" x2=\"50\" y2=\"9\" stroke={color} strokeWidth=\".3\" />\n                <line x1=\"0\" y1=\"16\" x2=\"50\" y2=\"16\" stroke={color} strokeWidth=\".3\" />\n                <line x1=\"0\" y1=\"23\" x2=\"50\" y2=\"23\" stroke={color} strokeWidth=\".3\" />\n                <line x1=\"25\" y1=\"9\" x2=\"25\" y2=\"23\" stroke={color} strokeWidth=\".3\" />\n\n                {/* Title */}\n                <ExpandedText fontSize=\"4\" x=\"25\" y=\"6.75\">{card.name}</ExpandedText>\n\n                {/* Casting Time */}\n                <ExpandedText fill={color} x=\"13.5\" y=\"12\">CASTING TIME</ExpandedText>\n                <CardText x=\"13.5\" y=\"14.6\">{card.castingTime}</CardText>\n\n                {/* Range */}\n                <ExpandedText fill={color} x=\"36.5\" y=\"12\">RANGE</ExpandedText>\n                <CardText x=\"36.5\" y=\"14.6\" >{card.range}</CardText>\n\n                {/* Components */}\n                <ExpandedText fill={color} x=\"13.5\" y=\"19\" >COMPONENTS</ExpandedText>\n                <CardText x=\"13.5\" y=\"21.6\">{card.components}</CardText>\n\n                {/* Duration */}\n                <ExpandedText fill={color} x=\"36.5\" y=\"19\" >DURATION</ExpandedText>\n                <CardText x=\"36.5\" y=\"21.6\" >{durationCap}</CardText>\n                {/* Duration Concentration */}\n                <g display={durationConc ? undefined : \"none\"}>\n                    <polygon points=\"45.5,17 43.5,19.5 45.5,22 47.5,19.5 45.5,17\" fill={color} />\n                    <ExpandedText x=\"45.5\" y=\"19.5\" dominantBaseline=\"middle\" fill=\"#ffffff\">C</ExpandedText>\n                </g>\n\n                {/* Physical Components */}\n                <rect width=\"50\" height=\"3.5\" y=\"23\" fill={color} ref={physComponentsBackgroundRef} />\n                <CardText x=\"3\" y=\"25.6\" ref={physComponentsRef} fill=\"#ffffff\" textAnchor=\"right\" />\n                {/* Description */}\n                <CardText x=\"3\" y=\"25.5\" ref={descriptionRef} textAnchor=\"right\" />\n                {/* Extended Description */}\n                <g ref={extDescriptionTitleRef}>\n                    <rect width=\"50\" height=\"3.5\" y=\"-3\" fill={color} />\n                    <CardText fontWeight=\"bold\" letterSpacing=\".1\" y=\"-.4\" x=\"25\" fill=\"#ffffff\">At Higher Levels</CardText>\n                </g>\n                <CardText x=\"3\" ref={extDescriptionRef} textAnchor=\"right\" />\n\n                {/* Card class */}\n                <ExpandedText fill=\"white\" x=\"2.5\" y=\"68.5\" textAnchor=\"left\">{card.clazz}</ExpandedText>\n                {/* Card type */}\n                <CardText fill=\"white\" x=\"48\" y=\"68.5\" textAnchor=\"end\">{cardType}</CardText>\n            </RenderedCard>\n        );\n    });\n});\n\nexport default CardFront;","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport JSZip from \"jszip\";\nimport React, { forwardRef, useImperativeHandle, useRef } from \"react\";\nimport { CardContainer } from \"../../styles/app\";\nimport { canvasToBlobAsync, createImageAsync } from \"../../util/image\";\nimport CardBack from \"./CardBack\";\nimport CardFront from \"./CardFront\";\n\n/** The width of the resulting rasters */\nconst RASTER_WIDTH = 1500;\n/** The height of the resulting rasters */\nconst RASTER_HEIGHT = 2100;\n\n/** The ref exposed by thr Rendered Cards component */\nexport interface IRenderedCardsRef {\n    /** Render/Rasterize the cards */\n    render(zip?: JSZip): Promise<JSZip>;\n}\n\n/** The rendered cards container and manager */\nconst RenderedCards = forwardRef<IRenderedCardsRef>((_, ref) => {\n    const frontRef = useRef<SVGSVGElement>(null);\n    const backRef = useRef<SVGSVGElement>(null);\n\n    useImperativeHandle<IRenderedCardsRef, IRenderedCardsRef>(ref, () => ({\n        render: async (zip = new JSZip()) => {\n            // Make sure the svgs are actually rendered\n            if (frontRef.current === null || backRef.current === null) {\n                throw new ReferenceError(\"Attempted to render while the card was not rendered, please try again.\");\n            }\n\n            // Create the rasterizing canvas\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = RASTER_WIDTH;\n            canvas.height = RASTER_HEIGHT;\n            // Get the rendering context\n            const context = canvas.getContext(\"2d\");\n\n            // Make sure the context exists\n            if (context === null) {\n                throw new ReferenceError(\"Could not load canvas 2d context\");\n            }\n\n            // Setup exportable svg for the sides\n            const svgFront = `<?xml version=\"1.0\" encoding=\"utf-8\"?>${frontRef.current.outerHTML}`;\n            const svgBack = `<?xml version=\"1.0\" encoding=\"utf-8\"?>${backRef.current.outerHTML}`;\n\n            // Save the vector images\n            zip.file(\"front.svg\", svgFront);\n            zip.file(\"back.svg\", svgBack);\n\n            // Create rasterable Image objects from the svg\n            const imageFront = await createImageAsync(`data:image/svg+xml;utf8,${encodeURIComponent(svgFront)}`);\n            const imageBack = await createImageAsync(`data:image/svg+xml;utf8,${encodeURIComponent(svgBack)}`);\n\n            // Rasterize the front of the card\n            context?.drawImage(imageFront, 0, 0, RASTER_WIDTH, RASTER_HEIGHT);\n            zip.file(\"front.png\", await canvasToBlobAsync(canvas));\n\n            // Rasterize the back of the card\n            context?.drawImage(imageBack, 0, 0, RASTER_WIDTH, RASTER_HEIGHT);\n            zip.file(\"back.png\", await canvasToBlobAsync(canvas));\n\n            // Rasterize the sides in a row formation\n            canvas.width = RASTER_WIDTH * 2;\n            canvas.height = RASTER_HEIGHT;\n            context?.drawImage(imageFront, 0, 0, RASTER_WIDTH, RASTER_HEIGHT);\n            context?.drawImage(imageBack, RASTER_WIDTH, 0, RASTER_WIDTH, RASTER_HEIGHT);\n            zip.file(\"row.png\", await canvasToBlobAsync(canvas));\n\n            // Rasterize the sides in a column formation\n            canvas.width = RASTER_WIDTH;\n            canvas.height = RASTER_HEIGHT * 2;\n            context?.drawImage(imageFront, 0, 0, RASTER_WIDTH, RASTER_HEIGHT);\n            context?.drawImage(imageBack, 0, RASTER_HEIGHT, RASTER_WIDTH, RASTER_HEIGHT);\n            zip.file(\"column.png\", await canvasToBlobAsync(canvas));\n\n            // Remove the canvas from the DOM\n            canvas.remove();\n\n            // Return the packaged zip\n            return zip;\n        }\n    }));\n\n    return (\n        <CardContainer>\n            <CardFront ref={frontRef} />\n            <CardBack ref={backRef} />\n        </CardContainer>\n    );\n});\n\nexport default RenderedCards;","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport styled from \"styled-components\";\n\n/** The container for the editor */\nexport const EditorContainer = styled.div`\n    background: #313131;\n    color: #cccccc;\n\n    padding: 15px 10px;\n\n    min-height: calc(100% - 30px);\n    overflow: auto;\n`;\n\n/** The values section of the editor */\nexport const EditorValues = styled.div`\n    padding-bottom: 20px;\n`;\n\n/** The empty editor view */\nexport const EditorEmpty = styled.div`\n    height: 100%;\n    width: 100%;\n    position: relative;\n\n    color: white;\n    background-color: #696969;\n`;\n\n/** The centered text in the editor */\nexport const EditorCenter = styled.div`\n    position: absolute;\n    top: 50%;\n    width: 100%;\n    text-align: center;\n\n    transform: translateY(-50%);\n`;\n\n/** A title for the editor */\nexport const EditorTitle = styled.div`\n    font-weight: bold;\n    font-size: 25px;\n\n    border-bottom: solid 1px #cccccc;\n    padding-bottom: 3px;\n    margin-bottom: 10px;\n`;\n\n/** A label for an editor value */\nexport const EditorLabel = styled.label`\n    font-weight: bold;\n    display: ${props => props.hidden === true ? \"none\" : \"block\"};\n    user-select: none;\n\n    &:hover > input,\n    &:hover > textarea {\n        border-bottom: solid 1px #777777;\n    }\n`;\n\n/** The editor input for a value */\nexport const EditorInput = styled.input`\n    user-select: contain;\n\n    font-weight: normal;\n    background: #00000080;\n    color: #cccccc;\n    border: solid 1px transparent;\n\n    padding: 2px 5px;\n\n    display: block;\n\n    width: calc(100% - 20px);\n\n    &:focus {\n        outline: none;\n        border-bottom: solid 1px #cccccc;\n    }\n`;\n\n/** The editor input for a value */\nexport const EditorTextArea = styled.textarea`\n    user-select: contain;\n    resize: none;\n\n    font-weight: normal;\n    background: #00000080;\n    color: #cccccc;\n    border: solid 1px transparent;\n\n    padding: 2px 5px;\n\n    display: block;\n\n    width: calc(100% - 20px);\n\n    &:focus {\n        outline: none;\n        border-bottom: solid 1px #cccccc;\n    }\n`;\n\n/** An image in the editor */\nexport const EditorImage = styled.img`\n    max-height: 50px;\n    display: block;\n`;","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport React, { memo, useCallback, useEffect, useRef } from \"react\";\nimport { EditorTextArea } from \"../styles/editor\";\n\n/** A text area that resizes when it overflows */\nconst AutoResizeTextArea = memo((props: React.DetailedHTMLProps<React.TextareaHTMLAttributes<HTMLTextAreaElement>, HTMLTextAreaElement>) => {\n    const ref = useRef<HTMLTextAreaElement>(null);\n\n    const resize = useCallback(() => {\n        if (ref.current === null) {\n            return;\n        }\n\n        ref.current.style.height = \"1px\";\n        ref.current.style.height = `${ref.current.scrollHeight}px`;\n    }, [ref]);\n\n    useEffect(() => {\n        resize();\n\n        window.addEventListener(\"resize\", resize);\n\n        return () => window.removeEventListener(\"resize\", resize);\n    }, [resize, props.value]);\n\n    return <EditorTextArea {...props} ref={ref} onKeyUp={resize} />;\n});\n\nexport default AutoResizeTextArea;","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport styled from \"styled-components\";\n\n/** The container for the group settings */\nexport const GroupSettingsContainer = styled.div`\n    margin-bottom: 20px;\n`;","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { useObserver } from \"mobx-react-lite\";\nimport React, { useContext } from \"react\";\nimport { GlobalStateContext, SelectionType } from \"../state\";\nimport { EditorInput, EditorLabel, EditorTitle } from \"../styles/editor\";\nimport { GroupSettingsContainer } from \"../styles/editor/group\";\n\n/** The group settings part */\nexport default function GroupSettings() {\n    const state = useContext(GlobalStateContext);\n\n    return useObserver(() => {\n        if (state.selection.type !== SelectionType.Group) {\n            return null;\n        }\n\n        const id = state.selection.group;\n        const update = (event: React.FormEvent<HTMLInputElement>) => {\n            state.groups[id].editName(event.currentTarget.value);\n        };\n\n        return (\n            <GroupSettingsContainer>\n                <EditorTitle>Group settings</EditorTitle>\n                <EditorLabel>\n                    Name:\n                    <EditorInput type=\"text\" value={state.groups[state.selection.group].name ?? \"\"} onChange={update} />\n                </EditorLabel>\n            </GroupSettingsContainer>\n        );\n    });\n}\n","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { useObserver } from \"mobx-react-lite\";\nimport React, { useContext, useRef } from \"react\";\nimport ICard from \"../card/card\";\nimport { GlobalStateContext, SelectionType } from \"../state\";\nimport { EditorImage, EditorInput, EditorLabel, EditorTitle, EditorValues } from \"../styles/editor\";\nimport { dataFileReaderAsync } from \"../util/file\";\nimport AutoResizeTextArea from \"./AutoResizeTextArea\";\nimport GroupSettings from \"./GroupSettings\";\n\n/** The CardSettings section */\nexport default function CardSettings() {\n    const state = useContext(GlobalStateContext);\n    const imageRef = useRef<HTMLInputElement>(null);\n\n    return useObserver(() => {\n        const cardSettings =\n            state.selection.type === SelectionType.Card\n                ? state.groups[state.selection.group].rawCards[state.selection.card]\n                : state.selection.type === SelectionType.Group\n                    ? { name: state.groups[state.selection.group].name, ...state.groups[state.selection.group].defaults }\n                    : { name: \"No Selection\" };\n        const placeholders = state.selection.type === SelectionType.Card ? state.groups[state.selection.group].defaults : undefined;\n\n        /** Update the internal cache values of a text value */\n        const cardValueUpdater = (name: keyof ICard) => {\n            return (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n                event.persist();\n\n                if (state.selection.type === SelectionType.Card) {\n                    state.groups[state.selection.group].editCard(state.selection.card, name, event.currentTarget.value === \"\" && name !== \"name\" ? undefined : event.currentTarget.value);\n                } else if (state.selection.type === SelectionType.Group) {\n                    state.groups[state.selection.group].editDefaults(name, event.currentTarget.value === \"\" ? undefined : event.currentTarget.value);\n                }\n            };\n        };\n\n        const clear = (param: keyof ICard) => () => {\n            if (state.selection.type === SelectionType.Card) {\n                state.groups[state.selection.group].editCard(state.selection.card, param, undefined);\n            } else if (state.selection.type === SelectionType.Group) {\n                state.groups[state.selection.group].editDefaults(param, undefined);\n            }\n        };\n\n        const fileInput = async (event: React.FormEvent<HTMLInputElement>) => {\n            event.persist();\n\n            if (state.selection.type === SelectionType.Card) {\n                if (imageRef.current !== null) {\n                    let image: string | undefined;\n\n                    if (imageRef.current.files !== null) {\n                        image = await dataFileReaderAsync(imageRef.current.files[0]);\n                    }\n\n                    state.groups[state.selection.group].editCard(state.selection.card, \"image\", image);\n                }\n            } else if (state.selection.type === SelectionType.Group) {\n                if (imageRef.current !== null) {\n                    let image: string | undefined;\n\n                    if (imageRef.current.files !== null) {\n                        image = await dataFileReaderAsync(imageRef.current.files[0]);\n                    }\n\n                    state.groups[state.selection.group].editDefaults(\"image\", image);\n                }\n            }\n        };\n\n        return (\n            <EditorValues>\n                <GroupSettings />\n                <EditorTitle>Card Settings</EditorTitle>\n                <EditorLabel hidden={state.selection.type === SelectionType.Group}>\n                    Name:\n                    <EditorInput type=\"text\" value={cardSettings.name ?? \"\"} onChange={cardValueUpdater(\"name\")} />\n                </EditorLabel>\n                <EditorLabel>\n                    Casting Time:\n                    <EditorInput type=\"text\" value={cardSettings.castingTime ?? \"\"} onChange={cardValueUpdater(\"castingTime\")} placeholder={placeholders?.castingTime} />\n                </EditorLabel>\n                <EditorLabel>\n                    Range:\n                    <EditorInput type=\"text\" value={cardSettings.range ?? \"\"} onChange={cardValueUpdater(\"range\")} placeholder={placeholders?.range} />\n                </EditorLabel>\n                <EditorLabel>\n                    Components:\n                    <EditorInput type=\"text\" value={cardSettings.components ?? \"\"} onChange={cardValueUpdater(\"components\")} placeholder={placeholders?.components ?? \"\"} />\n                </EditorLabel>\n                <EditorLabel>\n                    Duration:\n                    <EditorInput type=\"text\" value={cardSettings.duration ?? \"\"} onChange={cardValueUpdater(\"duration\")} placeholder={placeholders?.duration} />\n                </EditorLabel>\n                <EditorLabel>\n                    Physical Components:\n                    <AutoResizeTextArea value={cardSettings.physicalComponents ?? \"\"} onChange={cardValueUpdater(\"physicalComponents\")} placeholder={placeholders?.physicalComponents} />\n                </EditorLabel>\n                <EditorLabel>\n                    Description:\n                    <AutoResizeTextArea value={cardSettings.description ?? \"\"} onChange={cardValueUpdater(\"description\")} placeholder={placeholders?.description} />\n                </EditorLabel>\n                <EditorLabel>\n                    Extended Description:\n                    <AutoResizeTextArea value={cardSettings.extDescription ?? \"\"} onChange={cardValueUpdater(\"extDescription\")} placeholder={placeholders?.extDescription} />\n                </EditorLabel>\n                <EditorLabel>\n                    Class:\n                    <EditorInput type=\"text\" value={cardSettings.clazz ?? \"\"} onChange={cardValueUpdater(\"clazz\")} placeholder={placeholders?.clazz} />\n                </EditorLabel>\n                <EditorLabel>\n                    Type:\n                    <EditorInput type=\"text\" value={cardSettings.type ?? \"\"} onChange={cardValueUpdater(\"type\")} placeholder={placeholders?.type} />\n                </EditorLabel>\n                <EditorLabel>\n                    Level:\n                    <EditorInput type=\"number\" min={0} max={99} value={cardSettings.level ?? \"\"} onChange={cardValueUpdater(\"level\")} placeholder={placeholders?.level === undefined ? undefined : placeholders?.level?.toString()} />\n                </EditorLabel>\n                <EditorLabel>\n                    Color:\n                    <EditorInput type=\"color\" value={cardSettings.color ?? \"\"} onChange={cardValueUpdater(\"color\")} placeholder={placeholders?.color} />\n                    <button onClick={clear(\"color\")} disabled={cardSettings.color === undefined}>Clear Color</button>\n                </EditorLabel>\n                <EditorLabel>\n                    Image:\n                    <EditorImage src={cardSettings.image} alt=\"Group Default\" />\n                    <EditorInput type=\"file\" accept=\"image/*\" onChange={fileInput} ref={imageRef} />\n                    <button onClick={clear(\"image\")} disabled={cardSettings.image === undefined}>Remove Image</button>\n                </EditorLabel>\n            </EditorValues>\n        );\n    });\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { useObserver } from \"mobx-react-lite\";\nimport React, { useContext } from \"react\";\nimport { GlobalStateContext, SelectionType } from \"../state\";\nimport { EditorCenter, EditorContainer, EditorEmpty } from \"../styles/editor\";\nimport CardSettings from \"./CardSettings\";\n\n/** The editor component */\nexport default function Editor() {\n    const state = useContext(GlobalStateContext);\n\n    return useObserver(() => {\n        if (state.selection.type !== SelectionType.None) {\n            return (\n                <EditorContainer>\n                    <CardSettings />\n                </EditorContainer>\n            );\n        } else {\n            return (\n                <EditorEmpty>\n                    <EditorCenter>You have nothing selected</EditorCenter>\n                </EditorEmpty>\n            );\n        }\n    });\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { Item } from \"react-contexify\";\nimport styled, { createGlobalStyle } from \"styled-components\";\n\n/** Global styles for the context menu */\nexport const ContextMenuStyles = createGlobalStyle`\n    .react-contexify {\n        position: fixed;\n        opacity: 0;\n        user-select: none;\n        box-sizing: border-box;\n\n        padding: 10px 10px;\n        background-color: #1a1a1a;\n        box-shadow: 5px 5px 15px #00000066;\n\n        border-radius: 3px;\n\n        cursor: pointer;\n\n        & &__submenu {\n            position: absolute;\n            top: 0;\n            pointer-events: none;\n            transition: opacity 0.275s;\n\n            background-color: #282828fa;\n        }\n\n        &__submenu-arrow {\n            font-size: 12px;\n            position: absolute;\n            right: 10px;\n            line-height: 22px;\n        }\n\n        &__separator {\n            float: left;\n            width: 100%;\n            height: 1px;\n            cursor: default;\n            margin: 4px 0;\n\n            background-color: #666666;\n        }\n\n        &__item {\n            font-size: 14px;\n\n            color: #b8b8b8;\n            font-weight: bold;\n\n            cursor: pointer;\n            position: relative;\n\n            &:not(&--disabled):hover > &__data {\n                color: inherit;\n                background-color: #313131;\n            }\n\n            &:not(&--disabled):hover > .react-contexify__submenu {\n                pointer-events: initial;\n                opacity: 1;\n            }\n\n            &--disabled {\n                cursor: default;\n                opacity: .5;\n            }\n\n            &__data {\n                min-width: 100px;\n                padding: 6px 12px;\n                display: flex;\n                text-align: left;\n                white-space: nowrap;\n                color: inherit;\n                position: relative;\n            }\n\n            &__icon {\n                font-size: 20px;\n                margin-right: 8px;\n                width: 12px;\n                text-align: center;\n            }\n        }\n    }\n`;\n\n/** An item that does a dangerous action */\nexport const DangerItem = styled(Item)`\n    color: #f04747 !important;\n`;","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport JSZip from \"jszip\";\nimport { toJS } from \"mobx\";\nimport { useObserver } from \"mobx-react-lite\";\nimport React, { MouseEvent, PropsWithChildren, useContext } from \"react\";\nimport { contextMenu, Item, Menu, Separator } from \"react-contexify\";\nimport { IsRenderingContext, RenderedCardsContext } from \"../App\";\nimport CardGroup from \"../card/cardGroup\";\nimport { GlobalStateContext, Selection, SelectionType } from \"../state\";\nimport { DangerItem } from \"../styles/contextMenu\";\nimport { downloadSelection } from \"../util/file\";\nimport { IItemArgs, ItemHandler } from \"./Explorer\";\n\n/** Props to the better menu provider component */\ninterface IBMPProps {\n    /** The id of the context menu */\n    id: string;\n    /** The selection that the menu should act upon */\n    selection: Selection;\n}\n\n/** A better menu provider */\nexport function BetterMenuProvider({ id, children, selection }: PropsWithChildren<IBMPProps>) {\n    const rightClick = (event: MouseEvent) => {\n        event.preventDefault();\n        event.stopPropagation();\n        event.persist();\n\n        contextMenu.hideAll();\n        setTimeout(() => contextMenu.show({\n            event,\n            id,\n            props: selection\n        }), 1);\n    };\n\n    const leftClick = (_: MouseEvent) => {\n        contextMenu.hideAll();\n    };\n\n    return (\n        <div onContextMenu={rightClick} onClick={leftClick}>\n            {children}\n        </div>\n    );\n}\n\n/** Props for the Explorer context menus */\ninterface IECMProps {\n    /** State changer for delete selection */\n    setDeleteSelection(val: Selection): void;\n}\n\n/** The context menus for the explorer */\nexport function ExplorerContextMenus({ setDeleteSelection }: IECMProps) {\n    const state = useContext(GlobalStateContext);\n    const renderedCards = useContext(RenderedCardsContext);\n    const [, setIsRendering] = useContext(IsRenderingContext);\n\n    return useObserver(() => {\n        const downloadClick = (({ props }: IItemArgs) => {\n            if (props.type === SelectionType.Group) {\n                const group = state.groups[props.group];\n\n                downloadSelection({ type: SelectionType.Group, data: group.data }, `${group.name}.group.json`);\n            } else if (props.type === SelectionType.Card) {\n                const card = state.groups[props.group].cards[props.card];\n\n                downloadSelection({ type: SelectionType.Card, data: card }, `${card.name}.card.json`);\n            } else {\n                downloadSelection({ type: SelectionType.None, data: toJS(state.groupsData) }, `workspace.json`);\n            }\n        }) as unknown as ItemHandler;\n\n        const addClick = (({ props }: IItemArgs) => {\n            if (props.type === SelectionType.Group) {\n                const id = state.groups[props.group].addCard();\n                state.select(props.group, id);\n            } else if (props.type === SelectionType.None) {\n                const id = state.addGroup(new CardGroup(`New Group ${state.groups.length}`));\n                state.select(id);\n            }\n        }) as unknown as ItemHandler;\n\n        const editClick = (({ props }: IItemArgs) => {\n            if (props.type === SelectionType.Group) {\n                state.select(props.group);\n            }\n        }) as unknown as ItemHandler;\n\n        const editDisable = (({ props }: IItemArgs) => {\n            // Disable the edit button if this card is already selected\n            return props.type === SelectionType.Group && state.selection.type === SelectionType.Group && state.selection.group === props.group;\n        }) as unknown as ItemHandler<boolean>;\n\n        const deleteClick = (({ props }: IItemArgs) => setDeleteSelection(props)) as unknown as ItemHandler;\n\n        const duplicateClick = (({ props }: IItemArgs) => {\n            if (props.type === SelectionType.Group) {\n                const id = state.addGroup(state.groups[props.group]);\n\n                state.select(id);\n            } else if (props.type === SelectionType.Card) {\n                const group = state.groups[props.group];\n                const id = group.addCard(group.rawCards[props.card]);\n\n                state.select(props.group, id);\n            }\n        }) as unknown as ItemHandler;\n\n        const upClick = (({ props }: IItemArgs) => {\n            if (props.type === SelectionType.Group) {\n                state.moveGroup(props.group, props.group - 1);\n                state.select(props.group - 1);\n            } else if (props.type === SelectionType.Card) {\n                state.groups[props.group].moveCard(props.card, props.card - 1);\n                state.select(props.group, props.card - 1);\n            }\n        }) as unknown as ItemHandler;\n\n        const downClick = (({ props }: IItemArgs) => {\n            if (props.type === SelectionType.Group) {\n                state.moveGroup(props.group, props.group + 1);\n                state.select(props.group + 1);\n            } else if (props.type === SelectionType.Card) {\n                state.groups[props.group].moveCard(props.card, props.card + 1);\n                state.select(props.group, props.card + 1);\n            }\n        }) as unknown as ItemHandler;\n\n        const upDisable = (({ props }: IItemArgs): boolean => {\n            if (props.type === SelectionType.Group) {\n                return props.group === 0;\n            } else if (props.type === SelectionType.Card) {\n                return props.card === 0;\n            } else {\n                return true;\n            }\n        }) as unknown as ItemHandler<boolean>;\n\n        const downDisable = (({ props }: IItemArgs): boolean => {\n            if (props.type === SelectionType.Group) {\n                return props.group === state.groups.length - 1;\n            } else if (props.type === SelectionType.Card) {\n                return props.card === state.groups[props.group].cards.length - 1;\n            } else {\n                return true;\n            }\n        }) as unknown as ItemHandler<boolean>;\n\n        const deselect = () => {\n            state.select();\n        };\n\n        const renderClick = (async ({ props }: IItemArgs) => {\n            if (renderedCards.current === null) {\n                return;\n            }\n\n            setIsRendering(true);\n\n            if (props.type === SelectionType.Group) {\n                // Save the previous selection\n                const preselect = state.selection;\n\n                // Create zip file\n                const render = new JSZip();\n\n                for (let card = 0; card < state.groups[props.group].cards.length; card++) {\n                    // Select and render the current card\n                    state.select(props.group, card);\n\n                    // Render and export the cards into a new zip file\n                    await renderedCards.current.render(render.folder(state.groups[props.group].cards[card].name));\n                }\n\n                // Save the zip file\n                saveAs(await render.generateAsync({ type: \"blob\" }), state.groups[props.group].name);\n\n                // Return selection\n                state.setSelection(preselect);\n            } else if (props.type === SelectionType.Card) {\n                // Save the previous selection\n                const preselect = state.selection;\n\n                // Select and render the current card\n                state.select(props.group, props.card);\n\n                // Render and export the cards into a new zip file\n                const render = await renderedCards.current.render();\n\n                // Save the zip file\n                saveAs(await render.generateAsync({ type: \"blob\" }), state.groups[props.group].cards[props.card].name);\n\n                // Return selection\n                state.setSelection(preselect);\n            } else {\n                // Save the previous selection\n                const preselect = state.selection;\n\n                // Create zip file\n                const render = new JSZip();\n\n                for (let group = 0; group < state.groups.length; group++) {\n                    const groupFolder = render.folder(state.groups[group].name);\n\n                    for (let card = 0; card < state.groups[group].cards.length; card++) {\n                        // Select and render the current card\n                        state.select(group, card);\n\n                        // Render and export the cards into a new zip file\n                        await renderedCards.current.render(groupFolder.folder(state.groups[group].cards[card].name));\n                    }\n                }\n\n                // Save the zip file\n                saveAs(await render.generateAsync({ type: \"blob\" }), \"workspace\");\n\n                // Return selection\n                state.setSelection(preselect);\n            }\n\n            setIsRendering(false);\n        }) as unknown as ItemHandler;\n\n        return (\n            <>\n                <Menu id=\"none-contextmenu\">\n                    <Item onClick={addClick}>Add Group</Item>\n                    <Separator />\n                    <Item onClick={deselect}>Deselect All</Item>\n                    <Separator />\n                    <Item onClick={downloadClick}>Download All</Item>\n                    <Item onClick={renderClick}>Render All</Item>\n                    <Item disabled={true}>Print All</Item>\n                </Menu>\n                <Menu id=\"group-contextmenu\">\n                    <Item onClick={editClick} disabled={editDisable}>Edit</Item>\n                    <Item onClick={addClick}>Add Card</Item>\n                    <Item onClick={duplicateClick}>Duplicate</Item>\n                    <Separator />\n                    <Item onClick={upClick} disabled={upDisable}>Move Up</Item>\n                    <Item onClick={downClick} disabled={downDisable}>Move Down</Item>\n                    <Separator />\n                    <Item onClick={downloadClick}>Download Group</Item>\n                    <Item onClick={renderClick}>Render Group</Item>\n                    <Item disabled={true}>Print Group</Item>\n                    <Separator />\n                    <DangerItem onClick={deleteClick}>Delete</DangerItem>\n                </Menu>\n                <Menu id=\"card-contextmenu\">\n                    <Item onClick={duplicateClick}>Duplicate</Item>\n                    <Separator />\n                    <Item onClick={upClick} disabled={upDisable}>Move Up</Item>\n                    <Item onClick={downClick} disabled={downDisable}>Move Down</Item>\n                    <Separator />\n                    <Item onClick={downloadClick}>Download Card</Item>\n                    <Item onClick={renderClick}>Render Card</Item>\n                    <Item disabled={true}>Print Card</Item>\n                    <Separator />\n                    <DangerItem onClick={deleteClick}>Delete</DangerItem>\n                </Menu>\n            </>\n        );\n    });\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport styled from \"styled-components\";\n\n/** The styles for the modal */\nexport const ModalStyles: {\n    /** The content props */\n    content: React.CSSProperties;\n    /** The overlay props */\n    overlay: React.CSSProperties;\n} = {\n    content: {\n        background: \"#1a1a1a\",\n        border: \"solid 1px #666666\",\n        color: \"#b8b8b8\",\n        height: \"150px\",\n        left: \"50%\",\n        maxHeight: \"calc(100% - 40px)\",\n        maxWidth: \"calc(100% - 40px)\",\n        minHeight: \"100px\",\n        minWidth: \"100px\",\n        position: \"absolute\",\n        top: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        width: \"500px\",\n    },\n    overlay: {\n        background: \"#000000AA\"\n    }\n};\n\n/** The container for the modal */\nexport const ModalContainer = styled.div`\n    display: grid;\n    grid-template-columns: auto;\n    grid-template-rows: auto 40px 30px;\n    height: 100%;\n\n    grid-column-gap: 10px;\n\n    color: #cccccc;\n    font-size: 20px;\n`;\n\n/** The dialog for the modal */\nexport const ModalDialog = styled.div`\n    grid-row: 1;\n    margin-left: 10px;\n`;\n\n/** An emphasis on the modal text */\nexport const ModalEmph = styled.span`\n    font-weight: bold;\n    font-style: italic;\n`;\n\n/** The description for the modal */\nexport const ModalDesc = styled.div`\n    grid-row: 2;\n\n    margin-left: 10px;\n    font-weight: bold;\n`;\n\n/** A danger emphasis on modal text */\nexport const ModalDangerEmph = styled.span`\n    color: #f04747;\n`;\n\n/** The buttons on a modal */\nexport const ModalButtons = styled.div`\n    grid-row: 3;\n    text-align: center;\n`;\n\n/** A modal button */\nexport const ModalButton = styled.button`\n    background: #313131;\n    border: none;\n    color: #cccccc;\n\n    padding: 5px 10px;\n    border-radius: 5px;\n\n    margin: 0px 10px;\n\n    &:hover {\n        background: #515151;\n    }\n`;\n\n/** A modal button that represents a dangerous action */\nexport const ModalDangerButton = styled(ModalButton)`\n    color: #f04747;\n    font-weight: bold;\n\n    &:hover {\n        background: #f04747;\n        color: #FFFFFF;\n    }\n`;\n\n/** A modal button that represents a suggested action */\nexport const ModalSuggestedButton = styled(ModalButton)`\n    color: #17831d;\n    font-weight: bold;\n\n    &:hover {\n        background: #17831d;\n        color: #FFFFFF;\n    }\n`;","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { Observer } from \"mobx-react-lite\";\nimport React, { useContext } from \"react\";\nimport ReactModal from \"react-modal\";\nimport { GlobalStateContext, Selection, SelectionType } from \"../state\";\nimport { ModalButton, ModalButtons, ModalContainer, ModalDangerButton, ModalDangerEmph, ModalDesc, ModalDialog, ModalEmph, ModalStyles } from \"../styles/modal\";\n\n/** The props for the delete modal */\ninterface IDeleteModalProps {\n    /** The selection to delete */\n    deleteSelection: Selection;\n    /** A way to change the selection */\n    setDeleteSelection(selection: Selection): void;\n}\n\n/** The delete confirmation modal */\nexport default function DeleteModal({ deleteSelection, setDeleteSelection }: IDeleteModalProps) {\n    const state = useContext(GlobalStateContext);\n\n    const deleteCard = () => {\n        if (deleteSelection.type === SelectionType.Group) {\n            state.select();\n            state.removeGroup(deleteSelection.group);\n        } else if (deleteSelection.type === SelectionType.Card) {\n            state.select(deleteSelection.group);\n            state.groups[deleteSelection.group].removeCard(deleteSelection.card);\n        } else {\n            console.warn(\"Attempted to delete card when no card selected for deletion\");\n        }\n\n        setDeleteSelection({ type: SelectionType.None });\n    };\n    const closeDeleteModal = () => setDeleteSelection({ type: SelectionType.None });\n\n    const confirmationMessage = () => {\n        if (deleteSelection.type === SelectionType.Group) {\n            const group = state.groups[deleteSelection.group];\n\n            return <span>Are you sure you want to delete the group <ModalEmph>{group.name}</ModalEmph> and all of its cards</span>;\n        } else if (deleteSelection.type === SelectionType.Card) {\n            const card = state.groups[deleteSelection.group].cards[deleteSelection.card];\n\n            return <span>Are you sure you want to delete the card <ModalEmph>{card.name}</ModalEmph></span>;\n        } else {\n            return <span>You have reached an invalid state, please press cancel</span>;\n        }\n    };\n\n    return (\n        <ReactModal isOpen={deleteSelection.type !== SelectionType.None} style={ModalStyles}>\n            <ModalContainer>\n                <ModalDialog>\n                    <Observer>{confirmationMessage}</Observer>\n                </ModalDialog>\n                <ModalDesc>\n                    This action is <ModalDangerEmph>irreversible</ModalDangerEmph>\n                </ModalDesc>\n                <ModalButtons>\n                    <ModalButton onClick={closeDeleteModal}>Cancel</ModalButton>\n                    <ModalDangerButton onClick={deleteCard}>Delete</ModalDangerButton>\n                </ModalButtons>\n            </ModalContainer>\n        </ReactModal>\n    );\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport styled from \"styled-components\";\n\n/** The container for the explorer */\nexport const ExplorerContainer = styled.div`\n    display: grid;\n    grid-template-columns: auto;\n    grid-template-rows: 40px calc(100% - 60px);\n\n    grid-column-gap: 10px;\n\n    background: #313131;\n    color: #cccccc;\n\n    height: 100%;\n    overflow: hidden;\n`;\n\n/** Properties for the explorer header */\ninterface IHeaderProps {\n    /** If the view below is scrolled all the way to the top */\n    isTop: boolean;\n}\n\n/** The header component of the explorer */\nexport const ExplorerHeader = styled.div<IHeaderProps>`\n    grid-row: 1;\n    height: 100%;\n\n    padding: 0px 50px;\n\n    margin-left: -50px;\n\n    width: 100%;\n    box-shadow: ${props => props.isTop ? \"none\" : \"0px 10px 10px #000000\"};\n`;\n\n/** The search bar for the explorere */\nexport const ExplorerSearch = styled.div`\n    display: inline-block;\n    width: calc(100% - 60px);\n\n    margin: 8px 5px 8px 10px;\n\n    border: 1px solid transparent;\n\n    padding: 0px 3px;\n\n    background: #555555;\n`;\n\n/** Properties for the explorer header input */\ninterface IHeaderSearchInputProps {\n    /** If the input should be shortened for the x button */\n    short: boolean;\n}\n\n/** The input in the explorer search */\nexport const ExporerSearchInput = styled.input.attrs({\n    type: \"text\"\n}) <IHeaderSearchInputProps>`\n    &::-ms-clear {\n        display: none;\n    }\n    outline: none;\n\n    height: 20px;\n    width: ${props => props.short ? \"calc(100% - 20px)\" : \"calc(100%)\"};\n\n    background: transparent;\n    color: #cccccc;\n    border: none;\n\n    font-size: 15px;\n\n    padding: 0px;\n\n    display: inline-block;\n`;\n\n/** The x button on the explorer */\nexport const ExplorerSearchX = styled.div`\n    height: 20px;\n    font-size: 16px;\n    width: 20px;\n\n    color: #cccccc;\n    text-align: center;\n    display: ${props => props.hidden === true ? \"none\" : \"inline-block\"};\n    position: relative;\n    vertical-align: text-bottom;\n\n    user-select: none;\n\n    &:hover {\n        color: #f04747;\n    }\n\n    svg {\n        position: absolute;\n\n        top: 50%;\n        left: 50%;\n\n        transform: translate(-50%, -50%);\n    }\n`;\n\n/** The add button on the explorer */\nexport const ExplorerAddButton = styled.div`\n    color: #cccccc;\n    text-align: center;\n    display: inline-block;\n    position: relative;\n\n    user-select: none;\n\n    width: 20px;\n    margin: 0 5px;\n\n    &:hover {\n        color: #43b581;\n    }\n`;\n\n/** The exporer groups section props */\ninterface IExplorerGroupsProps {\n    /** If there is smthn dragged over */\n    dragOver: boolean;\n}\n\n/** The groupd section of the explorer */\nexport const ExplorerGroups = styled.div<IExplorerGroupsProps>`\n    grid-row: 2;\n    user-select: none;\n\n    overflow: auto;\n    height: 100%;\n\n    padding: 10px 0px 10px 0px;\n    background: ${props => props.dragOver ? \"#ec52ec80\" : \"none\"};\n`;\n\n/** The highlighted match of the search term */\nexport const ExplorerHighlight = styled.span`\n    background: #ff440041;\n`;","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport styled from \"styled-components\";\n\n/** Props for a component that is selectable */\nexport interface ISelectableProps {\n    /** If the component is selected */\n    selected: boolean;\n}\n\n/** The title to the card group */\nexport const CardGroupTitle = styled.div<ISelectableProps>`\n    padding: 0px 0px 0px 10px;\n    background: ${props => props.selected ? \"#2b5c3b\" : \"none\"};\n\n    &:hover {\n        background: #414141;\n    }\n`;\n\n/** The carat for the card group */\nexport const CardGroupCaret = styled.div`\n    display: inline-block;\n    width: 20px;\n    text-align: center;\n`;\n\n/** The name for the group */\nexport const CardGroupName = styled.div`\n    display: inline-block;\n    font-weight: bold;\n    font-size: 20px;\n`;","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport styled from \"styled-components\";\nimport { ISelectableProps } from \"./cardGroup\";\n\n/** The title to the card group */\nexport const CardTitle = styled.div<ISelectableProps>`\n    min-height: 20px;\n    background: ${props => props.selected ? \"#515151\" : \"none\"};\n\n    &:hover {\n        background: #414141;\n    }\n\n    padding: 3px 0px 3px 30px;\n`;","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { useObserver } from \"mobx-react-lite\";\nimport React, { useContext } from \"react\";\nimport ICard from \"../card/card\";\nimport { GlobalStateContext, SelectionType } from \"../state\";\nimport { CardTitle } from \"../styles/explorer/card\";\nimport { BetterMenuProvider } from \"./ContextMenu\";\nimport { highlightMatches } from \"./Explorer\";\n\n/** The propt */\ninterface IProps {\n    /** The card id */\n    id: number;\n    /** The group id */\n    groupid: number;\n    /** The search term */\n    search: string;\n}\n\n/** Filter for cards */\nexport function cardFilter(filter: string) {\n    return (card: ICard) => (card.name.toLowerCase().includes(filter.toLowerCase()));\n}\n\n/** A card component in the explortr */\nexport default function CardComponent({ groupid, id, search }: IProps) {\n    const state = useContext(GlobalStateContext);\n\n    const select = () => state.select(groupid, id);\n\n    return useObserver(() => {\n        const card = state.groups[groupid].cards[id];\n\n        // Hide the card if there is a search term AND\n        const hidden = search !== \"\" && (\n            // If the group is not selected AND\n            state.selection.type !== SelectionType.Card\n            || state.selection.card !== id\n            || state.selection.group !== groupid\n            // Or if it is a match\n        ) && !cardFilter(search)(card);\n\n        return (\n            <BetterMenuProvider id=\"card-contextmenu\" selection={{ type: SelectionType.Card, card: id, group: groupid }}>\n                <CardTitle\n                    selected={state.selection.type === SelectionType.Card && state.selection.card === id && state.selection.group === groupid}\n                    onClick={select}\n                    hidden={hidden}\n                >\n                    {/* Highlight any text in the card that matches the search query */}\n                    {highlightMatches(card.name, search)}\n                </CardTitle>\n            </BetterMenuProvider>\n        );\n    });\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { faCaretDown, faCaretRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Observer, useObserver } from \"mobx-react-lite\";\nimport React, { useContext, useState } from \"react\";\nimport { GlobalStateContext, SelectionType } from \"../state\";\nimport { CardGroupCaret, CardGroupName, CardGroupTitle } from \"../styles/explorer/cardGroup\";\nimport CardComponent, { cardFilter } from \"./CardComponent\";\nimport { BetterMenuProvider } from \"./ContextMenu\";\nimport { highlightMatches } from \"./Explorer\";\n\n/** The props */\ninterface IProps {\n    /** The card id */\n    id: number;\n    /** The search term */\n    search: string;\n}\n\n/** A component to show a card group in the side panel */\nexport default function CardGroupComponent({ id, search }: IProps) {\n    const [collapsed, setCollapsed] = useState(false);\n    const state = useContext(GlobalStateContext);\n\n    // Hide the group if there is a search term AND\n    const hidden = useObserver(() => search !== \"\" && (\n        // If there are no cards in the group that match the filter\n        state.groups[id].cards.filter(cardFilter(search)).length === 0\n        // AND the name of the group does not match\n        && !state.groups[id].name.toLowerCase().includes(search.toLowerCase())\n        // AND the group is not selected OR any card in the group\n        && !((state.selection.type === SelectionType.Card || state.selection.type === SelectionType.Group) && state.selection.group === id)\n    ));\n\n    const toggleCollapse = () => setCollapsed(!collapsed);\n\n    return useObserver(() => (\n        <BetterMenuProvider id=\"group-contextmenu\" selection={{ type: SelectionType.Group, group: id }}>\n            <div hidden={hidden}>\n                <CardGroupTitle selected={state.selection.type === SelectionType.Group && state.selection.group === id} onClick={toggleCollapse}>\n                    <CardGroupCaret>\n                        <FontAwesomeIcon icon={collapsed ? faCaretRight : faCaretDown} />\n                    </CardGroupCaret>\n                    <CardGroupName>\n                        {/* Highlight any text in the name that matches the search query */}\n                        <Observer>{() => <>{highlightMatches(state.groups[id].name, search)}</>}</Observer>\n                    </CardGroupName>\n                </CardGroupTitle>\n                <div hidden={collapsed}>\n                    <Observer>{() => <>{state.groups[id].cards.map((_, j) => <CardComponent key={j} id={j} groupid={id} search={search} />)}</>}</Observer>\n                </div>\n            </div>\n        </BetterMenuProvider>\n    ));\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Observer } from \"mobx-react-lite\";\nimport React, { ChangeEvent, DragEvent, useContext, useState } from \"react\";\nimport { MenuItemEventHandler, TriggerEvent } from \"react-contexify/lib/types\";\nimport CardGroup from \"../card/cardGroup\";\nimport { GlobalStateContext, Selection, SelectionType } from \"../state\";\nimport { ExplorerAddButton, ExplorerContainer, ExplorerGroups, ExplorerHeader, ExplorerHighlight, ExplorerSearch, ExplorerSearchX, ExporerSearchInput } from \"../styles/explorer\";\nimport { DownloadSelection, loadSelection, textFileReaderAsync } from \"../util/file\";\nimport useIsTop from \"../util/useIsTop\";\nimport CardGroupComponent from \"./CardGroupComponent\";\nimport { BetterMenuProvider } from \"./ContextMenu\";\n\n/** Highlight the matches to the match string */\nexport function highlightMatches(text?: string, match?: string) {\n    // Only spend time spliting if there is a match to look for\n    if (match !== undefined && match !== \"\") {\n        // Split on higlight term and include term into parts, ignore case\n        return text !== undefined && text !== \"\" ?\n            text.split(new RegExp(`(${match.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\")})`, \"gi\"))\n                .map((part, i) => (\n                    // If the part is the same as the search term, give it the class highlight\n                    part.toLowerCase() === match.toLowerCase() ? (\n                        <ExplorerHighlight>\n                            {part}\n                        </ExplorerHighlight>\n                    ) : (\n                            <span key={i}>\n                                {part}\n                            </span>\n                        )\n                )) : undefined;\n    } else {\n        return text;\n    }\n}\n\n/** The args passed to a context menu item when it is clicked */\nexport interface IItemArgs {\n    /** The event that triggered the click */\n    event: TriggerEvent;\n    /** The props passed to the item */\n    props: Selection;\n}\n\n/** The handler type that react-contextify needs */\nexport type ItemHandler<T = void> = (info: MenuItemEventHandler) => T;\n\n/** The explorer view */\nexport default function Explorer() {\n    const [search, setSearch] = useState(\"\");\n    const [isDragOver, setDragOver] = useState(false);\n    const [isTop, onScroll] = useIsTop();\n    const state = useContext(GlobalStateContext);\n\n    const onDragEnter = () => setDragOver(true);\n    const onDragExit = () => setDragOver(false);\n    const onDragOver = (event: DragEvent<HTMLDivElement>) => {\n        event.preventDefault();\n    };\n\n    const onDrop = async (event: DragEvent<HTMLDivElement>) => {\n        event.preventDefault();\n        event.persist();\n\n        setDragOver(false);\n\n        for (let i = 0; i < event.dataTransfer.items.length; i++) {\n            const file = event.dataTransfer.files[i];\n\n            if (file.type === \"application/json\" || file.name.endsWith(\".json\")) {\n                const contents = await textFileReaderAsync(file);\n\n                loadSelection(JSON.parse(contents) as DownloadSelection, state);\n            } else {\n                console.error(`Format \"${file.type}\" unrecognised`);\n            }\n        }\n\n        event.dataTransfer.items.clear();\n    };\n\n    const clearSearch = () => setSearch(\"\");\n    const updateSearch = (e: ChangeEvent<HTMLInputElement>) => setSearch(e.target.value);\n\n    const addGroup = () => {\n        const idx = state.addGroup(new CardGroup(`New Group ${state.groups.length}`));\n        state.select(idx);\n    };\n\n    return (\n        <ExplorerContainer>\n            {/* Search results */}\n            <BetterMenuProvider id=\"none-contextmenu\" selection={{ type: SelectionType.None }}>\n                <ExplorerGroups dragOver={isDragOver} onScroll={onScroll} onDrop={onDrop} onDragEnter={onDragEnter} onDragExit={onDragExit} onDragOver={onDragOver}>\n                    <Observer>{() => <>{state.groups.map((_, i) => <CardGroupComponent key={i} id={i} search={search} />)}</>}</Observer>\n                </ExplorerGroups>\n            </BetterMenuProvider>\n\n            {/* Header */}\n            <ExplorerHeader isTop={isTop}>\n                <ExplorerSearch>\n                    <ExporerSearchInput short={search !== \"\"} value={search} onChange={updateSearch} />\n                    <ExplorerSearchX hidden={search === \"\"} onClick={clearSearch}>\n                        <FontAwesomeIcon icon={faTimes} />\n                    </ExplorerSearchX>\n                </ExplorerSearch>\n                <ExplorerAddButton onClick={addGroup}><FontAwesomeIcon icon={faPlus} /></ExplorerAddButton>\n            </ExplorerHeader>\n        </ExplorerContainer>\n    );\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { UIEvent, useState } from \"react\";\n\n/** Hook to determine if a component is at the top */\nexport default function useIsTop(): [boolean, (event: UIEvent<HTMLDivElement>) => void] {\n    const [isTop, setTop] = useState(true);\n\n    /** Listen for scroll */\n    const onScroll = (event: UIEvent<HTMLDivElement>) => {\n        if (isTop !== (event.currentTarget.scrollTop === 0)) {\n            setTop(event.currentTarget.scrollTop === 0);\n        }\n    };\n\n    return [isTop, onScroll];\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\n/** Check for localhost uri */\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    ) !== null\n);\n\n/** Method to register the service worker */\nexport default function register(setUpdateAvaliable: (is: boolean) => void) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.toString()\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, setUpdateAvaliable);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                        \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\n                    );\n                }).catch(e => console.error(e));\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl, setUpdateAvaliable);\n            }\n        });\n    }\n}\n\n/** Method to register a valid service worker */\nfunction registerValidSW(swUrl: string, setUpdateAvaliable: (is: boolean) => void) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker !== null) {\n                    installingWorker.onstatechange = () => {\n                        if (installingWorker.state === \"installed\") {\n                            if (navigator.serviceWorker.controller !== null) {\n                                // At this point, the old content will have been purged and\n                                // the fresh content will have been added to the cache.\n                                // It's the perfect time to display a 'New content is\n                                // available; please refresh.' message in your web app.\n                                console.log(\"New content is available; please refresh.\");\n                                setUpdateAvaliable(true);\n                            } else {\n                                // At this point, everything has been precached.\n                                // It's the perfect time to display a\n                                // 'Content is cached for offline use.' message.\n                                console.log(\"Content is cached for offline use.\");\n                            }\n                        }\n                    };\n                }\n            };\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\n/** A method to make sure that the service worker exists before usig it */\nfunction checkValidServiceWorker(swUrl: string, setUpdateAvaliable: (is: boolean) => void) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get(\"content-type\")!.indexOf(\"javascript\") === -1 // tslint:disable-line: no-non-null-assertion\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration =>\n                    registration.unregister()\n                        .then(() => {\n                            window.location.reload();\n                        })\n                ).catch(e => console.error(e));\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, setUpdateAvaliable);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\n/** Method to unregister the service worker */\n// ts-unused-exports:disable-next-line\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration =>\n            registration.unregister()\n        ).catch(e => console.error(e));\n    }\n}\n","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport React from \"react\";\nimport ReactModal from \"react-modal\";\nimport { ModalContainer, ModalDangerEmph, ModalDesc, ModalDialog, ModalStyles } from \"./styles/modal\";\n\n/** The props to the rndering modal */\ninterface IRenderingModalProps {\n    /** If the modal should show */\n    show: boolean;\n}\n\n/** The delete confirmation modal */\nexport default function RenderingModal({ show }: IRenderingModalProps) {\n    return (\n        <ReactModal isOpen={show} style={ModalStyles}>\n            <ModalContainer>\n                <ModalDialog>\n                    A rendering task is taking place\n                </ModalDialog>\n                <ModalDesc>\n                    Please <ModalDangerEmph>DO NOT</ModalDangerEmph> leave the page\n                </ModalDesc>\n            </ModalContainer>\n        </ReactModal>\n    );\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { createGlobalStyle } from \"styled-components\";\n\n/** The global styles for all of the app */\nconst GlobalStyles = createGlobalStyle`\n    body,\n    html {\n        margin: 0;\n        padding: 0;\n        font-family: 'Open Sans', sans-serif;\n        overflow: auto;\n        width: 100%;\n        height: 100%;\n    }\n`;\n\nexport default GlobalStyles;","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport React from \"react\";\nimport ReactModal from \"react-modal\";\nimport { ModalButton, ModalButtons, ModalContainer, ModalDialog, ModalStyles, ModalSuggestedButton } from \"./styles/modal\";\n\n/** The props to the update modal */\ninterface IUpdateModalProps {\n    /** The has to act on */\n    show: boolean;\n    /** The action to call when a choice is made */\n    doUpdate(update: boolean): void;\n}\n\n/** The delete confirmation modal */\nexport default function UpdateModal({ doUpdate, show }: IUpdateModalProps) {\n    const callDoUpdate = (update: boolean) => () => doUpdate(update);\n\n    return (\n        <ReactModal isOpen={show} style={ModalStyles}>\n            <ModalContainer>\n                <ModalDialog>\n                    There is a new update! You can choose to update now, or ignore the message.\n                </ModalDialog>\n                <ModalButtons>\n                    <ModalSuggestedButton onClick={callDoUpdate(true)}>Update</ModalSuggestedButton>\n                    <ModalButton onClick={callDoUpdate(false)}>Ignore</ModalButton>\n                </ModalButtons>\n            </ModalContainer>\n        </ReactModal>\n    );\n}","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\nimport { create } from \"mobx-persist\";\nimport React, { createContext, useContext, useEffect, useRef, useState } from \"react\";\nimport RenderedCards, { IRenderedCardsRef } from \"./card/rendered/RenderedCards\";\nimport Editor from \"./editor/Editor\";\nimport { ExplorerContextMenus } from \"./explorer/ContextMenu\";\nimport DeleteModal from \"./explorer/DeleteModal\";\nimport Explorer from \"./explorer/Explorer\";\nimport register from \"./registerServiceWorker\";\nimport RenderingModal from \"./RenderingModal\";\nimport { GlobalStateContext, Selection, SelectionType } from \"./state\";\nimport { AppContainer } from \"./styles/app\";\nimport { ContextMenuStyles } from \"./styles/contextMenu\";\nimport GlobalStyles from \"./styles/global\";\nimport UpdateModal from \"./UpdateModal\";\n\n/**\n * TODO:\n * - Better layout\n * - Printing (double sided)\n */\n\n/** The context for the rendered cards component */\nexport const RenderedCardsContext = createContext<React.RefObject<IRenderedCardsRef>>({ current: null });\n/** The context for the rendering state */\nexport const IsRenderingContext = createContext<[boolean, (value: boolean) => void]>([false, () => void 0]);\n\n/** The main app component */\nexport default function App() {\n    const state = useContext(GlobalStateContext);\n\n    const [isRendering, setIsRendering] = useState(false);\n\n    const cardsRef = useRef<IRenderedCardsRef>(null);\n\n    // Updates\n    const [updateAvaliable, setUpdateAvaliable] = useState(false);\n    const doUpdate = (update: boolean) => {\n        if (update) {\n            console.log(\"%cUser accepting update, reloading\", \"color: goldenrod\");\n            location.reload(); // eslint-disable-line\n        } else {\n            console.log(\"%cUser ignored update\", \"color: goldenrod\");\n        }\n\n        // Hide prompt\n        setUpdateAvaliable(false);\n    };\n\n    useEffect(() => {\n        // Setup Mobx-Persist\n        const hydrate = create({\n            jsonify: true,\n            storage: localStorage\n        });\n\n        hydrate(\"state\", state);\n\n        // Setup service worker\n        register(setUpdateAvaliable);\n\n        // Disable context menu\n        document.oncontextmenu = (e) => {\n            e.preventDefault();\n        };\n        // eslint-disable-next-line\n    }, []);\n\n    const [deleteSelection, setDeleteSelection] = useState<Selection>({ type: SelectionType.None });\n\n    return (\n        <AppContainer>\n            <RenderedCardsContext.Provider value={cardsRef}>\n                <IsRenderingContext.Provider value={[isRendering, setIsRendering]}>\n                    {/* Global styles */}\n                    <GlobalStyles />\n                    <ContextMenuStyles />\n\n                    {/* The exporer view */}\n                    <Explorer />\n                    <ExplorerContextMenus setDeleteSelection={setDeleteSelection} />\n                    <DeleteModal setDeleteSelection={setDeleteSelection} deleteSelection={deleteSelection} />\n\n                    {/* The editor */}\n                    <Editor />\n\n                    {/* The card renders */}\n                    <RenderedCards ref={cardsRef} />\n\n                    {/* The update modal */}\n                    <UpdateModal doUpdate={doUpdate} show={updateAvaliable} />\n\n                    {/* The rendering modal */}\n                    <RenderingModal show={isRendering} />\n                </IsRenderingContext.Provider>\n            </RenderedCardsContext.Provider>\n        </AppContainer>\n    );\n}\n","/*!\n * Copyright (C) 2018-2020  Zachary Kohnen (DusterTheFirst)\n */\n\n// tslint:disable-next-line: no-import-side-effect\nimport \"mobx-react-lite/batchingForReactDom\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ReactModal from \"react-modal\";\nimport App from \"./App\";\n\nReactModal.setAppElement(\"#root\");\n\nReactDOM.render(\n    <App />,\n    document.getElementById(\"root\") as HTMLElement\n);"],"sourceRoot":""}